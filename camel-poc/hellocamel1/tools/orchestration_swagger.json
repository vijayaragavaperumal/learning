{
  "swagger": "2.0",
  "info": {
    "description": "<h2><b>Orchestration</b></h2><p><b>Orchestration</b> is to handle the interactions between different services in Service-Oriented Architecture. Typically one controller that acts as the \"orchestrator\" of the overall service interactions. This generally follows a request/response type pattern.</p><p>The orchestration is to streamline and optimize frequent, repeatable processes to ensure accurate,and quick end-to-end processing as services can be executed in parallel/asynchronously.</p>",
    "version": "8.6.0",
    "title": "Orchestration Services"
  },
  "host": "localhost:8090",
  "basePath": "/orchestrationservices/storefront",
  "tags": [
    {
      "name": "Accounts",
      "description": "Accounts Orchestration API's for store front operation."
    },
    {
      "name": "Carts",
      "description": "Cart and Checkout Orchestration API's for store front operation."
    },
    {
      "name": "Catalogs",
      "description": "Catalog Orchestration API's for store front operation."
    },
    {
      "name": "Customers",
      "description": "Customer Orchestration API's for store front operation."
    },
    {
      "name": "Lists",
      "description": "List Orchestration API's for store front operation."
    },
    {
      "name": "Orders",
      "description": "OMS Orchestration API's for store front operation. "
    },
    {
      "name": "Subscriptions",
      "description": "Subscriptions Orchestration API's for store front operation."
    },
    {
      "name": "Ping",
      "description": "Orchestration Ping API for store front operation"
    },
    {
      "name": "Cache",
      "description": "Orchestration Clear Cache API for store front operation"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/accounts": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Create an Account and Invite Customer as an Admin",
        "description": "This API creates the buyer account with basic buyer information. On successful account creation, the buyer receives a user invite for activation. The status of the created buyer account is displayed as “NOT ACTIVATED” state and the buyer can activate the account via the received invitation.",
        "operationId": "createAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the AccountCreateRequest request object, which contains the account and customer information for creating an account. The AccountCreateRequest request is given in the form of a JSON array object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "$ref": "#/definitions/AccountsDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/AccountsDTO"
            }
          },
          "201": {
            "description": "Account Created Successfully",
            "schema": {
              "$ref": "#/definitions/AccountsDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/AccountsDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/accounts/{accountId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Load an Account",
        "description": "This API retrieves the account information, such as account details, properties, address, team, and team buyer information for the given account identifier.",
        "operationId": "getAccount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/AccountsDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/AccountsDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
        "/accounts/{accountId}/{buyerUserId}/roles": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Load Roles of a Buyer Account",
        "operationId": "getRolesOfUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buyerUserId",
            "in": "path",
            "description": "Refers to the user account ID of the buyer account.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserRolesResponse"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserRolesResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/accounts/{accountId}/addresses": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Load all Address from Account",
        "operationId": "getAllAccountAddressRest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to be retrieved where the size of the page must be specified by the size, offset, or pageSize parameter. The first page starts with the value \"1\".",
            "required": true,
            "type": "number",
            "default": 1.0
          },
          {
            "name": "size",
            "in": "query",
            "description": "The number of documents being retrieved on the corresponding page specified by the page parameter.",
            "required": true,
            "type": "number",
            "default": 10.0
          },
          {
            "name": "filter",
            "in": "query",
            "description": "This field holds the simple query criteria (can be multiple) based on the available fields to limit returned results. Syntax of this parameter is <b>FIELDNAME</b><b> OP </b><b>VALUE</b>\n<b>Example 1: </b> field1:value, field2:value\n<b>Example 2: </b> field1>value\nwhere: <ul><li><b> FIELDNAME</b> is the entity's attribute name as represented in the response object</li><li><b>OP</b> is the operation - Possible values includes<ul><li><i>LIKE(:) - Loads everything similar (like operation) to the given value.</i></li><li><i>GREATERTHAN (>) For integer values. Loads rows whose column(field) value is greater than the given value</i></li><li><i>LESSTHAN (<) or integer values -  For integer values. Loads rows whose column(field) value is less than the given value</i></li></ul></li><li><b>VALUE</b> is the value against which the operation has to be performed on the field</li></ul>Kindly note: <ul><li><i>filters</i> parameter can have multiple objects.</li><li>When multiple attributes are used in filter <i>AND</i> behavior is applied.</li></ul>",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Refers to the sort parameter using which the response will be sorted according to the given sort parameter.<br/><br/>For example,<br/><ul><li>id,ASC - Sorts the response in the ascending order of the ID.</li><li>ID,DESC - Sorts the response in the descending order of the ID.</li></ul>",
            "required": false,
            "type": "string",
            "default": "id,ASC"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AddressesDTO"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AddressesDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Create an Address for Account",
        "operationId": "createAccountAddressRest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the AddressDTO request object, which contains the address details. The AddressDTO request is given in the form of a JSON object. An incorrect JSON will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddressesDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "$ref": "#/definitions/AddressesDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/AddressesDTO"
            }
          },
          "201": {
            "description": "Address Created Successfully",
            "schema": {
              "$ref": "#/definitions/TeamsDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/TeamsDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/accounts/{accountId}/addresses/{addressId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get an Address from Account",
        "operationId": "getAccountAddressRest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "Refers to a unique identifier of the team for the account.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/AddressesDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/AddressesDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Update an Address to Account",
        "operationId": "patchUpdateAccountAddressRest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "Refers to a unique identifier of the team for the account.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the AddressDTO request object, which contains the address details. The AddressDTO request is given in the form of a JSON object. An incorrect JSON will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddressesDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/AddressesDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/AddressesDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/accounts/{accountId}/buyers": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Load an Account Buyer Info",
        "operationId": "getAccountAccountBuyer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountBuyerResponse"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountBuyerResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/accounts/{accountId}/buyers/costcentres": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Load All CostCentres of a Buyer",
        "operationId": "getUserCostCentres",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CostCentreResponse"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CostCentreResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/accounts/{accountId}/buyers/costcentres/{costCentreId}/validateOrderAmount": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Validate Buyers Order Amount",
        "operationId": "buyerOrderAmountValidate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderAmount",
            "in": "query",
            "description": "The buyers order amount",
            "required": true,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "costCentreId",
            "in": "path",
            "description": "Refers to the unique identifier of the cost center which is to be retrieved. It is generated automatically when a cost center is created. A valid cost center should be present for the given ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "422": {
            "description": "Not Ok",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/accounts/{accountId}/buyers/roles": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Load All Available Roles of a Buyer Account",
        "operationId": "getRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoleResponse"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoleResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/accounts/{accountId}/buyers/roles/{roleName}/privileges": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Load Privileges of a Buyer Role",
        "operationId": "getRolesPrivileges",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleName",
            "in": "path",
            "description": "Refers to the name of a role assigned to a buyer account.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PrivilegeResponse"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PrivilegeResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/accounts/{accountId}/buyers/roles/privileges": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Load All Privileges of a Buyer Role",
        "operationId": "getAllPrivilegeGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PrivilegeResponse"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PrivilegeResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/accounts/{accountId}/contracts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Load All Contracts",
        "operationId": "getAllContracts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Refers to the sort parameter using which the response will be sorted according to the given sort parameter.<br/><br/>For example,<br/><ul><li>id,ASC - Sorts the response in the ascending order of the ID.</li><li>ID,DESC - Sorts the response in the descending order of the ID.</li></ul>",
            "required": false,
            "type": "string",
            "default": "id,ASC"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContractsDTO"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContractsDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/accounts/{accountId}/costcentre": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Find All Cost Centers",
        "operationId": "GetCostCentres",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Cost Centers retrieved Successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CostCentreResponse"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CostCentreResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Create a Cost Center",
        "operationId": "createCostCentre",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the CostCentreRequest request object, which contains the CostCentre information for creating an CostCentre. The CostCentreRequest request is given in the form of a JSON object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CostCentreRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cost Center Created Successfully",
            "schema": {
              "$ref": "#/definitions/CostCentreResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/CostCentreResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/accounts/{accountId}/costcentre/{costCentreId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get a Cost Center",
        "operationId": "GetCostCentre",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "costCentreId",
            "in": "path",
            "description": "Refers to the unique identifier of the cost center which is to be retrieved. It is generated automatically when a cost center is created. A valid cost center should be present for the given ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Cost Center retrieved Successfully",
            "schema": {
              "$ref": "#/definitions/CostCentreResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/CostCentreResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Accounts"
        ],
        "summary": "Deactivate a Cost Center",
        "operationId": "DeleteCostCentre",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "costCentreId",
            "in": "path",
            "description": "Refers to the unique identifier of the cost center which is to be retrieved. It is generated automatically when a cost center is created. A valid cost center should be present for the given ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Update a Cost Center",
        "operationId": "UpdateCostCentre",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "costCentreId",
            "in": "path",
            "description": "Refers to the unique identifier of the cost center which is to be retrieved. It is generated automatically when a cost center is created. A valid cost center should be present for the given ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the CostCentersDTO request object, which contains the CostCentre information for updating an CostCentre. The CostCentersDTO request is given in the form of a JSON object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CostCentersDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cost Center updated Successfully",
            "schema": {
              "$ref": "#/definitions/CostCentreResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/CostCentreResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/accounts/{accountId}/costcentre/{costCentreId}/budgets": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get All Budget",
        "operationId": "getAllBudgets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "costCentreId",
            "in": "path",
            "description": "Refers to the unique identifier of the cost center which is to be retrieved. It is generated automatically when a cost center is created. A valid cost center should be present for the given ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BudgetsDTO"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BudgetsDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Add a Budget to a CostCentre for an Team",
        "operationId": "createABudgetRest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "costCentreId",
            "in": "path",
            "description": "Refers to the unique identifier of the cost center which is to be retrieved. It is generated automatically when a cost center is created. A valid cost center should be present for the given ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the BudgetRequest request object, which contains the budget information for creating an budget. The BudgetRequest request is given in the form of a JSON object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BudgetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Budget Created Successfully",
            "schema": {
              "$ref": "#/definitions/BudgetsDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/BudgetsDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/accounts/{accountId}/costcentre/{costCentreId}/budgets/{budgetId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get A Budget",
        "operationId": "getABudgetRest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "costCentreId",
            "in": "path",
            "description": "Refers to the unique identifier of the cost center which is to be retrieved. It is generated automatically when a cost center is created. A valid cost center should be present for the given ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "budgetId",
            "in": "path",
            "description": "Refers to the unique identifier of the budget which is to be retrieved. The budget should be associated with the given cost center ID. A valid budget should exist for the given budget ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/BudgetsDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/BudgetsDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Accounts"
        ],
        "summary": "Remove a Budget from a CostCentre for an Team",
        "operationId": "deleteABudgetRest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "costCentreId",
            "in": "path",
            "description": "Refers to the unique identifier of the cost center which is to be retrieved. It is generated automatically when a cost center is created. A valid cost center should be present for the given ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "budgetId",
            "in": "path",
            "description": "Refers to the unique identifier of the budget which is to be retrieved. The budget should be associated with the given cost center ID. A valid budget should exist for the given budget ID.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Update a Budget to a CostCentre for an Team",
        "operationId": "patchUpdateBudgetRest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "costCentreId",
            "in": "path",
            "description": "Refers to the unique identifier of the cost center which is to be retrieved. It is generated automatically when a cost center is created. A valid cost center should be present for the given ID.",
            "required": true,
            "type": "string"
          },
          {
            "name": "budgetId",
            "in": "path",
            "description": "Refers to the unique identifier of the budget which is to be retrieved. The budget should be associated with the given cost center ID. A valid budget should exist for the given budget ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the BudgetRequest request object, which contains the budget information for updating an budget. The BudgetRequest request is given in the form of a JSON object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BudgetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Budget Updated Successfully",
            "schema": {
              "$ref": "#/definitions/BudgetsDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/BudgetsDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/accounts/{accountId}/team": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Load All Teams",
        "operationId": "getAllTeams",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to be retrieved where the size of the page must be specified by the size, offset, or pageSize parameter. The first page starts with the value \"1\".",
            "required": true,
            "type": "number",
            "default": 1.0
          },
          {
            "name": "size",
            "in": "query",
            "description": "The number of documents being retrieved on the corresponding page specified by the page parameter.",
            "required": true,
            "type": "number",
            "default": 10.0
          },
          {
            "name": "filter",
            "in": "query",
            "description": "This field holds the simple query criteria (can be multiple) based on the available fields to limit returned results. Syntax of this parameter is <b>FIELDNAME</b><b> OP </b><b>VALUE</b>\n<b>Example 1: </b> field1:value, field2:value\n<b>Example 2: </b> field1>value\nwhere: <ul><li><b> FIELDNAME</b> is the entity's attribute name as represented in the response object</li><li><b>OP</b> is the operation - Possible values includes<ul><li><i>LIKE(:) - Loads everything similar (like operation) to the given value.</i></li><li><i>GREATERTHAN (>) For integer values. Loads rows whose column(field) value is greater than the given value</i></li><li><i>LESSTHAN (<) or integer values -  For integer values. Loads rows whose column(field) value is less than the given value</i></li></ul></li><li><b>VALUE</b> is the value against which the operation has to be performed on the field</li></ul>Kindly note: <ul><li><i>filters</i> parameter can have multiple objects.</li><li>When multiple attributes are used in filter <i>AND</i> behavior is applied.</li></ul>",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Refers to the sort parameter using which the response will be sorted according to the given sort parameter.<br/><br/>For example,<br/><ul><li>id,ASC - Sorts the response in the ascending order of the ID.</li><li>ID,DESC - Sorts the response in the descending order of the ID.</li></ul>",
            "required": false,
            "type": "string",
            "default": "id,ASC"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamsDTO"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamsDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Create a Team",
        "operationId": "createATeamRest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the TeamsRequest request object, which contains the team and customer details. The TeamsRequest request is given in the form of a JSON array object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/TeamsDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/TeamsDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/accounts/{accountId}/team/{teamId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get A Team",
        "operationId": "getATeamRest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Refers to a unique identifier of the team for the account.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/TeamsDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/TeamsDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Accounts"
        ],
        "summary": "Remove an Team from Account",
        "operationId": "deleteATeamRest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Refers to a unique identifier of the team for the account.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Patch Update a Team",
        "operationId": "patchUpdateTeamRest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Refers to a unique identifier of the team for the account.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the TeamsRequest request object, which contains the team and customer details. The TeamsRequest request is given in the form of a JSON array object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/TeamsDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/TeamsDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
      },
    "/accounts/{accountId}/teams/{teamId}": {
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Add a Customer to a Team for an Account",
        "description": "This API associates or maps the user to a particular team with the standard role (Buyer User). The customer gets created as \"NOT ACTIVATED\" status as per the request. The created customer will be associated as team buyer for the specified account identifier and team identifier. The ROLE_BUYER role is assigned to the created customer.",
        "operationId": "updateAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Refers to a unique identifier of the team for the account.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the TeamsRequest request object, which contains the team and customer details. The TeamsRequest request is given in the form of a JSON array object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TeamsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/TeamsDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/TeamsDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/accounts/{accountId}/teams/{teamId}/buyers/{buyerId}": {
      "delete": {
        "tags": [
          "Accounts"
        ],
        "summary": "Remove a Customer from a Team for an Account",
        "description": "This API removes the customer from the team for an account. This API disassociates the customer from the specified team and account using the team buyer ID.",
        "operationId": "deleteAccount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Refers to a unique identifier of the account to be loaded.",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "Refers to a unique identifier of the team for the account.",
            "required": true,
            "type": "string"
          },
          {
            "name": "buyerId",
            "in": "path",
            "description": "Indicates a unique identifier of the buyer which is to be deleted. This identifier is generated automatically when a buyer is created. In this, the buyer identifier is different from the user identifier. Here, the buyer identifier is generated when the user gets mapped to the team for an account.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/carts/{cartType}": {
      "get": {
        "tags": [
          "Carts"
        ],
        "summary": "Get Calculated Cart",
        "description": "This API returns the calculated cart (such as, cart item details, promotions/offers, cart amount summary, etc) applied to a customer based on the cartType.",
        "operationId": "getCartByType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          }
        ],
        "responses": {
          "200": {
            "description": "Received Successfully",
            "schema": {
              "$ref": "#/definitions/SFCart"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFCart"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Carts"
        ],
        "summary": "Create a Cart by Cart Type",
        "description": "This API creates a cart for the cutomer based on the cart type.",
        "operationId": "createCartByType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the SFCart request, which contains the details to create a cart for the customer based on the cart type. The value should be given in the JSON format. An incorrect JSON object will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SFCart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "$ref": "#/definitions/SFCart"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFCart"
            }
          },
          "201": {
            "description": "Created Successfully",
            "schema": {
              "$ref": "#/definitions/SFCart"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFCart"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Carts"
        ],
        "summary": "Delete a Cart",
        "description": "This API deletes a cart for a registered/guest user based on the cartType.",
        "operationId": "deleteCartByType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          }
        ],
        "responses": {
          "202": {
            "description": "Deleted Successfully"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Carts"
        ],
        "summary": "Update Cart Attributes",
        "description": "This API updates the cart attribute's value for the specified customer based on the given cartType. The following are the attributes that can be updated:\n\n1. isdeliveredalone\n2. deliverytype\n3. deliveryoption\n4. deliveryinstructions\n5. deliveronorbefore\n6. storeId\n7. address (All attributes except the validation attributes)\n8. properties\n9. removeproperties\n10. firstName\n11. lastName\n12. phone\n13. email\n14. zipCode\n15. preferredContactMethod\n16. codes\n17. verifiedLimit\n18. verifiedUsing\n19. idNumber\n20. estimationAddress (All attributes)",
        "operationId": "updateCartByType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the SFCart request, which contains the details to update a cart for the customer based on the cart type. The value should be given in the JSON format. An incorrect JSON object will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SFCart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "$ref": "#/definitions/SFCart"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFCart"
            }
          },
          "202": {
            "description": "Updated Successfully",
            "schema": {
              "$ref": "#/definitions/SFCartResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFCartResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/carts/{cartType}/items": {
      "get": {
        "tags": [
          "Carts"
        ],
        "summary": "Get All Cart Items",
        "description": "This API obtains all items and its information from the cart for the specified customer based on the cartType.",
        "operationId": "getAllCartItemsByType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          }
        ],
        "responses": {
          "200": {
            "description": "Received Successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SFItem"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SFItem"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Carts"
        ],
        "summary": "Add Multiple Cart Items",
        "description": "This API adds one or more items to the cart for the customer based on the cartType.",
        "operationId": "addItemsToBagByType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the list of SFItem request, which contains the details to add one or more items to a cart for the customer based on the cart type. The value should be given in the JSON format. An incorrect JSON object will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SFItem"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SFItem"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SFItem"
              }
            }
          },
          "201": {
            "description": "Added Successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SFItem"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SFItem"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Carts"
        ],
        "summary": "Delete All Cart Items",
        "description": "This API deletes all items from the cart based on the cartType for a registered or guest customer.",
        "operationId": "deleteAllItemsFromBagByCartType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          }
        ],
        "responses": {
          "202": {
            "description": "Deleted Successfully"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/carts/{cartType}/items/{itemId}": {
      "get": {
        "tags": [
          "Carts"
        ],
        "summary": "Get a Cart Item",
        "description": "This API obtains the item information in the cart based on the cartType for a registered/guest customer.",
        "operationId": "getCartItemById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "Indicates a unique identifier of the item on which the item operation is performed. This is a mandatory parameter. It should not be null or empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Received Successfully",
            "schema": {
              "$ref": "#/definitions/SFItem"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFItem"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Carts"
        ],
        "summary": "Delete a Cart Item",
        "operationId": "deleteItemFromBagById",
        "description": "This API deletes the item from the cart. Deleting the item will also delete all the information associated with that item.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "Indicates a unique identifier of the item on which the item operation is performed. This is a mandatory parameter. It should not be null or empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Deleted Successfully"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Carts"
        ],
        "summary": "Update a Cart Item",
        "description": "This API updates the item information in the cart. The following are the attributes that can be updated for an item.\n\n1. quantity,\n2. variablepriceopted\n3. optionaskuquantity,\n4. cashtopurchase,\n5. pointstopurchase,\n6. isdeliveredalone\n7. deliverytype\n8. deliveryoption\n9. deliveryinstructions\n10. deliveronorbefore\n11. storeid\n12. address (All attributes except the validation attributes)\n13. properties\n14. properties\n15. removeproperties",
        "operationId": "updateBagItemById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "Indicates a unique identifier of the item on which the item operation is performed. This is a mandatory parameter. It should not be null or empty.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the SFItem request, which contains the details to update an item in a cart for the customer based on the cart type. The value should be given in the JSON format. An incorrect JSON object will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SFItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "$ref": "#/definitions/SFItem"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFItem"
            }
          },
          "201": {
            "description": "Updated Successfully",
            "schema": {
              "$ref": "#/definitions/SFItem"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFItem"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/carts/{cartType}/payments": {
      "get": {
        "tags": [
          "Carts"
        ],
        "summary": "Get All Payments in a Cart",
        "description": "This API retrieves all the payments available in the cart for the customer based on the cartType.",
        "operationId": "getCartPayments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          }
        ],
        "responses": {
          "200": {
            "description": "Received Successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentOrchestration"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentOrchestration"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Carts"
        ],
        "summary": "Add Multiple Payments in a Cart",
        "description": "This API creates one or more payments in a cart based on the Payment request for the customer based on the cardType.",
        "operationId": "createCartPayments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the Payment request, which contains the details to add multiple payments for the customer based on the cart type. The value should be given in the JSON format. An incorrect JSON object will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentOrchestration"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentOrchestration"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentOrchestration"
              }
            }
          },
          "201": {
            "description": "Added Successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentOrchestration"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentOrchestration"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Carts"
        ],
        "summary": "Delete All Payments from a Cart",
        "description": "This API deletes all payments from the cart for the requested customer based on the cardType. Deleting a parent payment will also delete all the child entities associated with it. This will delete the Billing Address, Payment Provider, Payment Items, and transactions.",
        "operationId": "deleteCartPayments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted Successfully"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Carts"
        ],
        "summary": "Update Multiple Payments in a Cart",
        "description": "This API updates the payment information in the cart for the requested customer based on the cardType. The following are the attributes that can be updated for a payment.\n\n1. type\n2. valueType\n3. value\n4. accountInfo (All attributes)\n5. billingAddress (All attributes)\n6. properties",
        "operationId": "restAllPatchPayment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the list of Payments request, which contains the details to update multiple payments for the customer based on the cart type. The value should be given in the JSON format. An incorrect JSON object will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "List[com.skava.orchestration.model.common.PaymentOrchestration]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentOrchestration"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentOrchestration"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/carts/{cartType}/payments/{paymentId}": {
      "get": {
        "tags": [
          "Carts"
        ],
        "summary": "Get a Payment in a Cart",
        "description": "This API retrieves a payment based on the payment ID from the cart for the requested customer based on the cartType.",
        "operationId": "getCartPaymentByPaymentId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "Indicates a unique payment identifier specifying on which the payment operation is performed. This is a mandatory parameter. It should not be null or empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Received Successfully",
            "schema": {
              "$ref": "#/definitions/PaymentOrchestration"
            },
            "responseSchema": {
              "$ref": "#/definitions/PaymentOrchestration"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Carts"
        ],
        "summary": "Delete a Payment from a Cart",
        "description": "This API deletes a payment based on the payment ID from the cart for the requested customer based on the cartType. Deleting a parent Payment will also delete all the child entities associated with it. This will delete the Billing Address, Payment Provider, Payment Items, accountInfo, payment properties and transactions under the deleted payment.",
        "operationId": "deleteCartPaymentById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Store identifier where the service is requested from. This store identifier will be used for fetching collections of micro services. This is a mandatory parameter. It should not be null or empty.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "Indicates a unique payment identifier specifying on which the payment operation is performed. This is a mandatory parameter. It should not be null or empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted Successfully"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Carts"
        ],
        "summary": "Update a Payment in a Cart",
        "description": "This API updates the payment information in the cart for the requested customer based on the cartType based on the payment ID. The following are the attributes that can be updated for a payment:\n\n1. type\n2. valueType\n3. value\n4. accountInfo (All attributes)\n5. billingAddress (All attributes)\n6. properties",
        "operationId": "updateCartPaymentById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "Indicates a unique payment identifier specifying on which the payment operation is performed. This is a mandatory parameter. It should not be null or empty.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the Payment request, which contains the details to update a payment in a cart for the customer based on the cart type. The value should be given in the JSON format. An incorrect JSON object will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentOrchestration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Successfully",
            "schema": {
              "$ref": "#/definitions/PaymentOrchestration"
            },
            "responseSchema": {
              "$ref": "#/definitions/PaymentOrchestration"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/carts/{cartType}/promos": {
      "get": {
        "tags": [
          "Carts"
        ],
        "summary": "Get All Promocodes in a Cart",
        "description": "This API obtains all promocodes with item information in the cart based on the cartType.",
        "operationId": "getAllPromocodesFromBag",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          }
        ],
        "responses": {
          "200": {
            "description": "Loaded Successfully",
            "schema": {
              "$ref": "#/definitions/AddPromotionToCartResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/AddPromotionToCartResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Carts"
        ],
        "summary": "Add Multiple Promocodes in a Cart",
        "description": "This API adds one or more promocodes to the cart based on the cartType.",
        "operationId": "addPromocodesToBag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the list of PromotionCode request, which contains the details to add multiple promocodes to a cart for the customer based on the cart type. The value should be given in the JSON format. An incorrect JSON object will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PromotionCode"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PromotionCode"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PromotionCode"
              }
            }
          },
          "201": {
            "description": "Created Successfully",
            "schema": {
              "$ref": "#/definitions/AddPromotionToCartResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/AddPromotionToCartResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Carts"
        ],
        "summary": "Delete All Promocodes from a Cart",
        "description": "This API deletes all promocodes from the cart based on the cartType.",
        "operationId": "deleteAllPromocodesFromBag",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          }
        ],
        "responses": {
          "202": {
            "description": "Deleted Successfully"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/carts/{cartType}/promos/{promocode}": {
      "get": {
        "tags": [
          "Carts"
        ],
        "summary": "Get a Promocode from a Cart",
        "description": "This API obtains the promotion information from the cart based on the given promocode and cartType.",
        "operationId": "getPromocodeFromBag",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          },
          {
            "name": "promocode",
            "in": "path",
            "description": "Refers to the promocode. This is a mandatory parameter. It should not be null or empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Loaded Successfully",
            "schema": {
              "$ref": "#/definitions/PromotionCode"
            },
            "responseSchema": {
              "$ref": "#/definitions/PromotionCode"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Carts"
        ],
        "summary": "Delete a Promocode from Cart",
        "description": "This API deletes the promotion information from the cart based on the given promocode and cartType.",
        "operationId": "deletePromocodeFromBag",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          },
          {
            "name": "promocode",
            "in": "path",
            "description": "Refers to the promocode. This is a mandatory parameter. It should not be null or empty.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "$ref": "#/definitions/DeleteResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/DeleteResponseModel"
            }
          },
          "202": {
            "description": "Deleted Successfully",
            "schema": {
              "$ref": "#/definitions/DeleteResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/DeleteResponseModel"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/carts/checkoutservice/orders/{cartType}": {
      "get": {
        "tags": [
          "Carts"
        ],
        "summary": "Get an Order Confirmation",
        "description": "This API obtains order confirmation with all the cart details before submitting the order. The order confirmation is obtained based on the cartType.",
        "operationId": "getOrderConfirmation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          }
        ],
        "responses": {
          "200": {
            "description": "Loaded Successfully",
            "schema": {
              "$ref": "#/definitions/SFCart"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFCart"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Carts"
        ],
        "summary": "Create an Order from a Cart",
        "description": "This API creates an order from the cart. Once the order is successfully created, the cart will be deleted based on the cartType.",
        "operationId": "createOrderForCart",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "cartType",
            "in": "path",
            "description": "Refers to the type of cart. Currently, it supports only the USER cart type. This is a mandatory parameter. It should not be null or empty. There can be only one cart per cartType for a user.",
            "required": true,
            "type": "string",
            "default": "USER"
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "$ref": "#/definitions/Order"
            },
            "responseSchema": {
              "$ref": "#/definitions/Order"
            }
          },
          "201": {
            "description": "Created Successfully",
            "schema": {
              "$ref": "#/definitions/Order"
            },
            "responseSchema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/carts/subscriptions/confirm": {
      "post": {
        "tags": [
          "Carts"
        ],
        "summary": "Create Subscription",
        "operationId": "createSubscriptionsRest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "$ref": "#/definitions/SFSubscriptionResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFSubscriptionResponse"
            }
          },
          "201": {
            "description": "Subscription Successfully",
            "schema": {
              "$ref": "#/definitions/SFSubscriptionResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFSubscriptionResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/carts/subscriptions/firstdeliverydate": {
      "get": {
        "tags": [
          "Carts"
        ],
        "summary": "Returns First Delivery Date",
        "operationId": "findFirstDeliveryDateRest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "requestedDeliveryDate",
            "in": "query",
            "description": "Hold the timestamp value for requested delivery date.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Received Successfully",
            "schema": {
              "$ref": "#/definitions/SFSubscriptionItemDeliveryDate"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFSubscriptionItemDeliveryDate"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/catalogs/categories/{categoryId}": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "summary": "Load All Category Lists",
        "description": "This API retrieves all the category list based on the given category ID and the category hierarchy level.",
        "operationId": "getCategoryById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "Refers to a unique identifier of the category.",
            "required": true,
            "type": "string"
          },
          {
            "name": "multilevel",
            "in": "query",
            "description": "Refers to the category hierarchy level. The default value is -1. The category list gets loaded based on the category hierarchy level. The default category level is -1, which means that it returns all the category list. For example, Mobiles and tablets are at the category level 0 and mobile brand are at the category level 1, mobile cases are at the category level 2. If the given level given is -1 , then all the levels, that is, all the category list will be loaded. If the level is mentioned as 1, only the mobile brand category list will be loaded.",
            "required": false,
            "type": "integer",
            "default": -1
          },
          {
            "name": "includeParent",
            "in": "query",
            "description": "Indicates a response includes a parent category.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "Received Successfully",
            "schema": {
              "$ref": "#/definitions/CategoryResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/CategoryResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/catalogs/categories/{categoryId}/products": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "summary": "Load All Products of a Category",
        "description": "This API retrieves the list of products under the specified category which includes SKU, pricing, inventory, and promotion details.",
        "operationId": "getProductList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "categoryId",
            "in": "path",
            "description": "Refers to a unique identifier of the category.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Holds the simple or complex query criteria based on the available fields to filter and  return back the results. Syntax of this parameter is {\"filters\":[{\"field\":\"<b>FIELDNAME</b>\",\"operation\":\"<b>OP</b>\",\"value\":\"<b>VALUE</b>\"}]} where: <ul><li><b>FIELDNAME</b> is the entity's attribute name as represented in the response object</li><li><b>OP</b> is the operation - Possible values includes<ul><li>EQUALS</i></li><li><i>EQUALS_IGNORECASE</i></li><li><i>GREATERTHAN</i></li><li><i>LESSTHAN</li><li>GREATHERTHANEQUAL</i></li><li><i>LESSTHANEQUAL</i></li><li><i>LIKE</i></li></ul></li><li><b>VALUE</b> is the value against which the operation has to be performed on the field</li></ul>Note: <ul><li>This parameter can have multiple objects.</li><li>When multiple attributes are used in filter, <i>AND</i> behavior is applied.</li></ul>",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Refers to the sort parameter using which the response will be sorted according to the given sort parameter. The syntax of this parameter is: <font face=\"courier\">{\"sort\":[{\"field\":\"status\",\"direction\":\"ASC\"}, {\"field\":\"status\",\"direction\":\"DESC\"}]}</font>.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to be retrieved where the size of the page must be specified by the size, offset, or pageSize parameter. The first page starts with the value \"1\".",
            "required": true,
            "type": "integer",
            "default": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "The number of documents being retrieved on the corresponding page specified by the page parameter.",
            "required": true,
            "type": "integer",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Received Successfully",
            "schema": {
              "$ref": "#/definitions/PLPResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/PLPResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/catalogs/products/{productId}": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "summary": "Load a Product",
        "description": "This API loads the product information based on the given product ID, which includes SKU, pricing, inventory, and promotion details.",
        "operationId": "getProductById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Refers to a unique identifier of the product.",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "Refers to a unique identifier of the category.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Received Successfully",
            "schema": {
              "$ref": "#/definitions/PDPResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/PDPResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/catalogs/search": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "summary": "Load Products by Search Term",
        "description": "This API loads the list of prodcuts based on the given searchTerm, which includes SKU, pricing, inventory, and promotion details.",
        "operationId": "search",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "searchTerm",
            "in": "query",
            "description": "Holds the value to be searched in the products of a catalog.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Holds the simple or complex query criteria based on the available fields to filter and  return back the results. Syntax of this parameter is {\"filters\":[{\"field\":\"<b>FIELDNAME</b>\",\"operation\":\"<b>OP</b>\",\"value\":\"<b>VALUE</b>\"}]} where: <ul><li><b>FIELDNAME</b> is the entity's attribute name as represented in the response object</li><li><b>OP</b> is the operation - Possible values includes<ul><li>EQUALS</i></li><li><i>EQUALS_IGNORECASE</i></li><li><i>GREATERTHAN</i></li><li><i>LESSTHAN</li><li>GREATHERTHANEQUAL</i></li><li><i>LESSTHANEQUAL</i></li><li><i>LIKE</i></li></ul></li><li><b>VALUE</b> is the value against which the operation has to be performed on the field</li></ul>Note: <ul><li>This parameter can have multiple objects.</li><li>When multiple attributes are used in filter, <i>AND</i> behavior is applied.</li></ul>",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Refers to the sort parameter using which the response will be sorted according to the given sort parameter. The syntax of this parameter is: <font face=\"courier\">{\"sort\":[{\"field\":\"status\",\"direction\":\"ASC\"}, {\"field\":\"status\",\"direction\":\"DESC\"}]}</font>.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to be retrieved where the size of the page must be specified by the size, offset, or pageSize parameter. The first page starts with the value \"1\".",
            "required": true,
            "type": "integer",
            "default": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "The number of documents being retrieved on the corresponding page specified by the page parameter.",
            "required": true,
            "type": "integer",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Received Successfully",
            "schema": {
              "$ref": "#/definitions/PLPResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/PLPResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/catalogs/semantics/{semanticId}": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "summary": "Semantic for Storefront",
        "description": "This API responds to the associated categoryId, productId, or skuId based on the given semanticId. The semantic identifier is a simple string term that can be associated to any Category, Product, or SKU. <br>For example, you can add SUMMER SALE as a semanticId for a category that has products that are available for that season. By searching for the term SUMMER SALE, the user can reach out this category.",
        "operationId": "getProductBySemanticId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "semanticId",
            "in": "path",
            "description": "Holds a semantic identifier associated to any category, product, or SKU.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Received Successfully",
            "schema": {
              "$ref": "#/definitions/PDPResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/PDPResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/catalogs/suggestions": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "summary": "Load Suggestions by Search Term",
        "description": "This API retrieves the number of products details based on the given keyword for the suggestion context. Based on the given suggestion keyword, the products count under the specified suggestion keyword is returned.",
        "operationId": "getSuggestion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "searchTerm",
            "in": "query",
            "description": "Holds the value to be searched in the products of a catalog.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Received Successfully",
            "schema": {
              "$ref": "#/definitions/SuggestionAPIResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/SuggestionAPIResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Load a Customer",
        "description": "This API loads the profile information of the requested customer. The customer profile is loaded based on the user’s session ID passed by the client's storefront in the request. For the customer whose status as ACTIVE, INACTIVE, FREEZE, or LOCKED, the profile information can be loaded. The customer profile information includes personal information, address information, custom properties, security questions, payments details, and accounts information.",
        "operationId": "getCustomer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/CustomerDetails"
            },
            "responseSchema": {
              "$ref": "#/definitions/CustomerDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Create a Customer",
        "description": "This API creates a registered or a guest customer: <br/><ul><li>The registered customer is created based on the provided email or phone number. The registered customer’s unique identity is email or phone which are validated and the uniqueness of the customer is maintained within a collection.A registered customer is created directly via the registration process, where the customer is created in the ACTIVE status.</li><li>The guest customer is created in the database with the status as ACTIVE by setting the <font face=\"courier\">isGuestCustomer</font> flag to <font face=\"courier\">true</font>in the customer's request. The created guest customer will not have any profile information.</li></ul>",
        "operationId": "createCustomer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the CustomerCreateRequest request, which contains the customer information for the create request. The new customer create request is given in the form of a JSON array object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "schema": {
              "$ref": "#/definitions/CustomerLoginResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/CustomerLoginResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Delete a Customer",
        "description": "This API deletes the requested customer from the system. No other information about the requested customer will be available in the system. The customer profile is deleted based on the user’s session ID passed by the Storefont client in the request.",
        "operationId": "deleteCustomer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted Successfully"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Customers"
        ],
        "summary": "Update a Customer",
        "description": "This API updates the requested customer’s profile information including first name, last name, email, phone number, photo, custom properties, status, gender, dateofbirth, securityQuestions and answers. Identities also gets updated while updating user’s email and phone number. Unique identities alone will be accepted for the user within the collection otherwise results in validation failure.<br><br>The fields firstName, lastName, email, phoneNumber, dateOfBirth, gender, photo, status, customProperties, securityQuestions are updatable. The customer profile is updated based on the user’s session ID passed by the client's storefront in the request.",
        "operationId": "updateCustomer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the CustomerUpdateRequest request, which contains the customer information for the update request. The customer update request is given in the form of a JSON array object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Successfully",
            "schema": {
              "$ref": "#/definitions/CustomerOrchestration"
            },
            "responseSchema": {
              "$ref": "#/definitions/CustomerOrchestration"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/customers/activation": {
      "patch": {
        "tags": [
          "Customers"
        ],
        "summary": "Validate an Activation Param",
        "description": "This API validates the activation parameter of a customer. On successful validation, it changes the customer’s status from NOT ACTIVATED to ACTIVE. The activation parameter has an expiry constraint. The default expiry value is 1 hour.",
        "operationId": "activateCustomer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the CustomerActivationRequest request object, which contains the customer activation param and password.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerActivationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/CustomerLoginResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/CustomerLoginResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/customers/addresses": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Load All Addresses of a Customer",
        "description": "This API retrieves all available addresses of the requested customer. The customer whose status as ACTIVE, INACTIVE, FREEZE, or LOCKED can also view their addresses. The requested customer is identified based on the user’s session ID passed by the client's storefront in the request.",
        "operationId": "getCustomerAddress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AddressOrchestration"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AddressOrchestration"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Add an Address of a Customer",
        "description": "This API creates a new address for the customer based on the user’s session ID passed by the client's storefont in the request. By default, all addresses are considered as the shipping address. The maximum of 20 addresses can be added for a customer. Only one address can be added for a customer at a time. Only one address can be marked as the default address.",
        "operationId": "createCustomerAddress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the CustomerAddresses request object, which contains customer’s address details. The CustomerAddresses request is given in the form of a JSON array object. For creating an address for a customer, zipcode is mandatory. Other fields are optional in the request. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddressOrchestration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "$ref": "#/definitions/AddressOrchestration"
            },
            "responseSchema": {
              "$ref": "#/definitions/AddressOrchestration"
            }
          },
          "201": {
            "description": "Address Created Successfully",
            "schema": {
              "$ref": "#/definitions/AddressOrchestration"
            },
            "responseSchema": {
              "$ref": "#/definitions/AddressOrchestration"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/customers/addresses/{addressId}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Load an Address of a Customer",
        "description": "This API retrieves a particular address of the requested customer. The customer is identified based on the user’s session ID passed by the client's storefont in the request. For the customer whose status as ACTIVE, INACTIVE, FREEZE, or LOCKED, the profile information can be loaded.",
        "operationId": "getCustomerAddressById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "Indicates the ID of the address to be fetched. Holds a string value.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/AddressOrchestration"
            },
            "responseSchema": {
              "$ref": "#/definitions/AddressOrchestration"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Delete an Address of a Customer",
        "description": "This API deletes a particular address of the requested customer. The requested customer is identified based on the user’s session ID passed by the client's storefont in the request.",
        "operationId": "deleteCustomerAddress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "Indicates the ID of the address to be deleted. Holds a string value.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Customers"
        ],
        "summary": "Update an Address of a Customer",
        "description": "TThis API updates an particular address of the requested customer. Only one address can be updated at a time. The requested customer is identified based on the user’s session ID passed by the client's storefont in the request.",
        "operationId": "updateCustomerAddress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "Indicates the ID of the address to be updated. Holds string value.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the CustomerAddresses request object, which contains a customer’s address details. The CustomerAddresses request is given in the form of a JSON array object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddressOrchestration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/AddressOrchestration"
            },
            "responseSchema": {
              "$ref": "#/definitions/AddressOrchestration"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/customers/export": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Export Customer Profile Information",
        "operationId": "export",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          }
        ],
        "responses": {
          "202": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/customers/login": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Customer Login",
        "description": "This API authenticates the customer by validating the given identity and password within the collection. Only an ACTIVE customer is allowed to log in.<br>The customer’s account will be LOCKED after a specifiable number of failed login attempts that is configured in the database. The default number of login attempts is 5, after which the customer account will be locked. The number of failed login attempts are captured in the database for each customer. The default allowed login attempts are configured for each collection under the collection property ‘user.maxloginattempts’.<br>After a specific time interval, the customer account will be activated again. The number of login attempts will be reset to 0. This time interval is configurable for each collection under the collection property ‘user.loginattempt.expiry.millisecs’. The default value of this property is 24 hours.",
        "operationId": "login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates the identifier of the user session. The session ID will be generated as part of this request. It is an optional field.",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the CustomerLoginRequest object, which contains the customer identity information for login. It is given in the form of a JSON array object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/CustomerLoginResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/CustomerLoginResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/customers/logout": {
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Customer Logout",
        "description": "This API logs out a particular customer.",
        "operationId": "logout",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/customers/password": {
      "patch": {
        "tags": [
          "Customers"
        ],
        "summary": "Update a Customer's Password",
        "description": "This API updates the password of the requested ACTIVE customer after validating the old password of the requested customer from the database. Once after validating the old password, validates the given new password with the given confirmed password. After these verifications, the the password gets updated for the requested customer.",
        "operationId": "updatePassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the CustomerUpdatePasswordRequest request object, which contains the customer old password, new password and confirm passord for update. The CustomerUpdatePasswordRequest request is given in the form of a JSON array object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerUpdatePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/customers/payments": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Load Payments of a Customer",
        "description": "This API retrieves all the payments associated with a customer.",
        "operationId": "getAllPayment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentOrchestration"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentOrchestration"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Add a Payment of a Customer",
        "description": "This API adds a payment based on the Payment request sent by the customer.",
        "operationId": "createPayment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the CustomerPayments request object, which contains payment details of the customer. The CustomerPayments request is given in the form of a JSON array object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentOrchestration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "$ref": "#/definitions/PaymentOrchestration"
            },
            "responseSchema": {
              "$ref": "#/definitions/PaymentOrchestration"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PaymentOrchestration"
            },
            "responseSchema": {
              "$ref": "#/definitions/PaymentOrchestration"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/customers/payments/{paymentId}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Load a Payment of a Customer",
        "description": "This API loads a payment based on the payment ID associated with the customer.",
        "operationId": "getUserPaymentById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "Indicates the ID of payment to be fetched. Holds a string value.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/PaymentOrchestration"
            },
            "responseSchema": {
              "$ref": "#/definitions/PaymentOrchestration"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Delete a Payment of a Customer",
        "description": "This API deletes a payment based on the payment ID of the requested customer. Deleting a parent payment will also delete all the child entities associated with it. This will delete the Billing Address, Payment Provider, Payment Items, and Transactions",
        "operationId": "deletePayment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "Indicates the ID of payment to be deleted. Holds string value.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Customers"
        ],
        "summary": "Update a Payment of a Customer",
        "description": "This API updates all or selected payment attributes where the paymentId, status, collectionId, userId, paymentProvider, and type are not allowed to update. The response of this request is given through the Customer Payments model.<br>On updating the billingAddress and card details, if the third-party service requires a new token for the updated details, a new payment will be created with the existing payment details. The status is set as INACTIVE to the existing payment.",
        "operationId": "updatePayment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "Indicates the ID of payment to be updated. Holds string value.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the CustomerPayments request object, which contains the payment details of the customer. The CustomerPayments request is given in the form of a JSON array object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentOrchestration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/PaymentOrchestration"
            },
            "responseSchema": {
              "$ref": "#/definitions/PaymentOrchestration"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/customers/resetpassword": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Reset a Password",
        "description": "This API resets the password of the requested customer and generates a reset param which is an encrypted token. At a time, only one customer can be able to send reset param to a particular identity. The last reset param will be generated while resetting customer password as an encrypted value. It contains the randomly generated code appended with requested customer ID along with the current timestamp. It will be saved to the requested customer property. An email notification will be sent to the customer which will have that reset param as a link.",
        "operationId": "resetPassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the CustomerResetPasswordRequest request object, which contains the customer identity information for reset password. The CustomerResetPasswordRequest request is given in the form of a JSON array object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Customers"
        ],
        "summary": "Validate Reset Password",
        "description": "This API validates the reset param received from an email or SMS and updates the new password for the requested customer. The reset param has an expiry constraint. A new reset request will be made in case of failure. At present, it is configured as one hour by default. The reset param is generated by the POST /customers/resetpassword API.",
        "operationId": "validateResetPassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the CustomerValidatePasswordRequest request object, which contains the customer information for validating reset password. The CustomerValidatePasswordRequest request is given in the form of a JSON array object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerValidatePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/customers/securityquestions": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Get Security Questions of a Customer",
        "description": "This API retrieves the security questions without answers of an ACTIVE customer. The customer can use this call to see the security questions and to update the customer password by resetting based on the security questions and answers.",
        "operationId": "getSecurityQuestions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the CustomerGetSecurityQuestionRequest request object, which contains the customer identity information for getting securtity questions. The CustomerGetSecurityQuestionRequest request is given in the form of a JSON array object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerGetSecurityQuestionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerSecurityQuestionsWithoutAnswers"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerSecurityQuestionsWithoutAnswers"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/customers/securityquestions/password": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Reset Password by Security Questions",
        "description": "This API resets the customer password by validating security questions and answers for an ACTIVE customer. After validating the security questions and answers from the request and database, the customer password is updated.",
        "operationId": "updatePasswordBySecurityQuestions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the CustomerSecurityRequest request object, which contains an email or phoneNumber, password, and security questions and answers. The CustomerSecurityRequest request is given in the form of a JSON array object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerSecurityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/customers/sessions": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Create a Session",
        "operationId": "createSession",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "description": "Holds a valid token which can be generated by Skava Auth microservice (or a third-party service) when authenticating the userâ€™s identity and password. A valid token indicates the user is authenticated successfully. This token holds an expiry time.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Holds a unique identifier of the customer.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "$ref": "#/definitions/SessionDTO"
            },
            "responseSchema": {
              "$ref": "#/definitions/SessionDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        }
      }
    },
    "/listservice/lists": {
      "get": {
        "tags": [
          "Lists"
        ],
        "summary": "Get All Lists",
        "description": "This API retrieves all the lists of the requested customer.",
        "operationId": "getAllList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Denotes the page sequence of the list to move forward and backward. The default value will be NEXT <br/><br/>The values can be any one of the following:<br/><br/><ul><li>PREVIOUS - The list moves backwards with respect to the given size.</li><li>RETAIN - The list sequence resets and initialized list 1 to size.</li><li>NEXT - The list moves backwards with respect to the given size.</li></ul>",
            "required": false,
            "type": "string",
            "enum": [
              "PREVIOUS",
              "RETAIN",
              "NEXT"
            ]
          },
          {
            "name": "size",
            "in": "query",
            "description": "The number of documents being retrieved on the corresponding page specified by the page parameter.",
            "required": true,
            "type": "number",
            "default": 10.0
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Denotes the list type based on which the lists can be filtered out.<br/><br/>The values can be any one of the following:<br/><br/><ul><li>WISHLIST - The WISHLIST serves as a way for the customers to select and track their desired items for purchase at a later date.</li><li>SAVEFORLATER - To wait until another day to buy some of the items, then use SAVEFORLATER.</li><li>FAVOURITES - When the type is mentioned as FAVOURITES, the customer selects the items which they liked the most while logged in. Those items will be available all the time in the site until removed.</li></ul>",
            "required": false,
            "type": "string",
            "enum": [
              "WISHLIST",
              "SAVEFORLATER",
              "FAVOURITES"
            ]
          },
          {
            "name": "name",
            "in": "query",
            "description": "Denotes the name of the list based on which the lists can be filtered out.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/SFListsAPIResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFListsAPIResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "422": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Lists"
        ],
        "summary": "Create a List",
        "description": "This API creates a list for the customer. Only one list can be created at a time. Creating a list along with the list items are also possible.",
        "operationId": "createList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the SFList request, which contains the details to create a new list. The value should be given in the JSON format. An incorrect JSON object will display the \"Bad Request\" error. The mandatory fields for creating a list are name, type, and itemType fields.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SFListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "$ref": "#/definitions/SFList"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFList"
            }
          },
          "201": {
            "description": "Created Successfully",
            "schema": {
              "$ref": "#/definitions/SFList"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "422": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/listservice/lists/{listId}": {
      "get": {
        "tags": [
          "Lists"
        ],
        "summary": "Get a List",
        "description": "This API retrieves a list of the customer based on the given list identifier.",
        "operationId": "getListById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "listId",
            "in": "path",
            "description": "Indicates a unique valid ID of the list to be loaded. This is a mandatory field.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/SFList"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFList"
            }
          },
          "422": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Lists"
        ],
        "summary": "Delete a List",
        "description": "This API deletes a list of the customer based on the given list identifier.",
        "operationId": "deleteListById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "listId",
            "in": "path",
            "description": "Indicates a unique valid ID of the list to be deleted. This is a mandatory field.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Deleted Successfully"
          },
          "422": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Lists"
        ],
        "summary": "Update a List",
        "description": "This API updates a list of customers based on the given list identifier. The list name, accessType, and list properties fields can be updated.",
        "operationId": "updateListById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "listId",
            "in": "path",
            "description": "Indicates a unique valid ID of the list to be updated. This is a mandatory field.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the SFList request, which contains the details to update an existing list.<br/><br/><ul><li>While updating a list, the name, type, accessType, properties fields are editable and optional. The itemType field is not editable.</li><li>Updating list items are not allowed.</li></ul><br/><br/>The value should be given in the JSON format. An incorrect JSON object will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SFListCommonRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "$ref": "#/definitions/SFList"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFList"
            }
          },
          "202": {
            "description": "Updated Successfully",
            "schema": {
              "$ref": "#/definitions/SFList"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/listservice/lists/{listId}/items": {
      "get": {
        "tags": [
          "Lists"
        ],
        "summary": "Get All Items from a List",
        "description": "This API obtains all items from the list with the item information for the customer based on the given list identifier.",
        "operationId": "getListItems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "listId",
            "in": "path",
            "description": "Indicates a unique valid list identifier. All the items are loaded from this list. This is a mandatory field.",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to be retrieved where the size of the page must be specified by the size, offset, or pageSize parameter. The first page starts with the value \"1\".",
            "required": true,
            "type": "number",
            "default": 1.0
          },
          {
            "name": "size",
            "in": "query",
            "description": "The number of documents being retrieved on the corresponding page specified by the page parameter.",
            "required": true,
            "type": "number",
            "default": 10.0
          }
        ],
        "responses": {
          "200": {
            "description": "Received Successfully",
            "schema": {
              "$ref": "#/definitions/ListItemResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/ListItemResponse"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Lists"
        ],
        "summary": "Add Item(s) to a List",
        "description": "This API adds one or more items to the list for the customer. ItemType can be SKU or PRODUCT.",
        "operationId": "createListItems",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "listId",
            "in": "path",
            "description": "Indicates a unique valid list identifier. New items are added to this list. This is a mandatory field. ",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the SFListItem request, which contains the details to add a new item(s) into the specified list. The value should be given in the JSON format. For creating the list items, the key and name fields are mandatory. An incorrect JSON object will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SFListItemRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SFListItem"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SFListItem"
              }
            }
          },
          "201": {
            "description": "Created Successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SFListItem"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SFListItem"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "422": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/listservice/lists/{listId}/items/{listItemId}": {
      "get": {
        "tags": [
          "Lists"
        ],
        "summary": "Get an Item from a List",
        "description": "This API retrieves an item and its information from the given list for the customer based on the given list item identifier.",
        "operationId": "getListItemById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "listId",
            "in": "path",
            "description": "Indicates a unique valid ID of the list to be loaded. This is a mandatory field.",
            "required": true,
            "type": "string"
          },
          {
            "name": "listItemId",
            "in": "path",
            "description": "Indicates a unique valid identifier of the item available in the given list. This is a mandatory field.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Loaded Successfully",
            "schema": {
              "$ref": "#/definitions/SFListItem"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFListItem"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Lists"
        ],
        "summary": "Delete an Item from a List",
        "description": "This API deletes an item and its information from the given list for the customer based on the given list item identifier.",
        "operationId": "deleteListItemById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "listId",
            "in": "path",
            "description": "Indicates a unique valid ID of the list to be loaded. This is a mandatory field.",
            "required": true,
            "type": "string"
          },
          {
            "name": "listItemId",
            "in": "path",
            "description": "Indicates a unique valid identifier of the item available in the given list. This is a mandatory field.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Lists"
        ],
        "summary": "Update an Item in a List",
        "description": "This API updates an item properties from the given list for the customer based on the item identifier.",
        "operationId": "updateListItemById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "listId",
            "in": "path",
            "description": "Indicates a unique valid ID of the list to be loaded. This is a mandatory field.",
            "required": true,
            "type": "string"
          },
          {
            "name": "listItemId",
            "in": "path",
            "description": "Indicates a unique valid identifier of the item available in the given list. This is a mandatory field.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the SFListItem request, which contains the details to update an existing item under the specified list. The value should be given in the JSON format. The key and name fields are editable and optional. An incorrect JSON object will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SFListItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "$ref": "#/definitions/SFListItem"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFListItem"
            }
          },
          "202": {
            "description": "Updated Successfully",
            "schema": {
              "$ref": "#/definitions/SFListItem"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFListItem"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/listservice/lists/{listId}/share": {
      "post": {
        "tags": [
          "Lists"
        ],
        "summary": "Share a List",
        "description": "This API uses to send notification for the shared list",
        "operationId": "shareListById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "listId",
            "in": "path",
            "description": "Indicates a unique valid ID of the list to be updated. This is a mandatory field.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the SFList request, which contains the details to share an existing list. The value should be given in the JSON format. An incorrect JSON object will display the \"Bad Request\" error.<br><br><b>Note:</b> While sharing a list, the accessType should be PUBLIC.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SFShareList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "$ref": "#/definitions/SFShareList"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFShareList"
            }
          },
          "201": {
            "description": "Shared Successfully",
            "schema": {
              "$ref": "#/definitions/SFShareList"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFShareList"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get All Orders",
        "description": "This API retrieves all the orders of a ACTIVE customer.",
        "operationId": "getOrders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Holds the filter criteria.<br/><ul><li>/orders/?filter=id:1 - Returns 404 if the given order does't belong to the logged in user.</li><li>/orders/?filter=id:1,usertracking.firstname:name,usertracking.lastname:name,usertracking.zipcode:12341 - if &quot;lookup&quot; param is set to true and all the required filters are passed, Login is not required. Returns 404 if the given filters doesn't match.</li></ul><b>List of allowed filters:</b><br/><ol><li>id</li> <li>lastName</li><li>zipCode</li><li>createdTime</li><li>updatedTime</li><li>status</li><li>firstName</li></ol><b>Example combinations:</b><ol><li>filter=id:1,lastname:name,zipcode:12341</li><li>filter=status:Submitted_to_Fulfilment</li><li>filter=createdTime>12345677811,createTime<141234123321</li><li>filter=updateTime>12345677811,createTime<141234123321</li><ol>",
            "required": false,
            "type": "string"
          },
          {
            "name": "lookup",
            "in": "query",
            "description": "to lookup an order by passing the order id,firstname/lastname and zipcode. These are the required filter fields to lookup an order by a logged out user &lt;b>Login not required&lt;/b> or a Guest user",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Holds the sorting parameter which contains the sorting property name and the sorting order. It is case sensitive. For example:/orders?sort=createdtime:ASC&lt;br>Allowed fields for sort:&lt;br>1. createdTime:ASC&lt;br>2. createdTime:DESC&lt;br>3. updateTime:ASC&lt;br>4. updateTime:DESC&lt;br>",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to be retrieved where the size of the page must be specified by the size, offset, or pageSize parameter. The first page starts with the value \"1\".",
            "required": false,
            "type": "number",
            "default": 1.0
          },
          {
            "name": "size",
            "in": "query",
            "description": "The number of documents being retrieved on the corresponding page specified by the page parameter.",
            "required": false,
            "type": "number",
            "default": 10.0
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Orders fetched",
            "headers": {
              "totalCount": {
                "type": "integer",
                "format": "int32",
                "description": "total record count for the selected filter"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderOms"
              }
            },
            "responseSchema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderOms"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Order does not exist for the given search criteria",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Load an Order",
        "description": "This API loads a specific order of a customer based on the order Id",
        "operationId": "getOrderById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Indicates a unique valid ID of the order to be loaded.Holds string value.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrderOms"
            },
            "responseSchema": {
              "$ref": "#/definitions/OrderOms"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "summary": "Cancel an Order",
        "description": "This API is will cancel the order  placed by the customer based on the given Order Id (including all the order items corresponding to the order)",
        "operationId": "cancelOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Indicates the unique valid ID of the order to be canceled.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the DeleteOrderInput request object, which contains the reason details to cancel the order. It is given in the form of a JSON array object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteOrderInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order / Order Items' Status and  Property updated",
            "schema": {
              "$ref": "#/definitions/DeleteOrderOutput"
            },
            "responseSchema": {
              "$ref": "#/definitions/DeleteOrderOutput"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "order id / order item id not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "422": {
            "description": "Error on processing request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Orders"
        ],
        "summary": "Change Status for B2B Approval Workflow",
        "description": "This API updates the order status for the given order ID. The request updates either order or order item details. Both the operations cannot be performed at the same time. The Reason must be mentioned for the order status update. The operations that can be done from the patch request are as follows: <br>Status change operation on either the order or order item. For this operation, the order or order item should be eligible, else exception is thrown. Only the B2B customers have the ability to update the order status as either ‘MANAGERAPPROVED’ OR 'MANAGERREJECTED’",
        "operationId": "updateOrderById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Indicates a unique valid ID of the order based on which the order return operation will be performed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the OrderUpdate request object, which contains the order level update object. The order status and the reason for the update is required.<br>The OrderUpdate request is given in the form of a JSON array object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order / Order Items Status and Property updated",
            "schema": {
              "$ref": "#/definitions/OrderOms"
            },
            "responseSchema": {
              "$ref": "#/definitions/OrderOms"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "order id / order item id not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "422": {
            "description": "Error on processing request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/orders/{id}/orderitems/{itemid}": {
      "delete": {
        "tags": [
          "Orders"
        ],
        "summary": "Cancel an Order Item",
        "description": "This API cancels a particular item in an order.",
        "operationId": "cancelOrderItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Indicates the unique valid ID of an order based on which the order item will be canceled.",
            "required": true,
            "type": "string"
          },
          {
            "name": "itemid",
            "in": "path",
            "description": "Indicates the unique valid ID of the item in the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the DeleteItemInput request object, which contains the reason details to cancel the order item. It is given in the form of a JSON array object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteItemInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order / Order Items' Status and  Property updated",
            "schema": {
              "$ref": "#/definitions/DeleteItemOutput"
            },
            "responseSchema": {
              "$ref": "#/definitions/DeleteItemOutput"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "order id / order item id not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "422": {
            "description": "Error on processing request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/orders/{id}/orderitems/{itemid}/returns": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Return Order Item",
        "description": "This API returns the order items. Only the items eligble for return are allowed to return.",
        "operationId": "returnOrderItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Indicates the unique valid ID of the order based on which the order return operation will be performed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "itemid",
            "in": "path",
            "description": "Indicates the unique valid ID of the item in the order.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the ReturnItemInput request object, which contains the reason details to return the order item. It is given in the form of a JSON array object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnItemInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "$ref": "#/definitions/ReturnItemOutput"
            },
            "responseSchema": {
              "$ref": "#/definitions/ReturnItemOutput"
            }
          },
          "202": {
            "description": "Return placed successfully",
            "schema": {
              "$ref": "#/definitions/ReturnItemOutput"
            },
            "responseSchema": {
              "$ref": "#/definitions/ReturnItemOutput"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "order id / order item id not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "422": {
            "description": "Error on processing request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/orders/{id}/returns": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Return an Order",
        "description": "This API returns the orders. Only the orders eligble for return are allowed to return.",
        "operationId": "returnOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Indicates the unique valid ID of the order based on which the order return operation will be performed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Specifies the ReturnOrderInput request object, which contains the reason details to return the order. It is given in the form of a JSON array object. An incorrect JSON array will display the \"Bad Request\" error.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnOrderInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "$ref": "#/definitions/ReturnOrderOutput"
            },
            "responseSchema": {
              "$ref": "#/definitions/ReturnOrderOutput"
            }
          },
          "202": {
            "description": "Return placed successfully",
            "schema": {
              "$ref": "#/definitions/ReturnOrderOutput"
            },
            "responseSchema": {
              "$ref": "#/definitions/ReturnOrderOutput"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "order id / order item id not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "422": {
            "description": "Error on processing request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/subscriptions/": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get All Subscription",
        "operationId": "getSubscriptionsRest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Holds the simple or complex query criteria based on the available fields to filter and  return back the results. Syntax of this parameter is {\"filters\":[{\"field\":\"<b>FIELDNAME</b>\",\"operation\":\"<b>OP</b>\",\"value\":\"<b>VALUE</b>\"}]} where: <ul><li><b>FIELDNAME</b> is the entity's attribute name as represented in the response object</li><li><b>OP</b> is the operation - Possible values includes<ul><li>EQUALS</i></li><li><i>EQUALS_IGNORECASE</i></li><li><i>GREATERTHAN</i></li><li><i>LESSTHAN</li><li>GREATHERTHANEQUAL</i></li><li><i>LESSTHANEQUAL</i></li><li><i>LIKE</i></li></ul></li><li><b>VALUE</b> is the value against which the operation has to be performed on the field</li></ul>Note: <ul><li>This parameter can have multiple objects.</li><li>When multiple attributes are used in filter, <i>AND</i> behavior is applied.</li></ul>",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Refers to the sort parameter using which the response will be sorted according to the given sort parameter. The syntax of this parameter is: <font face=\"courier\">{\"sort\":[{\"field\":\"status\",\"direction\":\"ASC\"}, {\"field\":\"status\",\"direction\":\"DESC\"}]}</font>.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to be retrieved where the size of the page must be specified by the size, offset, or pageSize parameter. The first page starts with the value \"1\".",
            "required": true,
            "type": "integer",
            "default": 1
          },
          {
            "name": "size",
            "in": "query",
            "description": "The number of documents being retrieved on the corresponding page specified by the page parameter.",
            "required": true,
            "type": "integer",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Received Successfully",
            "schema": {
              "$ref": "#/definitions/SubscriptionsAPIResponse"
            },
            "responseSchema": {
              "$ref": "#/definitions/SubscriptionsAPIResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
"/subscriptions/{id}": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get Subscription By Id",
        "operationId": "getSubscriptionByIdRest",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Indicates the ID of the subscription to be fetched. Holds a string value.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Received Successfully",
            "schema": {
              "$ref": "#/definitions/SFSubscription"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Update Subscription",
        "operationId": "updateSubscriptionByIdRest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "Indicates the locale in which the API Response and error messages will be responded in the locale mentioned in this parameter. The locale needs to be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale format.</a> It is an optional parameter. The value can be empty or nullable, both treated as not provided. The default value is default locale of the provided collection.<br>Min length: 0<br>Max length: No max length<br>For example: en_US",
            "required": false,
            "type": "string"
          },
          {
            "name": "storeId",
            "in": "query",
            "description": "Holds a valid store identifier. The store is an entity which binds different micro-services together to provide a storefront experience. Different microservices are associated with the store. This identifier is used to fetch the association of various microservices. The fetched association is passed to the calls for further processing. The value should not be empty or null. It should be greater than 0.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-sk-session-id",
            "in": "header",
            "description": "Indicates a unique identifier of the customer session. Based on this, an auth token is retrieved from the Authorization service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-version",
            "in": "header",
            "description": "Refers to the API version of the microservice. It is an optional parameter.",
            "required": false,
            "type": "string",
            "default": "8.6.0"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Indicates the ID of the subscription to be updated. Holds a string value.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Contains the subscription and subscription related data. The field name is mandatory for both subscription and its related properties.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SFSubscription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Output type",
            "schema": {
              "$ref": "#/definitions/SFSubscription"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFSubscription"
            }
          },
          "202": {
            "description": "Updated Successfully",
            "schema": {
              "$ref": "#/definitions/SFSubscription"
            },
            "responseSchema": {
              "$ref": "#/definitions/SFSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "401": {
            "description": "UnAuthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "404": {
            "description": "Page Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponseModel"
            },
            "responseSchema": {
              "$ref": "#/definitions/ErrorResponseModel"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "Ping"
        ],
        "summary": "View Ping Response",
        "operationId": "ping",
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            },
            "responseSchema": {
              "type": "string"
            }
          }
        },
        "security": [
          {
            "xSkSessionId": [
              
            ]
          }
        ]
      }
    },
    "/clearCache": {
      "get": {
        "tags": [
          "Cache"
        ],
        "summary": "Clear Cache",
        "operationId": "clearCacheRoute",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "xSkSessionId": {
      "type": "apiKey",
      "name": "x-sk-session-id",
      "in": "header"
    }
  },
  "definitions": {
    "AccountBuyerDTO": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "example": "1",
          "description": "Refers to the unique ID of the buyer user. The field should not be empty or null. It is a mandatory field. There is no specific validation occurs on the length or the range of this field.",
          "minLength": 0,
          "maxLength": 255
        },
        "teamId": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Refers to the unique valid ID of the existing team. The value can be null or empty."
        }
      },
      "description": "This model contains account buyer link details, such as buyer user and team ID."
    },
    "AddressOptions": {
      "type": "object",
      "properties": {
        "addAddressToProfile": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether to add the address to the customerâ€™s profile or not. The value true indicates adding the address to the customer's profile."
        },
        "overrideAddressValidation": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether to override address validation or not. The value true indicates override address validation and treat the address as provided as valid."
        },
        "useDefaultAddress": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether to use customerâ€™s default address or not. The value true corresponds to using the customerâ€™s default address."
        },
        "setAsDefaultAddressInProfile": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether to set the address as default in profile or not. The value true corresponds to setting this address as the default in the profile."
        }
      },
      "description": "This model contains the profile and validation related options for the address."
    },
    "SecurityQuestionsRequest": {
      "type": "object",
      "properties": {
        "answer": {
          "type": "string",
          "example": "Company name is skava",
          "description": "Indicates the customerâ€™s answers to the security questions. There is no string validation occurs on the minimum and maximum lengths. This is an optional field",
          "minLength": 0,
          "maxLength": 255
        },
        "question": {
          "type": "string",
          "example": "What is your company name ?",
          "description": "Indicates the security question. There is no string validation occurs on the minimum and maximum lengths. This is an optional field.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model contains security questions and answers of the customer."
    },
    "CredentialsRequest": {
      "type": "object",
      "required": [
        "password"
      ],
      "properties": {
        "password": {
          "type": "string",
          "example": "Skava@123",
          "description": "Refers to the customer's password. This is a mandatory property. The password should contain an uppercase character, a special character, and a numeric value. Eg:Test@123.",
          "minLength": 0,
          "maxLength": 20
        },
        "securityQuestions": {
          "type": "array",
          "description": "Refers to the customerâ€™s security questions and answers. It is used to reset the password.",
          "items": {
            "$ref": "#/definitions/SecurityQuestionsRequest"
          }
        }
      },
      "description": "This model contains credential details, such as password and security questions of the customer."
    },
    "AddressValidation": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "PHYSICAL",
          "description": "Specifies the type of validation. The accepted values are PHYSICAL, DIGITAL, or STOREPICKUP.It is a readonly field <ul><li>PHYSICAL- Corresponds to physical address validation.</li> <li>DIGITAL - Corresponds to email address validation.</li>  <li>STOREPICKUP- Does not include customer address validation.</li> </ul>",
          "enum": [
            "PHYSICAL",
            "DIGITAL",
            "STOREPICKUP"
          ]
        },
        "validated": {
          "type": "boolean",
          "example": true,
          "description": "Specifies whether the type of address is validated or not. The value true indicates the address is validated. The value false indicates the address is not validated. It is a readonly field"
        },
        "overridden": {
          "type": "boolean",
          "example": true,
          "description": "Specifies whether the type of address validation is overridden or not. It is a readonly field<ul><li>The value true indicates the address validation is overridden.</li><li>The value false indicates the address validation is not overridden.</li></ul>"
        }
      },
      "description": "This model contains the information for validating the address."
    },
    "AccountCreateRequest": {
      "type": "object",
      "properties": {
        "customer": {
          "description": "This contains the customer information for the create request.",
          "$ref": "#/definitions/CustomerCreateRequest"
        },
        "account": {
          "description": "This model contains account details",
          "$ref": "#/definitions/AccountsDTO"
        }
      },
      "description": "This model contains account creation request details."
    },
    "CustomerCreateRequest": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "john",
          "description": "Refers to the customerâ€™s first name. This is a mandatory field when the isGuestCustomer flag is \"False\". There is no string validation occurs on the minimum and the maximum lengths.",
          "minLength": 0,
          "maxLength": 255
        },
        "lastName": {
          "type": "string",
          "example": "smith",
          "description": "Refers to the customerâ€™s last name. This is a mandatory field when the isGuestUser flag is \"False\". There is no string validation occurs on the minimum and the maximum lengths.",
          "minLength": 0,
          "maxLength": 255
        },
        "email": {
          "type": "string",
          "example": "dev@skava.com",
          "description": "Holds the customerâ€™s unique valid email address. It is used for customer registration and customer login. With this value, a relevant identity will be created. This is a mandatory field. The minimum and maximum lengths of an email are being validated by a regex. The regex is '^(.+)@(.+).$â€™."
        },
        "phoneNumber": {
          "type": "string",
          "example": "1234567890",
          "description": "Holds the customerâ€™s unique phone number. It is used for customer registration and customer login. With this value, a relevant identity will be created. This is an optional field.The value is validated by a regex. The regex isâ€™[Â±\\ (0-9Â±\\ )]{3,20}$â€™.",
          "minLength": 3,
          "maxLength": 20
        },
        "userName": {
          "type": "string",
          "example": "testUserName",
          "description": "Indicates the userâ€™s name. UserName identity will be created for the user name.This value is used by the user for login. For example, testUserName.",
          "minLength": 0,
          "maxLength": 255
        },
        "isGuestCustomer": {
          "type": "boolean",
          "example": false,
          "description": "Represents the input request flag which denotes whether the request needs to create a guest customer or not. The default value is â€˜falseâ€™. This is an optional field. When the isGuestCustomer is false, the normal registered user will be created with an identity either email or phoneNumber. When isGuestCustomer is 'true', customer details are not needed, it will create customer with empty details."
        },
        "gender": {
          "type": "string",
          "example": "male",
          "description": "Refers to the customerâ€™s gender; for example, male.",
          "minLength": 0,
          "maxLength": 255
        },
        "dateOfBirth": {
          "type": "string",
          "example": "08-10-1990",
          "description": "Holds the customerâ€™s date of birth. No specific date format is defined. It is an optional field.",
          "minLength": 0,
          "maxLength": 255
        },
        "photo": {
          "type": "string",
          "example": "string_url",
          "description": "Holds the uploaded image URL of the customerâ€™s profile photo. It can hold any valid URL. It is an optional field.",
          "minLength": 0,
          "maxLength": 255
        },
        "customProperties": {
          "type": "object",
          "description": "Indicates the custom properties map. It holds all additional properties, which need to be added to a customer account apart from the available default properties. It is of JSON type. The key denotes the property name. The value denotes the property value. It is an optional field. For example, customProperties : {â€˜segmentâ€™:â€˜goldâ€™,â€˜customerRollNumberâ€™:â€˜123â€™} < * >: string} ",
          "additionalProperties": {
            "type": "string"
          }
        },
        "credentials": {
          "example": "{\"segment\":\"gold\"}",
          "description": "Credentials object - holds all secured credentials info of a user like password, security questions.",
          "$ref": "#/definitions/CredentialsRequest"
        }
      },
      "description": "This model contains customer creation request details."
    },
    "TeamsDTO": {
      "type": "object",
      "properties": {
        "costCentreId": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Refers to the valid identifier of the existing cost centre. The value can be null or empty. It is an optional field."
        },
        "name": {
          "type": "string",
          "example": "platform",
          "description": "Refers to the name of the team. This field should not be empty or null. It is a mandatory field. The minimum length is 3. There is no specific validation occurs on the maximum length.",
          "minLength": 0,
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "example": "platform team",
          "description": "Holds the description of the team. There is no specific validation occurs on the maximum length. It is an optional field.",
          "minLength": 0,
          "maxLength": 255
        },
        "status": {
          "type": "string",
          "example": "active",
          "description": "Refers to the status of the team. The status can be ACTIVE or INACTIVE. <ul><li>ACTIVE - Indicates that the team is active.</li><li>INACTIVE - Indicates that the team is not in use.</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "teamBuyer": {
          "type": "array",
          "description": "Refers to the list of team buyers associated with the team.",
          "items": {
            "$ref": "#/definitions/AccountBuyerDTO"
          }
        }
      },
      "description": "This model contains team details, such as team name, description,  team status, and team buyer."
    },
    "AddressOrchestration": {
      "type": "object",
      "properties": {
        "validation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressValidation"
          }
        },
        "addressVersion": {
          "type": "integer",
          "format": "int64"
        },
        "addressId": {
          "type": "integer",
          "format": "int64",
          "example": 3436123,
          "description": "Indicates the unique ID given to the address from the invoking service. It is an autogenerated value. It is a readonly field. Itâ€™s minimum value is 1 and maximum value is undetermined (autogenerated).<br> It is consumed in the Cart, Customer and Account services."
        },
        "options": {
          "description": "Consumed in Cart service\nIndicates profile and validation related options for the address",
          "$ref": "#/definitions/AddressOptions"
        },
        "firstName": {
          "type": "string",
          "example": "John",
          "description": "Indicates first Name of the customer.It is an optional field. <br>It is consumed in the Cart, Customer, OMS and Account services.<ul><li>For Cart: First Name is required if company name is not provided.</li><li>For Customer: No validations</li><li>For OMS - No Validations</li><li>For Account: No Validations </li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "lastName": {
          "type": "string",
          "example": "Doe",
          "description": "Indicates last Name of the customer. It is an optional field. <br>It is consumed in the Cart, Customer and OMS services.<ul><li>For Cart: Last Name is required if company name is not provided.</li><li>For Customer - No validations.</li><li> OMS: No validations.</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "middleName": {
          "type": "string",
          "example": "A",
          "description": "Indicates middle name or initial of the user address. It is an optional field.<br>It is consumed in the Cart and OMS services.<ul><li>For Cart: There are no validation and minimum/maximum length checks for this field.</li><li> For OMS: No validations.</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "companyName": {
          "type": "string",
          "example": "Skava Systems",
          "description": "Indicates company name of the customer. It is an optional field.<br>It is consumed in Cart and OMS services.<ul><li>For Cart: Company name is required if First and Last names are not provided. The value is of String type. There are no validation and minimum/maximum length checks for this field.</li><li>For OMS: No validations</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "addressLine1": {
          "type": "string",
          "example": "1 Broad Way",
          "description": "\nIndicates address Line 1 detail of the customer. It is an optional field.<br>It is consumed in the Cart, Customer, OMS and Account services.<ul><li>For Cart: It accepts maximum 50 characters. Currently it is a mandatory field in case of physical address validation.</li><li>For Customer - No validations.</li><li>For OMS - No validations.</li><li>For Accounts: No validations.</li><li> For OMS: No validations.</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "addressLine2": {
          "type": "string",
          "example": "Suite 100",
          "description": "Indicates address line 2 details of the customer. It is an optional field.<br>It is consumed in the Cart, Customer, OMS and Account services.<ul><li>For Cart: It accepts maximum 50 characters. Currently, it is a mandatory field in the case of physical address validation.</li><li>For Customer - No validations.</li><li>For OMS -  No validations.</li><li>For Account -  No validations.</li></ul> ",
          "minLength": 0,
          "maxLength": 255
        },
        "addressLine3": {
          "type": "string",
          "example": "Lake Township",
          "description": "Indicates address Line 3 details of the customer. It is an optional field. <br>It is consumed in the Cart, Customer, OMS and Account services.<ul><li>For Cart: It accepts maximum 50 characters. Currently it is a mandatory field in the case of physical address validation.</li><li>For Customer - No validations</li><li>For OMS - No validations</li><li>Accounts: No validations</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "city": {
          "type": "string",
          "example": "New York",
          "description": "Refers to the city where the customer belongs to. It is an optional field.<br>It is consumed in the Cart, Customer, OMS and Account services. <ul><li>For Cart: Currently, it is a mandatory field in the case of physical address validation.</li><li>For Customer - No validations.</li><li>For OMS - No validations.</li><li>For Accounts - No validations.</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "state": {
          "type": "string",
          "example": "Illinois",
          "description": "Indicates state name of the address. It is an optional field.<br>It is consumed in the Cart, Customer, OMS and Account services.<ul><li>For Cart: Currently, it is a mandatory field in the case of physical address validation.</li><li>For Customer -  No validations.</li><li>For OMS -  No validations</li><li>For Accounts: No validations</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "county": {
          "type": "string",
          "example": "Lake",
          "description": "Indicates county name of the address. It is an optional field.<br>It is consumed in the Cart, Customer, OMS and Account services.<ul><li>For Cart: Currently, it is a mandatory field in the case of physical address validation.</li><li>For Customer - No validations.</li><li>For OMS - No validations.</li><li>For Accounts: No validations.</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "country": {
          "type": "string",
          "example": "US",
          "description": "Indicates country name of the address. It is an optional field.<br>It is consumed in the Cart, Customer, OMS and Account services.<ul><li>For Cart: Currently, it is a mandatory field in the case of physical address validation.</li><li>For Customer - No validations.</li><li>For OMS - No validations.</li><li>For Accounts: No validations.</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "zip": {
          "type": "string",
          "example": "60010",
          "description": "Indicates zip or postal code of the address.<br>It is consumed in the Cart, Customer, OMS and Account services.<ul><li>For Cart: Currently, it is a mandatory field in the case of physical address validation.</li><li>For Customer, Account: It is validated by the regex '[Â±\\ (*[A-Za-z0-9]Â±\\ )-]{3,20}$â€™. This field should not be null or empty. This is the mandatory field. The minimum and the maximum lengths are 3 and 20, respectively.</li><li>For OMS: No validations. It should not be null/empty.</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "email": {
          "type": "string",
          "example": "someone@somemail.com",
          "description": "Holds the customerâ€™s valid email address. It is an optional field.<br>It is consumed in the Cart,Customer and Account services.<ul><li>For cart: Currently, it is a mandatory field in case of digital.</li><li>For account: No validations</li><li>For customer: It is used for customer registration and login. With this value, a relevant identity will be created. The value should be unique within a collection. The minimum and the maximum length of an email are validated by a regex. The regex is '^(.+)@(.+).$â€™address validation.</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "phone": {
          "type": "string",
          "example": "2536544564",
          "description": "Indicates phone number of the customer.<br>It is consumed in the Cart,Customer and Account services.<ul><li>For Cart: Currently, it is a mandatory field in case of physical address validation.</li><li>For Customer: It is used for customer registration and login. With this value, a relevant identity will be created. The value should be unique within a collection. This field should not be null or empty. The value is validated by a regex. The regex isâ€™[Â±\\ (0-9Â±\\ )]{3,20}$â€™.</li><li>For Account: No Validation</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "mobile": {
          "type": "string",
          "example": "2334454433",
          "description": "Indicates the mobile number of the customer. It is a mandatory field in case of physical address validation.<br>It is consumed in the Cart service. ",
          "minLength": 0,
          "maxLength": 255
        },
        "canReceiveSMS": {
          "type": "boolean",
          "example": false,
          "description": "Specifies whether the mobile number provided can receive SMS or not. It is a mandatory field in case of physical address validation.<br>It is consumed in the Cart service. "
        },
        "properties": {
          "type": "object",
          "description": "Indicates the custom properties for the address.<br>It is consumed in the Cart service. ",
          "additionalProperties": {
            "type": "string"
          }
        },
        "isDefault": {
          "type": "boolean",
          "description": "Represents if the given address is the default address or not. For each customer, only one address is set as the default address. By default, this field is set to false. It is an optional field.<br>It is consumed in the Cart and Customer services. "
        },
        "type": {
          "type": "string",
          "example": "BillingAddreess",
          "description": "Indicates the type of the customerâ€™s address, which contains a string value. It is used to group the addresses. It is an optional field. For example, BillingAddress or ShippingAddress.<br>It is consumed in the Customer, OMS and Account service.",
          "minLength": 0,
          "maxLength": 255
        },
        "deliveryInstruction": {
          "type": "string",
          "description": "Indicates the delivery instructions of the address.<br>It is consumed in the OMS service. ",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model contains the customerâ€™s address details. This represents orchestration model for Cart, Customer, OMS, Account."
    },
    "AccountPropertiesDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates the unique ID of the account property.  It is an auto-generated value."
        },
        "name": {
          "type": "string",
          "example": "accountProperty",
          "description": "Refers to the name of the account property to which a value will be assigned. There is no specific validation occurs on the maximum length. It is an optional field.",
          "minLength": 3,
          "maxLength": 255
        },
        "value": {
          "type": "string",
          "example": "value",
          "description": "Refers to the value of the property which will be associated with a particular name. It is an optional field.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model contains account property details, such as account ID, account name, and account value."
    },
    "AccountsDTO": {
      "type": "object",
      "required": [
        "name",
        "phoneNumber",
        "taxNumber"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Indicates the unique identifier of the account. It is generated automatically."
        },
        "name": {
          "type": "string",
          "example": "1",
          "description": "Refers to the name of the account. This field should not be null or empty. It is a mandatory field. There is no specific validation on the range or length of this field.",
          "minLength": 0,
          "maxLength": 50
        },
        "type": {
          "type": "string",
          "example": "Entertainment/Construction",
          "description": "Refers to the account type. The account type is created in the account services under each collection.",
          "minLength": 0,
          "maxLength": 255
        },
        "size": {
          "type": "string",
          "example": "100",
          "description": "Refers to the size of the account. There is no specific validation occurs on the range or the length of this field. It is an optional field.",
          "minLength": 0,
          "maxLength": 50
        },
        "phoneNumber": {
          "type": "string",
          "example": "+919876543210",
          "description": "Refers to the size identifier of the account. This field should not be null or empty. There is validation on the range or length of the field."
        },
        "dunsNumber": {
          "type": "string",
          "example": "123456789",
          "description": "Refers to the DUNS Number identifier of the account. It is an optional field, that is, a account may or may not have duns number.",
          "allowEmptyValue": true
        },
        "taxNumber": {
          "type": "string",
          "example": "123456789",
          "description": "Refers to the Tax Number identifier of the account. This field should not be null or empty. There is validation on the range or length of the field."
        },
        "status": {
          "type": "string",
          "example": "active",
          "description": "Refers to the status of the account. The status of the account can be ACTIVE, INACTIVE, SUSPENDED, PENDING, or REJECT. It is a mandatory field.There is no specific validation occurs on the length or the range of this field.<ul><li>ACTIVE - Indicates that the account is active.</li><li>INACTIVE - Indicates that the inactive account. A representative/manager from the seller org can deactivate an account or the account gets deactivated when the contract expires.</li><li>SUSPENDED - Indicates that the account is currently put to suspended state by the manager/representative of the seller org because the buyer has not completed the payment within the given Payment Term.</li><li>PENDING - An account is in pending state when its self on boarded or when itâ€™s newly created.</li><li>REJECTED - Indicates that the account has been rejected by the representative of the seller org.</li></ul>",
          "minLength": 0,
          "maxLength": 50
        },
        "parentAccountId": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Refers to the ID of the parent account to which this account is associated. It is an optional field."
        },
        "properties": {
          "type": "array",
          "description": "Indicates the list of account properties.",
          "items": {
            "$ref": "#/definitions/AccountPropertiesDTO"
          }
        },
        "addresses": {
          "type": "array",
          "description": "Indicates the list of account addresses.",
          "items": {
            "$ref": "#/definitions/AddressOrchestration"
          }
        },
        "teams": {
          "type": "array",
          "description": "Indicates the list of teams under this account.",
          "items": {
            "$ref": "#/definitions/TeamsDTO"
          }
        }
      },
      "description": "This model contains account details."
    },
    "ErrorResponseModel": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "EOAUT0001",
          "description": "Indicates the application error code of this API"
        },
        "message": {
          "type": "string",
          "example": "Invalid Request",
          "description": "Holds the error response message of this API."
        },
        "errors": {
          "type": "array",
          "description": "Holds the validation errors.",
          "items": {
            "$ref": "#/definitions/ValidationErrors"
          }
        },
        "timeStamp": {
          "type": "integer",
          "format": "int64",
          "description": "Holds the date and time (in milliseconds) of the response when it has been built."
        }
      },
      "description": "This model holds the error response data."
    },
    "ValidationErrors": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "example": "Quantity",
          "description": "Indicates an field name which contains the cause of the error."
        },
        "code": {
          "type": "string",
          "example": "EOCAR0011",
          "description": "Indicates the application error code of this API"
        },
        "message": {
          "type": "string",
          "example": "Invalid",
          "description": "Holds the error response message of this API."
        }
      },
      "description": "This model contains the details of the validation errors."
    },
        "UserRolesResponse": {
      "type": "object",
      "required": [
        "roles",
        "userId"
      ],
      "properties": {
        "roles": {
          "type": "array",
          "description": "Holds the user's role association information like role name, business identifier, service, etc. This field should not be null or empty.",
          "items": {
            "$ref": "#/definitions/UserRole"
          }
        },
        "userId": {
          "type": "integer",
          "format": "int64",
          "description": "Refers to the user identifier. This field should not be null or empty. Holds a valid authgroup identifier based on which a list of users are added."
        }
      }
    },
    "UserRole": {
      "type": "object",
      "required": [
        "category",
        "roleName"
      ],
      "properties": {
        "accountId": {
          "type": "integer",
          "format": "int64"
        },
        "attribute": {
          "type": "string"
        },
        "businessId": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "type": "string"
        },
        "collectionId": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "roleName": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "serviceCollectionId": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AddressesDTO": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string",
          "example": "LOS ANGELES",
          "description": "Indicates the city of the buyer address. There is no string validation occurs on the minimum and maximum length."
        },
        "country": {
          "type": "string",
          "example": "USA",
          "description": "Specifies the country of the buyer address. There is no string validation occurs on the minimum and maximum length."
        },
        "county": {
          "type": "string",
          "example": "Ferry",
          "description": "Indicates the county of the buyer address. There is no string validation occurs on the minimum and maximum length."
        },
        "email": {
          "type": "string",
          "example": "abc@skava.com",
          "description": "Indicates the email ID of the buyer address. This field should not be null or empty. The value is validated by the regex <font face=\"courier\">^(.+)@(.+)[.](.+)$</font>. For example, <font face=\"courier\">someone@skava.com</font>"
        },
        "firstName": {
          "type": "string",
          "example": "John",
          "description": "Specifies the first name of the buyer address. There is no string validation occurs on the minimum and maximum lengths."
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates a unique ID of the address. This field is generated automatically.",
          "readOnly": true
        },
        "lastName": {
          "type": "string",
          "example": "Smith",
          "description": "Specifies the last name of the buyer address. There is no string validation occurs on the minimum and maximum lengths."
        },
        "middleName": {
          "type": "string",
          "example": "John",
          "description": "Specifies the middle name of the buyer address. There is no string validation occurs on the minimum and maximum lengths."
        },
        "phone": {
          "type": "string",
          "example": "9876543210",
          "description": "Indicates the phone number of the buyer address. This field should not be null or empty. The value is validated the regex <font face=\"courier\">[+\\-\\ \\(*0-9+\\-\\ \\)*]{3,20}$</font>. The minimum and maximum lengths are 3 and 20, respectively."
        },
        "state": {
          "type": "string",
          "example": "CALIFORNIA",
          "description": "Specifies the state of the buyer address. There is no validation on the minimum and maximum lengths."
        },
        "street1": {
          "type": "string",
          "example": "E MAIN ST",
          "description": "Specifies the address line 1 of the buyer address. There is no string validation occurs on the minimum and maximum lengths."
        },
        "street2": {
          "type": "string",
          "example": "SUITE 5A-1235",
          "description": "Specifies the address line 2 of the buyer address. There is no string validation occurs on the minimum and maximum lengths."
        },
        "street3": {
          "type": "string",
          "example": "PHONEIX",
          "description": "Specifies the address line 3 of the buyer address. There is no string validation occurs on the minimum and maximum lengths."
        },
        "type": {
          "type": "string",
          "example": "BillingAddress",
          "description": "Indicates the type of address. It is a custom value which is used to group the addresses. By default, only one shipping address is saved. There is no string validation occurs on the minimum and maximum lengths. For example, BillingAddress or ShippingAddress. It is an optional field for creating an address."
        },
        "validated": {
          "type": "boolean",
          "example": false,
          "description": "Represents whether the address is valid or not. The address is validated by the external address microservice. This value will be set by the external address validation service after validating the address. The value \"true\" indicates the address is valid. The value \"false\" indicates the address is invalid.",
          "readOnly": true
        },
        "validatedOn": {
          "type": "integer",
          "format": "int64",
          "example": 100000,
          "description": "Refers to the time in milliseconds when the buyer address was validated.",
          "readOnly": true
        },
        "validationType": {
          "type": "string",
          "example": "testvalidationtype",
          "description": "Refers to the validation type with which the address verification is done. It is a custom value provided by the Skava Address microservice or any other external third-party Address service. This service stores only the value and does not update any other value to this attribute. There is no string validation occurs on minimum and maximum lengths. It is an optional field.",
          "readOnly": true
        },
        "zipCode": {
          "type": "string",
          "example": "90001",
          "description": "Indicates the zip code of the buyer address. The minimum and maximum lengths are validated by a regex. The regex is <font face=\"courier\">[+\\-\\ \\(*[A-Za-z0-9]+\\-\\ \\)-]{3,20}$</font>. This field should not be null or empty. The minimum and the maximum lengths are 3 and 20, respectively. It is a mandatory field for creating an address."
        },
        "default": {
          "type": "boolean",
          "example": false,
          "description": "Represents whether the buyer address is default or not. For each buyer, only one address can be set as the default address."
        }
      },
      "description": "This model contains the buyer's address details."
    },
    "AccountBuyerInfoDTO": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "description": "Contains the buyer's address details. This field holds the list of addresses which are stored by the buyer.",
          "items": {
            "$ref": "#/definitions/AddressesDTO"
          }
        },
        "collectionId": {
          "type": "integer",
          "format": "int64",
          "description": "Holds a valid collection identifier of this microservice. The requested operation will be performed on this collection identifier. The collection is the topmost entity of a microservice under which all the other entities/resources reside. Each collection represents an instance of the microservice with configured properties. These properties can be modified to bring in a different behavior per collection of the same microservice. The store association is the process of associating a microservice collection to a store along with its respective sub-entity. This way, the storefront can fetch/store the required information from that respective association."
        },
        "credentials": {
          "description": "Contains the buyer's credential detail, such as password and security questions.",
          "$ref": "#/definitions/CredentialsDTO"
        },
        "customProperties": {
          "type": "object",
          "example": "{\"segment\":\"gold\"}",
          "description": "Indicates all additional properties which need to be added to a buyeraccount apart from the available default properties. The default propertiesare firstname, lastname, email, phonenumber, DOB, preferences, etc. It isof JSON type with the key indicates the property name and the value indicatesthe property value. For example, <font face=\"courier\">customProperties : {\"segment\":\"gold\",\"userRollNumber\":\"123\"}</font>",
          "additionalProperties": {
            "type": "string"
          }
        },
        "dateOfBirth": {
          "type": "string",
          "example": "08-10-1990",
          "description": "Indicates the buyer's date of birth. It can be customized based on the client's need. There is no specific date format defined. The format can be MMM DD YYYY, DD/MM/YYYY, etc. For example, 'Aug 10 1990' or '08-10-1990'. There is no validation on the minimum and maximum lengths. It is an optional field."
        },
        "email": {
          "type": "string",
          "example": "dev@skava.com",
          "description": "Indicates the buyer's unique email address which is used for the buyerregistration. This value must contain only a valid email address. An emailidentity will be created for the buyer email. This value is used by the buyerfor login. The value should not be null. It should be unique within a collection.The email is validated by the regex: <font face=\"courier\">^(.+)@(.+)[.](.+)$</font>.This regex checks whether the given email is valid or not and also checksthe minimum and maximum lengths. For example, dev@skava.com."
        },
        "firstName": {
          "type": "string",
          "example": "john",
          "description": "Indicates the buyer's first name. There is no validation on the minimum and maximum lengths. It is an optional field."
        },
        "gender": {
          "type": "string",
          "example": "male",
          "description": "Indicates the buyer's gender. There is no validation on the minimum and maximum lengths. It is an optional field."
        },
        "guest": {
          "type": "boolean",
          "example": false,
          "description": "Represents the input request flag, which denotes whether the request creates a buyer is guest or registered. It holds the boolean values 'true' or 'false'. The value 'true'  denotes the request creates a buyer is guest. Otherwise, the request creates a buyer is registered."
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Represents the identifier of the buyer. The minimum value is 1. There is no maximum value."
        },
        "lastName": {
          "type": "string",
          "example": "smith",
          "description": "Specifies the last name of the buyer. There is no validation on the minimum and maximum lengths. It is an optional field."
        },
        "phoneNumber": {
          "type": "string",
          "example": "1234567890",
          "description": "Holds the buyer's unique phone number which is used for buyer registration. This value should contain only a valid phone number. For this value, a phone number identity will be created, that is the phone number is created as an identity. This value is used by the buyer for login. The value should not be null. It should be unique within a collection. For example, 1234567890. The minimum and the maximum length of the phone number is validated by a regex. The regex is <font face=\"courier\">[+\\-\\ \\(*0-9+\\-\\ \\)*]{3,20}$</font>. The minimum and maximum lengths are 3 and 20, respectively."
        },
        "userName": {
          "type": "string",
          "example": "testUserName",
          "description": "Indicates the buyerâ€™s name. UserName identity will be created for the buyer name. This value is used by the buyer for login. For example, testUserName."
        },
        "photo": {
          "type": "string",
          "example": "string_url",
          "description": "Holds the uploaded image URL of the buyerâ€™s profile photo. It can hold any valid URL. It is an optional field. There is no validation on the minimum and maximum lengths."
        },
        "preferences": {
          "type": "string",
          "example": "email",
          "description": "Indicates the buyerâ€™s preferences which are either email or phone. The buyer will perform activation and resetting password either through email or phone. It is an optional field. There is no string validation occurs on the minimum and maximum lengths. There is no default value."
        },
        "status": {
          "type": "string",
          "description": "Indicates the status of a buyer. There is no string validation occurs on the minimum and maximum lengths. The values are as follows:<br/><ul><li><b>ACTIVE</b> - This status appears when the buyer is created via the \"Create a Buyer\" API with inviteUserFlag set to \"false\".</li><li><b>INACTIVE</b> - This status appears when the buyer account is inactive.</li><li><b>NOT ACTIVATED</b> - This status appears when the buyer is created via the \"Create a Buyer\" API with inviteUserFlag set to \"true\".</li><li><b>LOCKED</b> - This status appears when the buyer account is being locked whenever the buyer tries to login with invalid credentials for multiple times or exceeding the stipulated limit.</li><li><b>DELETED</b> - This status appears when the buyer account is deleted.</li><li><b>FREEZE</b> - This status appears when the buyer account is frozen.</li></ul><br/>There is no string validation occurs on the minimum and maximum lengths."
        },
        "type": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates the buyer type, such as a buyer is guest or registered. The value 1 refers to the registered buyer. The value 2 refers to the guest buyer."
        }
      },
      "description": "This model contains the account buyer's details."
    },
    "AccountBuyerResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 221,
          "description": "The buyer unique id"
        },
        "teamId": {
          "type": "integer",
          "format": "int64",
          "example": 787,
          "description": "The team id to which the buyer belongs"
        },
        "buyerInfo": {
          "description": "The customer account details of the buyer account",
          "$ref": "#/definitions/AccountBuyerInfoDTO"
        },
        "accountId": {
          "type": "integer",
          "format": "int64",
          "example": 786,
          "description": "The accountId of the buyer admin with which this account is associated"
        }
      },
      "description": "This model contains the account buyer with user details."
    },
    "CredentialsDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates a unique ID of the credentials. This field is generated automatically."
        },
        "password": {
          "type": "string",
          "example": "Skava@123",
          "description": "Indicates the new password of the buyer. This is provided for resetting the buyer's password. This is a hidden property. It will be active on resetting the buyer's password. The password must contain an uppercase alphabet, a special character, and a numeric value. The password validation is configurable in the collection property. The minimum and the maximum lengths are 3 and 20, respectively. For example, Test@123. It is a mandatory field for creating the buyer."
        },
        "securityQuestions": {
          "type": "array",
          "description": "Contains the buyer's security questions and answers. Both the questions and answers are mandatory.",
          "items": {
            "$ref": "#/definitions/SecurityQuestionsDTO"
          }
        }
      },
      "description": "This model contains the buyer's credential details, such as password, old passwords, and security questions."
    },
    "SecurityQuestionsDTO": {
      "type": "object",
      "properties": {
        "answer": {
          "type": "string",
          "example": "What is your company name ?",
          "description": "Indicates the buyer's security answers. There is no string validation occurs on the minimum and maximum lengths."
        },
        "question": {
          "type": "string",
          "description": "Indicates the user's security questions. There is no string validation occurs on the minimum and maximum lengths."
        }
      },
      "description": "This model contains the buyer's security questions and answers."
    },
    "CostCentreResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Refers to the identifier of the costcentre. It is a value of long type. The minimum value is 1 and the maximum value is undetermined (autogenerated)."
        },
        "name": {
          "type": "string",
          "example": "costCentre",
          "description": "Refers to the name of the cost center. This field should not be null or empty. There is no specific validation on the range or length of the field."
        },
        "status": {
          "type": "string",
          "example": "active",
          "description": "Refers to the status of the contract. The available statuses are:<br/><br/><ul><li><b>ACTIVE</b> - Indicates that the cost center is active.</li><li><b>INACTIVE</b> - Indicates that the cost center is not in use.</li></ul>"
        },
        "budgets": {
          "type": "array",
          "description": "Refers to the budgets which are associated with the cost center.",
          "items": {
            "$ref": "#/definitions/BudgetsDTO"
          }
        }
      },
      "description": "A cost centre is a department within a business to which costs can be allocated. The term includes departments which do not produce directly but incur costs to the business, when the manager and employees of the cost centre are not accountable for the profitability. For each account there are cost centres for which budgets are allocated."
    },
    "BudgetsDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Refers to the identifier of the budget. It is a value of long type. The minimum value is 1 and the maximum value is undetermined (autogenerated)."
        },
        "totalBudget": {
          "type": "number",
          "format": "double",
          "example": 1000000.0,
          "description": "Refers to the total amount allocated for the budget. It holds a double value. There is no specific validation for the minimum or maximum value."
        },
        "startDate": {
          "type": "integer",
          "format": "int64",
          "example": 1346524199000,
          "description": "Holds the timestamp value. It says from when the budget is effective. A valid timestamp value should be given. The value must be given in milliseconds."
        },
        "endDate": {
          "type": "integer",
          "format": "int64",
          "example": 1346524199000,
          "description": "Holds the timestamp value. It says until when the budget is effective. A valid timestamp value should be given. The value must be given in milliseconds."
        }
      },
      "description": "This model contains the budget information ie., the total budget amount allocated for the respective costcentres Budgets are allocated for buyer accounts (cost centre in that account) who will be purchasing from the seller user accounts."
    },
    "ResponseModel": {
      "type": "object",
      "properties": {
        "responseCode": {
          "type": "string",
          "example": "LIxxxxxxxx",
          "description": "Indicates response for the service operation. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "responseMessage": {
          "type": "string",
          "example": "List Item created successfully",
          "description": "Indicates response message attached to the response code.It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "timeStamp": {
          "type": "integer",
          "format": "int64",
          "example": "2016-08-16T10:15:30+08:00",
          "description": "Indicates milliseconds representation of the current time. Indicates the time in milliseconds since the UNIX epoch (January 1, 1970 00:00:00 UTC). It is a readonly field",
          "minimum": 0,
          "maximum": 255
        }
      },
      "description": "ResponseModel object - This model is used capture response code and response message"
    },
    "RoleResponse": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "createdBy": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Holds the user identifier who has created this entry. This is a unique identifier which can be used to identify a user",
          "allowEmptyValue": true
        },
        "createdTimestamp": {
          "type": "string",
          "format": "date-time",
          "example": "2018-05-10 01:16:17",
          "description": "Holds the created timestamp of this entry. It is specified using the format: <span style=\"font-family: courier\">YYYY-MM-DD HH:MM:SS</span>.",
          "allowEmptyValue": true
        },
        "description": {
          "type": "string",
          "example": "Resource Description",
          "description": "Holds the description of the role. This field describes the role.",
          "allowEmptyValue": true
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Holds a unique identifier of the role which can be associated with the privilege set.",
          "allowEmptyValue": true
        },
        "name": {
          "type": "string",
          "example": "Resource Name",
          "description": "Holds the name of this entry. The name consists of all the alphanumeric characters and the special character underscore (_). Other than the underscore, any other special characters are not allowed. A name must be unique within a collection. This field should not be null or empty."
        },
        "privileges": {
          "type": "array",
          "description": "Holds the list of privileges of this role. Each role can have multiple privileges.",
          "allowEmptyValue": true,
          "items": {
            "$ref": "#/definitions/Privilege"
          }
        },
        "type": {
          "type": "string",
          "example": "CUSTOM",
          "description": "Refers to the role type, such as:  <ul><li><b>STANDARD</b> - Defines the OOTB roles provided by Skava Commerce; for example, Catalog Editor.</li><li><b>CUSTOM</b> - Allows you to create custom roles; for example, Promotion Approver.</li></ul>"
        },
        "updatedBy": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Holds the user identifier who has updated this entry lastly. This is a unique identifier which can be used to identify a user",
          "allowEmptyValue": true
        },
        "updatedTimestamp": {
          "type": "string",
          "format": "date-time",
          "example": "2018-05-10 01:16:17",
          "description": "Holds the last updated timestamp of this entry. It is specified using the format: <span style=\"font-family: courier\">YYYY-MM-DD HH:MM:SS</span>.",
          "allowEmptyValue": true
        }
      }
    },
    "Privilege": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "conditionFlag": {
          "type": "boolean"
        },
        "createdBy": {
          "type": "integer",
          "format": "int64"
        },
        "createdTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "entity": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "level": {
          "type": "integer",
          "format": "int64"
        },
        "service": {
          "type": "string"
        },
        "updatedBy": {
          "type": "integer",
          "format": "int64"
        },
        "updatedTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PrivilegeResponse": {
      "type": "object",
      "required": [
        "action",
        "entity",
        "level",
        "service"
      ],
      "properties": {
        "action": {
          "type": "string",
          "example": "view",
          "description": "Refers to the action of the privilege. This field should not be null or empty."
        },
        "conditionFlag": {
          "type": "boolean",
          "example": false,
          "description": "Refers to whether the privilege is conditional or not. If the value is true, the privilege is conditional.",
          "allowEmptyValue": true
        },
        "createdBy": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Indicates the user who created this entry. This is a unique identifier which can be used to identify a user.",
          "allowEmptyValue": true
        },
        "createdTimestamp": {
          "type": "string",
          "format": "date-time",
          "example": "2018-05-10 01:16:17",
          "description": "Indicates the date and time when this entry was created. It is specified in the date and time format: <span style=\"font-family: courier\">YYYY-MM-DD HH:MM:SS</span>. For example, <span style=\"font-family: courier\">2018-05-10 01:16:17</span>.",
          "allowEmptyValue": true
        },
        "description": {
          "type": "string",
          "example": "Authorization privilege for view privilege",
          "description": "Refers to the description of the privilege.",
          "allowEmptyValue": true
        },
        "entity": {
          "type": "string",
          "example": "privilege",
          "description": "Refers to the entity or resource name of the privilege. This field should not be null or empty."
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Holds a unique identifier of the privilege, which can be associated with the privilege set.",
          "allowEmptyValue": true
        },
        "level": {
          "type": "integer",
          "format": "int64",
          "example": 100,
          "description": "Holds the maximum priority level of the privilege. The other lower levels can be determined based on this value. This field should not be null or empty."
        },
        "service": {
          "type": "string",
          "example": "auth",
          "description": "Refers to the service of the privilege. This field should not be null or empty."
        },
        "updatedBy": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Indicates the user who updated this entry lastly. This is a unique identifier which can be used to identify a user.",
          "allowEmptyValue": true
        },
        "updatedTimestamp": {
          "type": "string",
          "format": "date-time",
          "example": "2018-05-10 01:16:17",
          "description": "Indicates the date and time when this entry was updated. It is specified in the date and time format: <span style=\"font-family: courier\">YYYY-MM-DD HH:MM:SS</span>. For example, <span style=\"font-family: courier\">2018-05-10 01:16:17</span>.",
          "allowEmptyValue": true
        }
      }
    },
    "ContractsDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "contractName",
          "description": "Refers to the name of the contract. The name cannot be empty or null. It holds a string value. There is no specific validation for the length or range of the value."
        },
        "creditLimit": {
          "type": "number",
          "format": "double",
          "example": 1000000.0,
          "description": "Refers to the maximum limit until which the products can be ordered using credit. There is no specific validation for the minimum or maximum length. It holds a double value.",
          "allowEmptyValue": true
        },
        "catalogId": {
          "type": "string",
          "example": "1",
          "description": "Refers to the identifier of the catalog which is associated with this contract. It holds a string value.",
          "allowEmptyValue": true
        },
        "priceListId": {
          "type": "string",
          "example": "1",
          "description": "Refers to the identifier of the priceList which is a collection ID of pricing. It consists of pricelists which will be used for the products sold in this contract. It holds a string value.",
          "allowEmptyValue": true
        },
        "merchNavigationId": {
          "type": "string",
          "example": "1",
          "description": "Refers to the identifier of the site navigation in merchandising service which is associated with this contract. It holds a string value.",
          "allowEmptyValue": true
        },
        "paymentMethod": {
          "type": "string",
          "example": "credit",
          "description": "Refers to the method of payment.There is no specific validation on the range or length of the field.The payment methods available are:<br/><br/><ul><li><b>CREDIT</b> - Purchase is done using an individual's credit card.</li><li><b>PO></b> - Purchase is made first and the payment is done within the paymentTerm.</li></ul>",
          "allowEmptyValue": true
        },
        "paymentTermId": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Refers to the valid identifier of the existing payment term. It is used when the buyer wants to use PO for payment.This is an optional field since the user can also purchase using a credit card in that case paymentTermId is not necessary.",
          "allowEmptyValue": true
        },
        "status": {
          "type": "string",
          "example": "active",
          "description": "Refers to the status of the contract. The status can be any one of the following:<br/><br/><li><b>ACTIVE</b> - Indicates that the contract is active and it is being used by that account.</li><li><b>INACTIVE</b> - Indicates that the contract is inactive. One account can have multiple contracts.</li></ul>"
        },
        "startTime": {
          "type": "integer",
          "format": "int64",
          "example": 1346524199000,
          "description": "Holds the time value which says from when the cost center is effective. A valid timestamp should be given. Timestamp value should be in milliseconds.",
          "allowEmptyValue": true
        },
        "endTime": {
          "type": "integer",
          "format": "int64",
          "example": 1346524199000,
          "description": "Holds the time value. It says until when the cost center is effective. A valid timestamp should be given. The timestamp value should be in milliseconds.",
          "allowEmptyValue": true
        },
        "documents": {
          "type": "array",
          "description": "Refers to the document associated with the contract.",
          "items": {
            "$ref": "#/definitions/DocumentsDTO"
          }
        }
      },
      "description": "This model contains team details, such as team name, creditLimit,  status, and documents."
    },
    "DocumentsDTO": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": ".pdf, .img",
          "description": "Refers to the type of the document, that is, the extension of the document. There is no specific validation on the range or length of the field. The possible extension is .pdf.",
          "allowEmptyValue": true
        },
        "name": {
          "type": "string",
          "example": "document1",
          "description": "Refers to the name of the document. This field should not be null or empty. There is no specific validation on the range or length of the field."
        },
        "content": {
          "type": "array",
          "description": "Refers to the content of the document. This is the encoded document, that is, the document is converted into a byte array, and then gets uploaded.",
          "allowEmptyValue": true,
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      },
      "description": "This model contains document details, such as team name, type,  team content, and contract id."
    },
    "BudgetRequest": {
      "type": "object",
      "properties": {
        "endDate": {
          "type": "integer",
          "format": "int64",
          "example": 1346524199000,
          "description": "Holds the timestamp value. It says until when the budget is effective. A valid timestamp value should be given. The value must be given in milliseconds."
        },
        "startDate": {
          "type": "integer",
          "format": "int64",
          "example": 1346524199000,
          "description": "Holds the timestamp value. It says from when the budget is effective. A valid timestamp value should be given. The value must be given in milliseconds."
        },
        "totalBudget": {
          "type": "number",
          "format": "double",
          "example": 1000000.0,
          "description": "Refers to the total amount allocated for the budget. It holds a double value. There is no specific validation for the minimum or maximum value.",
          "allowEmptyValue": true
        }
      },
      "description": "This model contains the budget information ie., the total budget amount allocated for the respective costcentres Budgets are allocated for buyer accounts (cost centre in that account) who will be purchasing from the seller user accounts."
    },
    "CostCentreRequest": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "costCentre",
          "description": "Refers to the name of the cost center. This field should not be null or empty. There is no specific validation on the range or length of the field."
        },
        "status": {
          "type": "string",
          "example": "active",
          "description": "Refers to the status of the contract. The available statuses are:<br/><br/><ul><li><b>ACTIVE</b> - Indicates that the cost center is active.</li><li><b>INACTIVE</b> - Indicates that the cost center is not in use.</li></ul>"
        },
        "budgets": {
          "type": "array",
          "description": "Refers to the budgets which are associated with the cost center.",
          "items": {
            "$ref": "#/definitions/BudgetRequest"
          }
        }
      },
      "description": "A cost centre is a department within a business to which costs can be allocated. The term includes departments which do not produce directly but incur costs to the business, when the manager and employees of the cost centre are not accountable for the profitability. For each account there are cost centres for which budgets are allocated."
    },
    "CostCentersDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Refers to the name of the cost center. This field should not be null or empty. There is no specific validation on the range or length of the field."
        },
        "status": {
          "type": "string",
          "description": "Refers to the status of the contract. The available statuses are:<br/><br/><ul><li><b>ACTIVE</b> - Indicates that the cost center is active.</li><li><b>INACTIVE</b> - Indicates that the cost center is not in use.</li></ul>"
        },
        "budgets": {
          "type": "array",
          "description": "Refers to the budgets which are associated with the cost center.",
          "items": {
            "$ref": "#/definitions/BudgetsDTO"
          }
        }
      },
      "description": "A cost centre is a department within a business to which costs can be allocated. The term includes departments which do not produce directly but incur costs to the business, when the manager and employees of the cost centre are not accountable for the profitability. For each account there are cost centres for which budgets are allocated."
    },
    "TeamBuyer": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "example": "user_100",
          "description": "Refers to the unique ID of the buyer user. The field is of long type. The userId cannot be empty or null.There is no specific validation for the length or range of the field."
        },
        "teamId": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Refers to the unique ID of the team.The teamId can be left empty but when given a valid existing team ID should be given.The value is of the datatype long."
        }
      },
      "description": "This model contains the teambuyer details."
    },
    "TeamRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "platform",
          "description": "Refers to the name of the team. This field should not be null or empty.The minimum length is 3. There is no specific validation on the maximum length."
        },
        "description": {
          "type": "string",
          "example": "platform team",
          "description": "Holds the description of the team.There is no specific validation on the length or the range of the field.",
          "allowEmptyValue": true
        },
        "status": {
          "type": "string",
          "example": "active",
          "description": "Refers to the status of the team. The status can be any one of the following:<br/><br/><ul><li><b>ACTIVE</b> - Indicates that the team is active.</li><li><b>INACTIVE</b> - Indicates that the team is not in use.</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "costCentreId": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Refers to the valid identifier of the existing cost center. It is an optional field, that is, a team may or may not be associated with a cost center.",
          "allowEmptyValue": true
        },
        "teamBuyer": {
          "type": "array",
          "description": "Refers to the team buyer which will be associated with the team.",
          "items": {
            "$ref": "#/definitions/TeamBuyer"
          }
        }
      },
      "description": "This model contains the team details."
    },
    "TeamsRequest": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates the unique identifier of a team. It is generated automatically. It is a readonly field."
        },
        "name": {
          "type": "string",
          "example": "platform",
          "description": "Refers to the name of the team. This field should not be null or empty. The name should have a minimum length of 3. No validation occurs on the maximum length. It is a mandatory field.",
          "minLength": 0,
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "example": "platform team",
          "description": "Holds the description of the collection. There is no validation occurs on the length or the range of this field. It is an optional field."
        },
        "status": {
          "type": "string",
          "example": "active",
          "description": "Refers to the status of the team. The value can be ACTIVE or INACTIVE. The default status is ACTIVE. It is an optional field.<ul><li>ACTIVE - Indicates that the team is active.</li><li>INACTIVE - Indicates that the team is not in use.</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "customers": {
          "type": "array",
          "description": "Specifies the list of customers in the team.",
          "items": {
            "$ref": "#/definitions/CustomerOrchestration"
          }
        },
        "costcenterId": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Refers to the valid identifier of the cost centre. The value can be null or empty. It is an optional field."
        }
      },
      "description": "This model contains the team details."
    },
    "ContactInfo": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "dev@skava.com",
          "description": "Indicates the email ID of the customer. This field should not be null or empty.",
          "minLength": 0,
          "maxLength": 255
        },
        "phone": {
          "type": "string",
          "example": "123456789 ",
          "description": "Indicates the phone number of the customer. This field should not be null or empty if the preferred contact is PHONE or EMAIL.",
          "minLength": 0,
          "maxLength": 255
        },
        "preferredContact": {
          "type": "string",
          "example": "EMAIL",
          "description": "Indicates the preferred contact of the customer. The value can be EMAIL, TEXT/SMS, or PHONE. This field should not be null or empty. <br><ul><li>The Email - Email will be used for contacting the customer.</li> <li>The Phone - By calling the customer for his/her phone.</li><li>The SMS/Text - By sending the letter through SMS/Text , the customer are contacted.</li></ul>",
          "enum": [
            "EMAIL",
            "TEXT",
            "PHONE"
          ]
        }
      },
      "description": "This model contains customerâ€™s contact details."
    },
    "UserTracking": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "example": "acc1",
          "description": "Contains the account ID of the user who placed the order.",
          "minLength": 0,
          "maxLength": 255
        },
        "costCenterId": {
          "type": "string",
          "example": "1",
          "description": "Contains the first name of the user. This field should not be null or empty.",
          "minLength": 0,
          "maxLength": 255
        },
        "firstName": {
          "type": "string",
          "example": "john",
          "description": "Refers to the customerâ€™s first name who placed the order. This field should not be null or empty and holds a string value.",
          "minLength": 0,
          "maxLength": 255
        },
        "guestUser": {
          "type": "boolean",
          "example": false,
          "description": "Contains the boolean value to represent whether the user is guest user or not. If the user is guest, then the value is set as true and if not then the value is false"
        },
        "guestUserId": {
          "type": "string",
          "example": "1",
          "description": "Contains the guest user identifier. This field will have value only if the user is a guest user.",
          "minLength": 0,
          "maxLength": 255
        },
        "ip": {
          "type": "string",
          "description": "Contains the IP address from where the customer has placed the order. For example, 127.0.0.1",
          "minLength": 0,
          "maxLength": 255
        },
        "lastName": {
          "type": "string",
          "example": "smith",
          "description": "Contains the last name of the customer who has placed the order. This field should not be null or empty.",
          "minLength": 0,
          "maxLength": 255
        },
        "userContact": {
          "description": "This model contains customerâ€™s contact details.",
          "$ref": "#/definitions/ContactInfo"
        },
        "userId": {
          "type": "string",
          "example": "1",
          "description": "Contains the identifier of the customer who has placed the order.",
          "minLength": 0,
          "maxLength": 255
        },
        "zip": {
          "type": "string",
          "example": "6423",
          "description": "Contains the zip code of the customer where the customer resides. This field should not be null or empty.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model contains the user details."
    },
    "CustomerOrchestration": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "activationParam": {
          "type": "string",
          "example": "test",
          "description": "Refers to the activation param of the customer. It is used to activate when the customerâ€™s status is NOT ACTIVATED. This is an encrypted value. It contains the randomly generated code appended with the requested customer ID along with the current timestamp. This param is validated by the PATCH, customer, or activation API to switch the customer from NOT ACTIVATED status to ACTIVE status. There is no string validation occurs on the minimum and maximum lengths. Holds the string value.<br>It is consumed in the Customer service.",
          "minLength": 0,
          "maxLength": 255
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates the unique ID of the customer. It is an autogenerated value. It is a readonly field.<br>It is consumed in the Customer service. "
        },
        "firstName": {
          "type": "string",
          "example": "john",
          "description": "Refers to the customerâ€™s first name. It is an optional field.<br>It is consumed in the Customer service. ",
          "minLength": 0,
          "maxLength": 255
        },
        "lastName": {
          "type": "string",
          "example": "smith",
          "description": "Refers to the customerâ€™s last name. It is an optional field.<br>It is consumed in the Customer service. ",
          "minLength": 0,
          "maxLength": 255
        },
        "email": {
          "type": "string",
          "example": "dev@skava.com",
          "description": "Holds the customerâ€™s valid email address. It is used for the customer registration and login. With this value, a relevant identity will be created. It is a mandatory field. The value should be unique within a collection. The minimum and maximum length of an email are validated by a regex. The regex is '^(.+)@(.+).$â€™<br>It is consumed in the Customer service. ",
          "minLength": 0,
          "maxLength": 255
        },
        "phoneNumber": {
          "type": "string",
          "example": "1234567890",
          "description": "Holds the customerâ€™s valid phone number. It is used for customer registration and login. With this value, a relevant identity will be created. The value should be unique within a collection. This field should not be null or empty. It is a mandatory field. The value is validated by a regex. The regex is â€™[Â±\\ (0-9Â±\\ )]{3,20}$â€™.<br>It is consumed in the Customer service.",
          "minLength": 3,
          "maxLength": 20
        },
        "userName": {
          "type": "string",
          "example": "testUserName",
          "description": "Indicates the userâ€™s name. UserName identity will be created for the user name.This value is used by the user for login. For example, testUserName.",
          "minLength": 0,
          "maxLength": 255
        },
        "dateOfBirth": {
          "type": "string",
          "example": "08-10-1990",
          "description": "Holds the customerâ€™s date of birth. No specific date format is defined. It is an optional field.<br>It is consumed in the Customer service. ",
          "minLength": 0,
          "maxLength": 255
        },
        "gender": {
          "type": "string",
          "example": "male",
          "description": "Refers to the customerâ€™s gender. It is an optional field.<br>It is consumed in the Customer service. ",
          "minLength": 0,
          "maxLength": 255
        },
        "photo": {
          "type": "string",
          "example": "string_url",
          "description": "Holds the uploaded image URL of the customerâ€™s profile photo. It can hold any valid URL. It is an optional field.<br>It is consumed in the Customer service. ",
          "minLength": 0,
          "maxLength": 255
        },
        "customProperties": {
          "type": "object",
          "description": "Indicates all additional properties which need to be added to a customer account apart from the available default properties. The default properties are customerâ€™s firstname, lastname, email, phonenumber, DOB, preferences etc. It is an optional parameter. It is of JSON type with the key indicates the property name and the value indicates the property value. For example, <font face=\"courier\">customProperties : {â€™segmentâ€™:â€™goldâ€™,â€™userRollNumberâ€™:â€™123â€™}</font><br>It is consumed in the Customer service. ",
          "additionalProperties": {
            "type": "string"
          }
        },
        "userTracking": {
          "description": "This model contains the user details.<br>It is consumed in OMS service.",
          "$ref": "#/definitions/UserTracking"
        },
        "billingAddress": {
          "description": "The model contains the customerâ€™s address details.<br>It is consumed in OMS service.",
          "$ref": "#/definitions/AddressOrchestration"
        }
      },
      "description": "This model represents customer orchestration details consumed by the Customer and OMS services."
    },
    "TeamsResponse": {
      "type": "object",
      "properties": {
        "costCentreId": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Refers to the valid identifier of the existing cost centre. The value can be null or empty. It is an optional field."
        },
        "name": {
          "type": "string",
          "example": "platform",
          "description": "Refers to the name of the team. This field should not be empty or null. It is a mandatory field. The minimum length is 3. There is no specific validation occurs on the maximum length.",
          "minLength": 0,
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "example": "platform team",
          "description": "Holds the description of the team. There is no specific validation occurs on the maximum length. It is an optional field.",
          "minLength": 0,
          "maxLength": 255
        },
        "status": {
          "type": "string",
          "example": "active",
          "description": "Refers to the status of the team. The status can be ACTIVE or INACTIVE. <ul><li>ACTIVE - Indicates that the team is active.</li><li>INACTIVE - Indicates that the team is not in use.</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "teamBuyer": {
          "type": "array",
          "description": "Refers to the list of team buyers associated with the team.",
          "items": {
            "$ref": "#/definitions/AccountBuyerDTO"
          }
        },
        "existingCustomers": {
          "type": "array",
          "description": "Indicates the list of existing customer.",
          "items": {
            "$ref": "#/definitions/CustomerOrchestration"
          }
        }
      },
      "description": "This model contains the team details."
    },
    "CardOrchestration": {
      "type": "object",
      "required": [
        "cardNumber",
        "expiryMonth",
        "expiryYear",
        "lastName",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe",
          "description": "Indicates the name of the cardholder or the account holder.<br>It is consumed in the Cart, OMS, and/or Customer services:<ul><li>For OMS: can not be null or empty.</li><li>For Cart: No validations.</li><li>For Customer: Refers to first name of the Customer. It is a mandatory field.</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "cardNumber": {
          "type": "string",
          "example": "r49g3qy54tr",
          "description": "Indicates the number that forms the critical account information. The value will be the Card Number in case of a card payment or the account number in case of an account transfer.<br>It is consumed in the Cart, OMS, and/or Customer services.<ul><li>For Customer: It is a mandatory field. This field should not be null or empty.</li><li>For OMS: It is a mandatory field. This field should not be null or empty.</li><li>For Cart: It is a mandatory field. This field should not be null or empty.</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "example": "CASH",
          "description": "Refers to the payment type. It is a mandatory field. The possible payment types are CREDITCARD, DEBITCARD, GIFTCARD, LOYALTY, PURCHASEORDER, and CASH.<br>It is consumed in the Cart and OMS services",
          "minLength": 0,
          "maxLength": 255
        },
        "expiryMonth": {
          "type": "string",
          "example": "01",
          "description": "Indicates the card expiration month of the customer. The value should be given between 1 and 12. This field should not be null or empty.<br>It is consumed in the Cart, OMS, and/or Customer services.",
          "minLength": 1,
          "maxLength": 12
        },
        "expiryYear": {
          "type": "string",
          "example": "2020",
          "description": "Refers to the expiration year of the payment card. The format is YYYY. It is a mandatory field.<br>It is consumed in the Cart, OMS, and/or Customer services."
        },
        "cvv": {
          "type": "string",
          "example": "123",
          "description": "Indicates the verification value of the card, in case of the card payment. Currently, there are no validations for length and value.It is consumed in the Cart service.",
          "minLength": 0,
          "maxLength": 255
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Refers to the ID of the payment card. It is an auto-generated value.<br>It is consumed in the Cart, OMS, and/or Customer services."
        },
        "lastName": {
          "type": "string",
          "example": "smith",
          "description": "Refers to the last name in the payment card holder of the customer. It is a mandatory field.<br>It is consumed in the Customer service.",
          "minLength": 0,
          "maxLength": 255
        },
        "isDefault": {
          "type": "boolean",
          "example": true,
          "description": "Represents whether the given card is the default card or not. For each customer, only one payment card is set as the default payment card. The default value is true. It is an optional field.<br>It is consumed in the Customer service."
        },
        "provider": {
          "type": "string",
          "example": "amex",
          "description": "Refers to the provider or brand name of the payment card. It is a mandatory field. The Payment Provider consists of â€˜tokenâ€™ which will be created by passing the card details to the third-party service. The token will be created only for the CREDITCARD and DEBITCARD. This token will be kept as a reference instead of saving the card details in the database. This token is used to perform the required transactions. Provider Master is required for creating a token. Service will get the provider with the help of given type while creating a payment. The possible provider is â€˜Cybersourceâ€™ for credit/debit card.<br>It is consumed in the Customer service.",
          "minLength": 0,
          "maxLength": 255
        },
        "token": {
          "type": "string",
          "example": "xyzabc",
          "description": "Refers to the paymentToken generated by the payment gateway service. It is a readonly field.<br>It is consumed in the Customer service.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model represents the Card details consumed in the Account and Cart services."
    },
    "SkuFulfillmentDetails": {
      "type": "object",
      "properties": {
        "fulfillmentType": {
          "type": "string",
          "example": "DIGITAL",
          "description": "Indicates the type in which the SKU can be fulfilled. It is a readonly field The fulfillment types are as follows:<ul><li>PHYSICAL - The SKU is fulfilled physically, either by physically sending it to the home or by delivering it in the store.</li> <li>DIGITAL: The SKU is fulfilled digitally.</li></ul>",
          "enum": [
            "PHYSICAL",
            "DIGITAL"
          ]
        },
        "shippingCode": {
          "type": "string",
          "example": "SMALL",
          "description": "Specifies the shipping code from the catalog service. The value will be used by the shipping service to determine the delivery charge. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "specialShipping": {
          "type": "boolean",
          "example": false,
          "description": "Specifies whether the SKU needs to be shipped with special provisions or not. It is a readonly fieldThe value:<br/><ul><li><b>true</b> indicates the SKU needs special shipping.</li><li>The value false indicates the SKU does not need special shipping.</li></ul>"
        },
        "specialShippingCode": {
          "type": "string",
          "example": "FRAGILESMALL",
          "description": "Indicates the special shipping code, used to determine the delivery charge. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "returnable": {
          "type": "boolean",
          "example": false,
          "description": "Specifies whether the SKU is returnable or not. It is a readonly field The value:<br/><ul><li><b>true</b> indicates the SKU can be returned.</li><li>The value false indicates the SKU can not be returned.</li></ul>"
        },
        "skuDimension": {
          "description": "Dimension details of the SKU. This will be provided for SKU with fulfillment type PHYSICAL.It is a readonly field",
          "$ref": "#/definitions/SkuFulfillmentDimension"
        },
        "skuWeight": {
          "description": "Weight details of the SKU. This will be provided for SKU with fulfillment type PHYSICAL. It is a readonly field",
          "$ref": "#/definitions/SkuFulfillmentWeight"
        },
        "skuSize": {
          "description": "Size details of the SKU. This will be provided for SKU with fulfillment type DIGITAL. It is a readonly field",
          "$ref": "#/definitions/SkuFulfillmentSize"
        }
      },
      "description": "This model consists of attributes related to the fulfillment of the SKU."
    },
    "DeliveryStore": {
      "type": "object",
      "properties": {
        "storeId": {
          "type": "string",
          "example": "MyStore",
          "description": "Specifies the physical store identifier, which uniquely locates the physical store. There is no validation occurs on the length and the value.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model specifies the delivery store from where the SKU will be fulfilled."
    },
    "DeliveryDetails": {
      "type": "object",
      "properties": {
        "deliveryId": {
          "type": "string",
          "example": "353SDGDS24",
          "description": "Indicates the unique identifier of the delivery details. It is generated in the Cart service. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "isDeliveredAlone": {
          "type": "boolean",
          "example": true,
          "description": "Specifies whether the item is delivered at the item level or at the cart level. <ul><li>The value true indicates the item level delivery.</li><li>The value false indicates the cart level delivery.</li></ul>"
        },
        "deliveryType": {
          "type": "string",
          "example": "DIGITAL",
          "description": "Indicates the type of delivery opted by the customer. The value can be PHYSICAL, DIGITAL, or STOREPICKUP.<ul><li>PHYSICAL - Corresponds to physical delivery of an item.</li> <li>DIGITAL- Corresponds to digital delivery of an item.</li> <li>STOREPICKUP - Corresponds to delivery where an item is picked up from the store.</li></ul>",
          "minLength": 0,
          "maxLength": 255,
          "enum": [
            "PHYSICAL",
            "DIGITAL",
            "STOREPICKUP"
          ]
        },
        "deliveryInstructions": {
          "type": "string",
          "example": "Leave it at the door steps",
          "description": "Indicates the delivery instructions requested by the customer. There is no validation occurs on the length and the value.",
          "minLength": 0,
          "maxLength": 255
        },
        "deliverOnOrBefore": {
          "type": "integer",
          "format": "int64",
          "example": 153129361068312,
          "description": "Indicates the delivery date requested by the customer. The item should be delivered on or before this date. Indicates timestamp in milliseconds since the UNIX epoch (January 1, 1970 00:00:00 UTC). There is no validation occurs on this field."
        },
        "deliveryCharge": {
          "type": "number",
          "example": 5.99,
          "description": "Indicates the delivery charge for the delivery of a single quantity."
        },
        "totalDeliveryCharge": {
          "type": "number",
          "example": 5.99,
          "description": "Indicates the delivery charge for the delivery of total quantity.quantity."
        },
        "store": {
          "description": "Store information of where the SKU needs to be picked up from.",
          "$ref": "#/definitions/DeliveryStore"
        },
        "address": {
          "description": "Delivery address for the items that are in the cart. Only one address can be tied to a cart altogather and or to a cart item.",
          "$ref": "#/definitions/AddressOrchestration"
        },
        "methods": {
          "type": "array",
          "description": "Indicates the delivery methods based on the delivery type opted by the customer.",
          "items": {
            "$ref": "#/definitions/DeliveryMethod"
          }
        },
        "properties": {
          "type": "object",
          "description": " Indicates the custom properties of the delivery. ",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "This model contains delivery details of the item or the items in the cart."
    },
    "AlternateCurrencyAdjustedValues": {
      "type": "object",
      "properties": {
        "points": {
          "type": "number",
          "example": 19730.0,
          "description": "Indicates the adjusted total points of the SKU. It is a readonly field"
        },
        "minPoints": {
          "type": "number",
          "example": 10730.0,
          "description": "Indicates the adjusted minimum points for the SKU. It is a readonly field"
        },
        "maxPoints": {
          "type": "number",
          "example": 9610.0,
          "description": "Indicates the adjusted maximum points for the SKU. It is a readonly field"
        },
        "pointsToPurchase": {
          "type": "number",
          "example": 500.0,
          "description": "Indicates the adjusted points to purchase value based on customer selection and discount value. It is a readonly field"
        },
        "cashToPurchase": {
          "type": "number",
          "example": 7.5,
          "description": "Indicates the adjusted cash to purchase value based on customer selection and discount value. It is a readonly field"
        },
        "totalPointsToPurchase": {
          "type": "number",
          "example": 500.0,
          "description": "Indicates the adjusted total points to purchase into the product of quantity. It is a readonly field"
        },
        "totalCashToPurchase": {
          "type": "number",
          "example": 7.5,
          "description": "Indicates the adjusted total cash to purchase into the product of quantity. It is a readonly field"
        }
      },
      "description": "This model contains the adjusted values after processing the discount points."
    },
    "Promotion": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "ITEM",
          "description": "Specifies the level of promotion.This is a readonly field. The accepted values are ITEM, CART, and APPEASEMENT.<ul><li>ITEM - Indicates item level promotion.</li> <li>CART - Indicates cart level promotion.</li><li>APPEASEMENT - Indicates appeasement type of promotion.</li></ul>",
          "enum": [
            "ITEM",
            "CART",
            "APPEASEMENT"
          ]
        },
        "unitPrice": {
          "type": "number",
          "example": 1.99,
          "description": "Indicates the total promotional discount of all item level promotions per unit. This is a readonly field."
        },
        "totalPrice": {
          "type": "number",
          "example": 1.99,
          "description": "Indicates the total promotional discount of all item level promotions for all units. This is a readonly field."
        },
        "unitDeliveryCharge": {
          "type": "number",
          "example": 1.11,
          "description": "Indicates the total promotional discount on delivery charge of all item level promotions per unit. This is a readonly field."
        },
        "totalDeliveryCharge": {
          "type": "number",
          "example": 1.11,
          "description": "Indicates the total promotional discount on delivery charge of all item level promotions for all units. This is a readonly field."
        },
        "breakup": {
          "type": "array",
          "description": "Indicates the break up of all discounts in the specific promotion type.",
          "items": {
            "$ref": "#/definitions/PromotionBreakUp"
          }
        }
      },
      "description": "This model contains all promotion details of the item and the cart or appeasement discounts."
    },
    "SFCommunicationPreference": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "John",
          "description": "Indicates the first name of the customer. There is no validation occurs on the length and the value.",
          "minLength": 0,
          "maxLength": 255
        },
        "lastName": {
          "type": "string",
          "example": "Doe",
          "description": "Indicates the last name of the customer. There is no validation occurs on the length and the value.",
          "minLength": 0,
          "maxLength": 255
        },
        "email": {
          "type": "string",
          "example": "john.doe@somemail.com",
          "description": "Indicates the email address for communication from the customer. The value should be a valid email address.",
          "minLength": 0,
          "maxLength": 255
        },
        "phone": {
          "type": "string",
          "example": "2334365465655",
          "description": "Indicates the phone number of the customer. It should be numeric value only.",
          "minLength": 0,
          "maxLength": 255
        },
        "zipCode": {
          "type": "string",
          "example": "641004",
          "description": "Indicates the zip code of the customer. There is no validation occurs on the length and the value.",
          "minLength": 0,
          "maxLength": 255
        },
        "preferredContactMethod": {
          "type": "string",
          "example": "PHONE",
          "description": "Indicates the preferred communication method for the customer. The accepted values are SMS, PHONE, and EMAIL. The default value is EMAIL.",
          "enum": [
            "TEXT",
            "CALL",
            "MAIL",
            "EMAIL"
          ]
        }
      },
      "description": "This model captures the communication preference for the cart."
    },
    "SFCart": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "description": "Indicates all the items that are managed in the cart.",
          "items": {
            "$ref": "#/definitions/SFItem"
          }
        },
        "storeDetails": {
          "description": "It refers the store details where item is selected",
          "$ref": "#/definitions/StoreDetails"
        },
        "deliveryDetails": {
          "description": "Delivery  details for the item or the items of the cart.",
          "$ref": "#/definitions/DeliveryDetails"
        },
        "estimationAddress": {
          "description": "Delivery address for the items that are in the cart. Only one address can be tied to a cart altogather and or to a cart item.",
          "$ref": "#/definitions/AddressOrchestration"
        },
        "promotionDetails": {
          "description": "Promotion model that catches all promotion details of the item or the cart.",
          "$ref": "#/definitions/PromotionDetails"
        },
        "cartContainsTestDiscount": {
          "type": "boolean",
          "example": false,
          "description": "Specifies whether the cart contains a test discount or not. It is a readonly field"
        },
        "payments": {
          "type": "array",
          "description": "Indicates the list of payments added to the cart.",
          "items": {
            "$ref": "#/definitions/PaymentOrchestration"
          }
        },
        "paymentValue": {
          "description": "Required payment for the cart",
          "$ref": "#/definitions/RequiredPayment"
        },
        "value": {
          "description": "The overall computation outcome of all items in the cart.",
          "$ref": "#/definitions/CartMath"
        },
        "currencySign": {
          "type": "string",
          "example": "$",
          "description": "Indicates the currency sign for the currency code. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "currencyCode": {
          "type": "string",
          "example": "USD",
          "description": "Indicates the currency code for the cart. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "communicationPreference": {
          "description": "The communication preference model captures the communication preference for the cart.",
          "$ref": "#/definitions/SFCommunicationPreference"
        },
        "ageVerification": {
          "description": "This model contains the details about the Age Verification Requirement and the provided verification.",
          "$ref": "#/definitions/CartAgeVerificationDetails"
        },
        "properties": {
          "type": "object",
          "description": "Indicates the custom properties that can be added to the cart. ",
          "additionalProperties": {
            "type": "string"
          }
        },
        "removeProperties": {
          "type": "object",
          "description": "Indicates the custom properties that need to be removed from the cart. ",
          "additionalProperties": {
            "type": "string"
          }
        },
        "errorCode": {
          "type": "string",
          "example": "CNCO0000324",
          "description": "Indicates the error code describing the error in the cart. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "errorMessage": {
          "type": "string",
          "example": "Bag is empty",
          "description": "Indicates the locale based error message describing the error code. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "cartId": {
          "type": "string",
          "example": "423843",
          "description": "Indicates the unique identifier of the cart. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "cartType": {
          "type": "string",
          "example": "USER",
          "description": "Specifies the type of the cart. There can be only one type of cart per customer. Some of the types are USER and SUBSCRIPTION. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "userId": {
          "type": "string",
          "example": "25345",
          "description": "Indicates the unique identifier of the customer. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "userName": {
          "type": "string",
          "example": "Guest",
          "description": "Indicates customer first name who owns the cart. Customer name will be Guest for a guest customer. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "costCenterId": {
          "type": "string",
          "example": "1",
          "description": "Indicates the identifier of the B2B Cost center. A Cost centre is a department within a business to which costs can be allocated to the team. This is an input field.",
          "minLength": 0,
          "maxLength": 255
        },
        "accountsId": {
          "type": "string",
          "example": "1",
          "description": "Indicates the unique identifier of the B2B Accounts. This is an input field.",
          "minLength": 0,
          "maxLength": 255
        },
        "createdTime": {
          "type": "integer",
          "format": "int64",
          "example": 1531728731539,
          "description": "Specifies the time when the cart was created. Indicates the time in milliseconds since the UNIX epoch (January 1, 1970 00:00:00 UTC). It is a readonly field"
        },
        "lastUpdatedTime": {
          "type": "integer",
          "format": "int64",
          "example": 1531728731539,
          "description": "Specifies the last time the cart was updated. Indicates the time in milliseconds since the UNIX epoch (January 1, 1970 00:00:00 UTC). It is a readonly field"
        },
        "lastAccessedFromStore": {
          "type": "string",
          "example": "FIRSTSTORE",
          "description": "Indicates the latest store identifier used by the customer to access the cart. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model represents the entire cart of the customer."
    },
    "SkuFulfillmentDimension": {
      "type": "object",
      "properties": {
        "length": {
          "type": "number",
          "example": 6.2,
          "description": "Specifies the length of the SKU. Required if the SKU dimension is provided. It is a readonly field"
        },
        "width": {
          "type": "number",
          "example": 3.4,
          "description": "Specifies the width of the SKU. Required if the SKU dimension is provided. It is a readonly field"
        },
        "height": {
          "type": "number",
          "example": 5.2,
          "description": "Specifies the height of the SKU. Required if the SKU dimension is provided. It is a readonly field"
        },
        "unit": {
          "type": "string",
          "example": "INCHES",
          "description": "Specifies the unit of measurement of the SKU. Required if the SKU dimension is provided. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model contains the dimensional details of the SKU. This will be provided for the SKU(s) with fulfillment type PHYSICAL."
    },
    "AlternateCurrency": {
      "type": "object",
      "properties": {
        "cashToPurchase": {
          "type": "number",
          "example": 10.22,
          "description": "Specifies the cash to purchase opted by the customer to buy the item. The minimum and the maximum limit of the value comes from the Pricing service. This is an optional field."
        },
        "pointsToPurchase": {
          "type": "number",
          "example": 1000.0,
          "description": "Specifies the points to purchase opted by the customer to buy the item. The minimum and the maximum limit of the value comes from the Pricing service. This is an optional field."
        },
        "totalPointsToPurchase": {
          "type": "number",
          "example": 1000.0,
          "description": "Specifies the total points to purchase opted by the customer to buy the item. This is a readonly field."
        },
        "totalCashToPurchase": {
          "type": "number",
          "example": 10.22,
          "description": "Specifies the total cash to purchase opted by the customer to buy the item. This is a readonly field."
        },
        "discountPoints": {
          "type": "number",
          "example": 500.0,
          "description": "Indicates the calculated discount points of the cart. This is a readonly field."
        },
        "adjustedValues": {
          "description": "Adjusted values for alternate currency",
          "$ref": "#/definitions/AlternateCurrencyAdjustedValues"
        }
      },
      "description": "This model contains the details of the alternate currency option selected and the details of discounts applied to them."
    },
    "CartMath": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number",
          "example": 5.0,
          "description": "Indicates the number of items in the cart. It is a readonly field"
        },
        "originalPrice": {
          "type": "number",
          "example": 132.12,
          "description": "Indicates the original total price of all the SKUs and for all the quantities in the cart. It is a readonly field"
        },
        "markdown": {
          "type": "number",
          "example": -4.12,
          "description": "Indicates the markdown value of all the SKUs and for all the quantities in the cart. A markdown is a reduction of the original price of skus to increase sales. It is a readonly field"
        },
        "priceAfterMarkdown": {
          "type": "number",
          "example": 128.0,
          "description": "Indicates the price after markdown for all the SKUs and for all the quantities in the cart. A markdown is a reduction of the original price of skus to increase sales. It is a readonly field"
        },
        "itemDiscount": {
          "type": "number",
          "example": -5.24,
          "description": "Specifies the item level discount for all the SKUs and for all the quantities in the cart. It is a readonly field"
        },
        "cartDiscount": {
          "type": "number",
          "example": -7.23,
          "description": "Specifies the cart level discounts for all the SKUs and for all the quantities in the cart. It is a readonly field"
        },
        "totalDiscount": {
          "type": "number",
          "example": -12.47,
          "description": "Specifies the total discount for all the SKUs and for all the quantities in the cart. It is a readonly field"
        },
        "priceAfterDiscount": {
          "type": "number",
          "example": 115.53,
          "description": "Specifies the price after discount for all the SKUs and for all the quantities in the cart. It is a readonly field"
        },
        "taxOnPrice": {
          "type": "number",
          "example": 11.55,
          "description": "Specifies the tax for all the SKUs and for all the quantities in the cart. It is a readonly field"
        },
        "priceIncludingTax": {
          "type": "number",
          "example": 127.08,
          "description": "Specifies the price after discount including tax for all the SKUs and for all the quantities in the cart. It is a readonly field"
        },
        "itemDeliveryCharge": {
          "type": "number",
          "example": 0.0,
          "description": "Specifies the item level delivery charges for all the SKUs and for all the quantities in the cart. It is a readonly field"
        },
        "itemDeliveryChargeDiscount": {
          "type": "number",
          "example": 0.0,
          "description": "Specifies the item level delivery charges discount for all the SKUs and for all the quantities in the cart. It is a readonly field"
        },
        "itemDeliveryChargeAfterDiscount": {
          "type": "number",
          "example": 0.0,
          "description": "Specifies the item level delivery charges after discount for all the SKUs and for all the quantities in the cart. It is a readonly field"
        },
        "cartDeliveryCharge": {
          "type": "number",
          "example": 9.99,
          "description": "Specifies the cart level delivery charges for all the SKUs and for all the quantities in the cart. It is a readonly field"
        },
        "cartDeliveryChargeDiscount": {
          "type": "number",
          "example": 4.99,
          "description": "Specifies the cart level delivery charges discount for all the SKUs and for all the quantities in the cart. It is a readonly field"
        },
        "cartDeliveryChargeAfterDiscount": {
          "type": "number",
          "example": 5.0,
          "description": "Specifies the cart level delivery charges after discount for all the SKUs and for all the quantities in the cart. It is a readonly field"
        },
        "totalDeliveryCharge": {
          "type": "number",
          "example": 5.0,
          "description": "Specifies the total delivery charges for all the SKUs and for all the quantities in the cart. It is a readonly field"
        },
        "taxOnDeliveryCharge": {
          "type": "number",
          "example": 0.5,
          "description": "Specifies the tax on delivery charges for all the SKUs and for all the quantities in the cart. It is a readonly field"
        },
        "deliveryChargeIncludingTax": {
          "type": "number",
          "example": 5.5,
          "description": "Specifies the total delivery charges including tax for all the SKUs and for all the quantities in the cart. It is a readonly field"
        },
        "overAllDiscount": {
          "type": "number",
          "example": 17.46,
          "description": "Specifies the overall discount for the cart. It is a readonly field"
        },
        "overAllTax": {
          "type": "number",
          "example": 17.05,
          "description": "Specifies the overall tax collected for the cart. It is a readonly field"
        },
        "grandTotal": {
          "type": "number",
          "example": 132.58,
          "description": "Specifies the overall value of the cart. It is a readonly field"
        }
      },
      "description": "This model contains the overall computation outcome of all the items in the cart."
    },
    "SkuInventoryLimit": {
      "type": "object",
      "properties": {
        "available": {
          "type": "boolean",
          "example": true,
          "description": "Specifies whether the inventory is available for the required quantity or not. It is a readonly field<ul><li>The value true indicates the required quantity is available.</li><li>The value false indicates the required quantity is unavailable.</li></ul>"
        },
        "lowStock": {
          "type": "boolean",
          "example": false,
          "description": "Specifies whether the stock availability is limited or not. It is a readonly field<ul><li>The value true indicates the available quantity is limited.</li><li>The value false indicates the sufficient quantity is available or the SKU is out of stock.</li></ul>"
        },
        "binName": {
          "type": "string",
          "example": "ATBBIN",
          "description": "Specifies the bin name where the inventory status is provided. The bin name will get from inventory service. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "backOrdered": {
          "type": "boolean",
          "example": true,
          "description": "Specifies whether the SKU can be back ordered or not. It is a readonly field<ul><li>The value true indicates the SKU can be back ordered.</li><li>The value false indicates the SKU cannot be back ordered.</li></ul>"
        },
        "expectedBackOrderAvailabilityDate": {
          "type": "integer",
          "format": "int64",
          "example": "1.531623191514E12",
          "description": "Specifies when the back ordered items will be available for shipping. Indicates the time in milliseconds since the UNIX epoch (January 1, 1970 00:00:00 UTC). It is a readonly field"
        },
        "preOrdered": {
          "type": "boolean",
          "example": true,
          "description": "Specifies whether the SKU is available for pre-order or not.  It is a readonly field<ul><li>The value true indicates the SKU is available for pre-order.</li><li>The value true indicates the SKU is not available for pre-order.</li></ul>"
        },
        "expectedPreOrderAvailabilityDate": {
          "type": "integer",
          "format": "int64",
          "example": "1.531623191514E12",
          "description": "Specifies when the pre ordered items will be available for shipping. Indicates the time in milliseconds since the UNIX epoch (January 1, 1970 00:00:00 UTC). It is a readonly field"
        }
      },
      "description": "This model contains the inventory details of the SKU."
    },
    "SkuAlternateCurrencyOfferAppliedValues": {
      "type": "object",
      "properties": {
        "points": {
          "type": "number",
          "example": 20230.0,
          "description": "Specifies the sale points value of the SKU after the promotion. It is a readonly field"
        },
        "minPoints": {
          "type": "number",
          "description": "Specifies the minimum points to be used to purchase the SKU after the promotion. It is a readonly field"
        },
        "maxPoints": {
          "type": "number",
          "example": 20230.0,
          "description": "Specifies the maximum points to be used to purchase the SKU after the promotion. It is a readonly field"
        }
      },
      "description": "This model contains the offer applied values for the alternate currency. Alternate currencies like POINTS, STARS, MILES."
    },
    "PaymentItemOrchestration": {
      "type": "object",
      "properties": {
        "paymentRefId": {
          "type": "string",
          "example": "123242342",
          "description": "Indicates the reference ID of a particular payment.<br>It is consumed in OMS and Cart services.",
          "minLength": 0,
          "maxLength": 255
        },
        "status": {
          "type": "string",
          "description": "Indicates the current status of a particular payment. The status of the payment used for different scenarios are:<br><ul><li>PREAUTHORIZED - When an order comes from the cart</li><li>AUTHORIZED - When an order is submitted</li><li>AUTHORIZATION_PENDING - When the submitted orderâ€™s payment is pending</li><li>AUTHORIZATION_CANCELED - When a submitted order is cancelled</li><li>AUTHORIZATION_CANCELED_PENDING - When the cancelled orderâ€™s payment is pending</li><li>SETTLED - When the order is charged</li><li>SETTLED_FULFILLED - When the orderâ€™s payment is completed</li><li>SETTLED_PENDING - When the orderâ€™s payment is pending</li><li>REFUNDED - When the orderâ€™s payment is refunded</li><li>REFUND_PENDING - When the orderâ€™s refund is pending</li><li>BADDEBT - When the order has bad debt</li></ul>",
          "enum": [
            "AUTHORIZED",
            "SETTLED",
            "SETTLED_FULFILLED",
            "AUTHORIZED_REFUND",
            "REFUNDED",
            "AUTHORIZATION_CANCELED",
            "CHARGEPENDING",
            "REFUNDPENDING",
            "PREAUTHORIZED",
            "BADDEBT"
          ]
        },
        "transactionId": {
          "type": "string",
          "example": "124235435346",
          "description": "Indicates the unique identifier of the payment transaction.",
          "minLength": 0,
          "maxLength": 255
        },
        "value": {
          "type": "number",
          "example": 100.0,
          "description": "Indicates the payment amount processed by a payment provider.<br>It is consumed in OMS and Cart services.<ul><li>For Cart: Mandatory field, Should not be null or empty.</li><li>For OMS: Mandatory field, Should not be null or empty.</li></ul>"
        },
        "cardInfo": {
          "description": "Details of credit/debit card",
          "$ref": "#/definitions/CardOrchestration"
        },
        "paymentItemId": {
          "type": "string",
          "example": "363464",
          "description": "Indicates the unique identifier for the payment item in a string format.<br>It is consumed in the Cart service. ",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model contains the payment item details of an order."
    },
    "SFItem": {
      "type": "object",
      "required": [
        "quantity"
      ],
      "properties": {
        "itemId": {
          "type": "integer",
          "format": "int64",
          "example": 3,
          "description": " Indicates the unique identifier of the item. It is a readonly field"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Specifies the quantity of the SKU that the customer adds to the cart. It is a mandatory field. The field should not be null, empty or zero. The minimum and the maximum quantity of an item is maintained in the Catalog service."
        },
        "variablePriceOpted": {
          "type": "number",
          "example": 50.0,
          "description": "Indicates the variable price opted value by the consumer for a SKU."
        },
        "storeDetails": {
          "description": "It refers the store details where item is selected",
          "$ref": "#/definitions/StoreDetails"
        },
        "skus": {
          "type": "array",
          "description": "Indicates the SKU details of the items in the cart. These details are obtained from other micro-services such as Catalog, Pricing, and inventory.",
          "items": {
            "$ref": "#/definitions/SFSku"
          }
        },
        "alternateCurrency": {
          "description": "This model consists of alternate currency option selected and the details of discounts applied to them",
          "$ref": "#/definitions/AlternateCurrency"
        },
        "deliveryDetails": {
          "description": "Delivery details for the item or the items of the cart.",
          "$ref": "#/definitions/DeliveryDetails"
        },
        "promotionDetails": {
          "description": "Promotion model that catches all promotion details of the item or the cart.",
          "$ref": "#/definitions/PromotionDetails"
        },
        "taxationDetails": {
          "description": "Tax details for the item or the cart.",
          "$ref": "#/definitions/TaxationDetails"
        },
        "unitValue": {
          "description": "Calculated item values per unit are captured in this model.",
          "$ref": "#/definitions/ItemMath"
        },
        "totalValue": {
          "description": "Calculated item values for total quantity are captured in this model.",
          "$ref": "#/definitions/ItemMath"
        },
        "valid": {
          "type": "boolean",
          "example": true,
          "description": "Specifies whether the item is valid or has some errors. It is a readonly field The value:<br/><ul><li>'true' indicates the item is valid.</li><li>'false' indicates the item is invalid. Some of the errors which may occur for an item are 'Invalid Item Brand', etc.</li></ul>"
        },
        "currency": {
          "type": "string",
          "example": "USD",
          "description": "Indicates the currency for all the calculations of the items. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "sourceItemId": {
          "type": "number",
          "example": 96242.0,
          "description": "Indicates the source item identifier to map the source item with the gift item. It is a readonly field"
        },
        "errorCode": {
          "type": "string",
          "example": "CNCOxxxxxx",
          "description": "Indicates the error code of the error in the item. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "errorMessage": {
          "type": "string",
          "example": "Inventory not available",
          "description": "Indicates the descriptive message of the error code. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "notificationMessages": {
          "type": "array",
          "example": "[\"Message1\", \"Message2\", \"Message3\"]",
          "description": "Indicates the list of notification messages of the cart. It is a readonly field",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "example": "{\"categoryId\" : \"plainTeesMen\"}",
          "description": " Indicates the custom properties that are associated with the item. These are in the form of name and value pair.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "removeProperties": {
          "type": "object",
          "example": "{\"categoryId\" : \"plainTeesMen\"}",
          "description": " Indicates the custom properties that need to be removed from the item properties. These are in the form of name and value pair.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "The model contains the item details that can be placed in a cart."
    },
    "TaxationDetails": {
      "type": "object",
      "properties": {
        "unitPrice": {
          "type": "number",
          "example": 2.13,
          "description": "Indicates the tax calculation on the item. It is a readonly field(product or SKU) for a quantity."
        },
        "totalPrice": {
          "type": "number",
          "example": 2.13,
          "description": "Indicates the total tax calculation on the item. It is a readonly field(product or SKU) for required the quantities."
        },
        "unitDiscountCharge": {
          "type": "number",
          "example": 1.33,
          "description": "Indicates the discount charges applied on an item for a quantity. It is a readonly field"
        },
        "totalDiscountCharge": {
          "type": "number",
          "example": 1.33,
          "description": " Indicates the total discount charges applied on an item. It is a readonly fieldfor the required quantities."
        }
      },
      "description": "This model contains the tax details on each item in the cart."
    },
    "SkuFulfillmentWeight": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "example": 3.2,
          "description": "Indicates the weight of the SKU. This is required if the SKU weight is provided. It is a readonly field"
        },
        "unit": {
          "type": "string",
          "example": "POUNDS",
          "description": "Indicates the unit of measurement of the SKU. This is required if the SKU weight is provided. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model contains the weight details of the SKU. These details will be provided for the SKU with the fulfillment type PHYSICAL."
    },
    "SkuTaxationProperties": {
      "type": "object",
      "properties": {
        "taxationId": {
          "type": "string",
          "example": "SHOE",
          "description": "Specifies the taxation identifier which will be used by the tax calculation service to determine the tax value. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model contains the tax calculation details of the SKU."
    },
    "CartAgeVerificationDetails": {
      "type": "object",
      "properties": {
        "required": {
          "type": "boolean",
          "example": true,
          "description": "Specifies whether the age verification is required or not. The value true indicates the age verification is required; otherwise, false. It is a readonly field"
        },
        "verified": {
          "type": "boolean",
          "example": true,
          "description": "Specifies whether the age verification is provided or not. The value:<br/><ul><li>true indicates the age verification is provided</li><li>false indicates the age verification is not provided</li></ul>"
        },
        "requiredLimit": {
          "type": "number",
          "example": 21.0,
          "description": "Specifies the age limit for buying the items in the cart. This value is retrieved from the Catalog service. It is a readonly field"
        },
        "verifiedLimit": {
          "type": "number",
          "example": 45.0,
          "description": "Specifies the age limit verified by the buyer."
        },
        "verifiedUsing": {
          "type": "string",
          "example": "State Id",
          "description": "Specifies the name of the identity card of the customer used to verify the age.",
          "minLength": 0,
          "maxLength": 255
        },
        "verifierIdNumber": {
          "type": "string",
          "example": "R21324-12433-124",
          "description": "Specifies the identification number of the identity card provided by the customer for age verification. There is no validation occurs on the length and the value.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model contains the age verification details."
    },
    "ItemMath": {
      "type": "object",
      "properties": {
        "originalPrice": {
          "type": "number",
          "example": 49.99,
          "description": "Indicates the original or regular price of the item. It is a readonly field"
        },
        "markdown": {
          "type": "number",
          "example": 5.0,
          "description": "Indicates mark down value of the item in the cart which will get from catalog service. A markdown is a reduction of the original price of skus to increase sales. It is a readonly field"
        },
        "priceAfterMarkdown": {
          "type": "number",
          "example": 44.99,
          "description": "Indicates the item price after the markdown. A markdown is a reduction of the original price of skus to increase sales. It is a readonly field"
        },
        "discount": {
          "type": "number",
          "example": 4.49,
          "description": "Indicates the discount on the item based on the promotions. It is a readonly field"
        },
        "priceAfterDiscount": {
          "type": "number",
          "example": 40.5,
          "description": "Indicates the item price after the promotional discount. It is a readonly field"
        },
        "taxOnPrice": {
          "type": "number",
          "example": 4.05,
          "description": "Indicates the tax on the item price after the promotional discount. It is a readonly field"
        },
        "priceIncludingTax": {
          "type": "number",
          "example": 44.55,
          "description": "Indicates the price of the item after applying the discount. It includes the tax. It is a readonly field"
        },
        "deliveryCharge": {
          "type": "number",
          "example": 10.0,
          "description": "Indicates the delivery charge for the item. It is a readonly field"
        },
        "deliveryChargeDiscount": {
          "type": "number",
          "example": 2.0,
          "description": "Indicates the promotional discount on the delivery charge. It is a readonly field"
        },
        "deliveryChargeAfterDiscount": {
          "type": "number",
          "example": 8.0,
          "description": "Indicates the delivery charge for the item after promotional discount. It is a readonly field"
        },
        "taxOnDeliveryCharge": {
          "type": "number",
          "example": 0.8,
          "description": "Indicates the tax on the item delivery charge. It is a readonly field It is a readonly field"
        },
        "deliveryChargeIncludingTax": {
          "type": "number",
          "example": 8.8,
          "description": " Indicates the delivery charge for the item after promotional discount including tax.It is a readonly field"
        },
        "overAllDiscount": {
          "type": "number",
          "example": 6.49,
          "description": "Indicates the sum of all discounts, including the item discount and the delivery charge discount. It is a readonly field"
        },
        "overAllTax": {
          "type": "number",
          "example": 4.85,
          "description": "Indicates the sum of all the taxes, including the item tax and the delivery charge discount. It is a readonly field"
        },
        "grandTotal": {
          "type": "number",
          "example": 53.35,
          "description": "Indicates the grand total of the item. It is a readonly field"
        }
      },
      "description": "This model contains the calculated item values."
    },
    "RequiredPayment": {
      "type": "object",
      "properties": {
        "bagValue": {
          "type": "number",
          "example": 23.13,
          "description": "Indicates the total value of all the items in the cart owned by the consumer. It is a readonly field"
        },
        "totalAmountPaid": {
          "type": "number",
          "example": 15.32,
          "description": "Indicates the total amount of all the payments available in the cart. It is a readonly field"
        },
        "totalAmountUnpaid": {
          "type": "number",
          "example": 7.81,
          "description": "Indicates the total amount unpaid depending on the bagValue and totalAmountPaid. It is a readonly field"
        }
      },
      "description": "This model contains the required payment information."
    },
    "DeliveryMethod": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "Economy",
          "description": "Indicates the delivery method identifier generated by the Shipping service.It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "name": {
          "type": "string",
          "example": "Economy Shipping",
          "description": "Indicates the name or description of the method. This field provides more details for the consumer to choose an option. There is no validation occurs on the length and the value. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "cost": {
          "type": "number",
          "example": 10.99,
          "description": "Indicates the delivery charge depending on the selected delivery method. It is a readonly field"
        },
        "deliveryTime": {
          "type": "integer",
          "format": "int64",
          "example": 1531284825860,
          "description": "Indicates the expected date and time when the delivery can be made. The value is specified in milliseconds since the UNIX epoch (January 1, 1970 00:00:00 UTC). It is a readonly field"
        },
        "deliveryPeriod": {
          "type": "integer",
          "format": "int64",
          "example": 5,
          "description": "Indicates the expected period when the delivery can be made. The value is specified in long. It is a readonly field"
        },
        "isTaxIncluded": {
          "type": "boolean",
          "example": false,
          "description": "Specifies whether the tax is already included in the delivery charge or not. It is a readonly field<ul><li>The value true indicates the tax is included.</li><li>The value false indicates the tax is not included.</li></ul>"
        },
        "taxationId": {
          "type": "string",
          "example": "SHIPPING",
          "description": "Indicates the taxation identifier to be used for the delivery charge tax calculation. This is obtained from the Shipping service. This field helps the third-party services to calculate the tax.It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "isSelected": {
          "type": "boolean",
          "example": false,
          "description": "Indicates if this method is opted by the consumer or if it is the only delivery method option available. <ul><li>The value true indicates the given delivery method is the only delivery method option available.</li><li>The value false indicates this is opted by the consumer.</li></ul>"
        }
      },
      "description": "This model provides the delivery method details. It is based on the delivery type opted by the customer. The customer has the option to choose a delivery method."
    },
    "PromotionBreakUp": {
      "type": "object",
      "properties": {
        "confirmationCode": {
          "type": "string"
        },
        "identifier": {
          "type": "string",
          "example": "10%ITEMPROMO",
          "description": "Indicates the unique identifier of the promotion. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "title": {
          "type": "string",
          "example": "10% Promotion on the SKU",
          "description": "Indicates the title of the discount. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "example": "10% Promotion on the SKU",
          "description": "Indicates the description of the discount. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "code": {
          "type": "string",
          "example": "SKU10",
          "description": "Indicates the promotion code of the discount. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "example": "SKU",
          "description": "Indicates the type of promotion. It is a readonly field The possible types are as follows:<br/><ul><li>SKU: Discount to be applied on the SKU price.</li><li>DELIVERYCHARGE: Discount to be applied on the delivery charge.</li></ul>",
          "enum": [
            "SKU",
            "DELIVERYCHARGE"
          ]
        },
        "valueType": {
          "type": "string",
          "example": "PRICE",
          "description": "Indicates value type of the discount. It is a readonly field<br/><ul><li>PRICE: The discount value is to be applied against the PRICE.</li><li>POINTS: The discount value is to be applied against the alternative currency.</li></ul>",
          "enum": [
            "PRICE",
            "POINTS"
          ]
        },
        "quantity": {
          "type": "number",
          "example": 2.0,
          "description": "Specifies the quantity against which the discounts can be updated. It is a readonly field"
        },
        "unitValue": {
          "type": "number",
          "example": 5.0,
          "description": "Specifies the unit value of the discount. It is a readonly field"
        },
        "totalValue": {
          "type": "number",
          "example": 10.0,
          "description": "Specifies the total value of the discount. It is a readonly field"
        },
        "applyBeforeTaxation": {
          "type": "boolean",
          "description": "Specifies whether the promotion is applied before tax calculation or not.  It is a readonly field<ul><li>The value true indicates promotion is applied before the tax calculation.</li><li>The value false indicates the discount is applied after the tax calculation.</li></ul>"
        },
        "isTest": {
          "type": "boolean",
          "example": false,
          "description": "Specifies whether the promotion applied to the cart is a test promotion or not. The value true indicates the promotion is a test promotion. It is a readonly field"
        },
        "promotionLevel": {
          "type": "string",
          "enum": [
            "NONE",
            "ORDER"
          ]
        }
      },
      "description": "This model captures the different promotions that are applied to an item or the cart."
    },
    "PaymentOrchestration": {
      "type": "object",
      "required": [
        "accountInfo",
        "name",
        "status",
        "type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Indicates the unique ID of the payment. It is an autogenerated value.<br>It is consumed in the Cart, Customer and OMS services. <ul><li>For Cart: Generates the unique identifier in the long format.</li><li>For Customer: Generates the unique identifier in the long format.</li><li>For OMS: String type</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "name": {
          "type": "string",
          "example": "test_payment123",
          "description": "Indicates the name of the payment. It is a mandatory field. The payment name should start with an alphabet and can be alphanumeric, allows â€˜_â€™ and will not accept any spaces. The regex for payment name is: '^[a-zA-Z][_a-zA-Z0-9]*$â€™<br>It is consumed in the Customer service. ",
          "minLength": 0,
          "maxLength": 255
        },
        "isDefault": {
          "type": "boolean",
          "example": true,
          "description": "This flag is used to mention if the payment is default for the provided customer.<br>It is consumed in the Customer service."
        },
        "status": {
          "type": "string",
          "example": "active",
          "description": "Indicates the status of the payment. The possible values of the status are ACTIVE and INACTIVE. This will be active by default when a payment is created. This will turn inactive on updating the billingAddress and card details, if the third party service requires new token for the updated details. It is a mandatory field.<br>It is consumed in the Customer service. ",
          "minLength": 0,
          "maxLength": 255
        },
        "userId": {
          "type": "string",
          "example": "1",
          "description": "Refers to the customer ID of the payment. It is an optional field.<br>It is consumed in the Customer service. ",
          "minLength": 0,
          "maxLength": 255
        },
        "accountId": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Refers to the unique valid ID of the account which is to be associated with the team and team buyer. It is an optional field.<br>It is consumed in the Cart and Customer services."
        },
        "billingAddress": {
          "description": "Contains the customerâ€™s address details of the payment.<br>It is consumed in the Cart and Customer services.",
          "$ref": "#/definitions/AddressOrchestration"
        },
        "type": {
          "type": "string",
          "example": "CARD",
          "description": "Refers to the payment type. It is a mandatory field. The possible payment types are CREDITCARD, DEBITCARD, GIFTCARD, LOYALTY, PURCHASEORDER, CASH. This should not be null or empty.<br>It is consumed in the OMS, Customer, and Cart services.",
          "minLength": 0,
          "maxLength": 255
        },
        "valueType": {
          "type": "string",
          "description": "Indicates the type in which the value of the payment is going to be specified. The accepted values are: CURRENCY, POINTS. This is mandatory field. It should not be null or empty.<br>It is consumed in the Cart and OMS services. ",
          "minLength": 0,
          "maxLength": 255
        },
        "amount": {
          "type": "number",
          "example": 100.0,
          "description": "Indicates the amount against the payment is calculated using the value type field.<br>It is consumed in the Cart service. It is a readonly field"
        },
        "option": {
          "description": "Consumed in Cart service.\nRefers to the payment options help to manage the payment in user profile for registered user",
          "$ref": "#/definitions/PaymentOptions"
        },
        "accountInfo": {
          "description": "Refers to the list of payment cards of the customer.This is mandatory field.<br>It is consumed in the Cart, Customer and OMS services.",
          "$ref": "#/definitions/CardOrchestration"
        },
        "isValid": {
          "type": "boolean",
          "example": true,
          "description": "Specifies whether the payment is valid or not. The value true indicates the valid payment.<br>It is consumed in the Cart service. It is a readonly field"
        },
        "errorCode": {
          "type": "string",
          "example": "CNCOxxxxxx",
          "description": "Specifies the error in the payment.<br>It is consumed in the Cart service. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "errorResponse": {
          "type": "string",
          "example": "Payment is invalid",
          "description": "Specifies the error message corresponding to the error code.<br>It is consumed in the Cart service. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "properties": {
          "type": "object",
          "description": "Indicates the custom properties for the payment.<br>It is consumed in the Cart service.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "chargePriority": {
          "type": "string",
          "example": "EFT",
          "description": "Indicates the charging priority of payments. These are payments effected urgently within a very quick timeline, usually on the same day itself.<br>It is consumed in the OMS service.",
          "minLength": 0,
          "maxLength": 255
        },
        "format": {
          "type": "string",
          "example": "Currency payment format",
          "description": "Indicates the format used for payment. It holds a string value.It is consumed in the OMS service.",
          "minLength": 0,
          "maxLength": 255
        },
        "paymentItems": {
          "type": "array",
          "description": "Indicates the detailed information about the payment. Based on the maxamount, the array will be extended.<br>It is consumed in the OMS and Cart services.",
          "items": {
            "$ref": "#/definitions/PaymentItemOrchestration"
          }
        },
        "refundPriority": {
          "type": "string",
          "example": "test",
          "description": "Indicates the refund priority details of the payment.<br>It is consumed in the OMS service.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model defines the request and response of Payment object. A payment consists of all the details related to the payment made by the customer and also the payments added to the customer profile. The payment consists of multiple payment items.The class represents model for Cart, Customer, OMS services."
    },
    "PromotionCode": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "DISCOUNT2018",
          "description": "Specifies the promocode applied to the cart.",
          "minLength": 0,
          "maxLength": 255
        },
        "title": {
          "type": "string",
          "example": "Discount 2018",
          "description": "Specifies the title of the promocode. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "value": {
          "type": "number",
          "example": 12.43,
          "description": "Specifies the total value of discount for applying the promotion to the cart. It is a readonly field"
        },
        "errorCode": {
          "type": "string",
          "example": "CACO0000000",
          "description": "Specifies the error code of the promocode. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "errorMessage": {
          "type": "string",
          "example": "Promotion Code Applied",
          "description": "Specifies the error message of the promocode. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "isValid": {
          "type": "boolean",
          "example": true,
          "description": "Specifies whether the promocode is valid or not. The value true indicates a valid promotion code. It is a readonly field"
        },
        "confirmationCode": {
          "type": "string",
          "example": "true",
          "description": "Specifies the confirmation code received from promotion service. It is a readonly field"
        }
      },
      "description": "This model catches all promotion details of the promotion codes."
    },
    "PaymentOptions": {
      "type": "object",
      "properties": {
        "addPaymentToProfile": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether to add the payment to the customerâ€™s profile or not. The value true indicates adding the payment to the customerâ€™s profile. This field is used only for input purpose."
        },
        "useDefaultPayment": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether to use the customerâ€™s default payment or not. The value true indicates to use the customerâ€™s default payment. This field is used only for input purpose."
        },
        "setAsDefaultPaymentInProfile": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether to set this payment as default in the customer's profile or not. The value true indicates to set the payment as default in the profile. This field is used only for input purpose."
        }
      },
      "description": "This model contains payment option details of the cart. Based on the payment options, the payments are managed for the customer profile."
    },
    "SkuAlternateCurrencyDetails": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "POINTS",
          "description": "Indicates the type of the alternative currency. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "payOnlyByCash": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether to pay for the SKU only by cash or not. The value true indicates paying only by cash. It is a readonly field"
        },
        "payOnlyByPoints": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether to pay for the SKU only by points or not. The value true indicates paying only by points. It is a readonly field"
        },
        "points": {
          "type": "number",
          "example": 20230.0,
          "description": "Indicates the sale points value of the SKU. It is a readonly field"
        },
        "minPoints": {
          "type": "number",
          "example": 10110.0,
          "description": "Indicates the minimum points to be used to purchase the SKU. It is a readonly field"
        },
        "maxPoints": {
          "type": "number",
          "example": 20230.0,
          "description": "Indicates the maximum points to be used to purchase the SKU. It is a readonly field"
        },
        "minCash": {
          "type": "number",
          "example": 0.0,
          "description": "Indicates the minimum cash to be used for the purchase of the SKU. It is a readonly field"
        },
        "maxCash": {
          "type": "number",
          "example": 10.12,
          "description": "Indicates the maximum cash to be used for the purchase of the SKU. It is a readonly field"
        },
        "offerAppliedValues": {
          "description": "Offer applied values for the alternate currency",
          "$ref": "#/definitions/SkuAlternateCurrencyOfferAppliedValues"
        },
        "costPerPoints": {
          "description": "Cost per point details and details of the cash and points conversions.",
          "$ref": "#/definitions/SkuAlternateCurrencyCostPerPoints"
        }
      },
      "description": "This model contains the alternate currency details for the items in the cart. This field will be used if the payments can be made through alternate currency. It is reserved for future use."
    },
    "StoreDetails": {
      "type": "object",
      "properties": {
        "storeId": {
          "type": "string",
          "example": "1",
          "description": "Indicates the unique identifier of the store. It is a readonly field"
        },
        "name": {
          "type": "string",
          "example": "FIRSTSTORE",
          "description": "Indicates the name of the store. It is a readonly field"
        },
        "logoUrl": {
          "type": "string",
          "example": "https://www.store.com/logo.png",
          "description": "Indicates the logo URL of the store. It is a readonly field"
        }
      },
      "description": "The model contains the store details."
    },
    "SkuAlternateCurrencyCostPerPoints": {
      "type": "object",
      "properties": {
        "costPerPoint": {
          "type": "number",
          "example": 0.001,
          "description": "Indicates the cost per point. It is a readonly field"
        },
        "minValue": {
          "type": "number",
          "example": 0.001,
          "description": "Indicates the minimum cost per point. It is a readonly field"
        },
        "maxValue": {
          "type": "number",
          "example": 0.001,
          "description": "Indicates the maximum cost per point. It is a readonly field"
        },
        "cashToPoints": {
          "type": "string",
          "example": "test",
          "description": "Indicates the formula to find cash value based on the points value. It is a readonly field"
        },
        "pointsToCash": {
          "type": "string",
          "example": "test",
          "description": "Indicates the formula to find points value based on the cash value. It is a readonly field"
        }
      },
      "description": "This model specifies the cost per point details and details of the cash and points conversions per SKU."
    },
    "SkuQuantityLimit": {
      "type": "object",
      "properties": {
        "minValue": {
          "type": "number",
          "format": "float",
          "example": 1.0,
          "description": "Indicates the minimum quantity value for the SKU. It is a readonly field"
        },
        "maxValue": {
          "type": "number",
          "format": "float",
          "example": 100.0,
          "description": "Indicates the maximum quantity value for the SKU. It is a readonly field"
        },
        "associateMinValue": {
          "type": "number",
          "format": "float",
          "example": 2.0,
          "description": "Indicates the minimum quantity value for the SKU for an associate (Admin User). It is a readonly field"
        },
        "associateMaxValue": {
          "type": "number",
          "format": "float",
          "example": 5.0,
          "description": "Indicates the maximum quantity value for the SKU for an associate (Admin User). It is a readonly field"
        }
      },
      "description": "This model specifies the quantity details of a SKU. The information is obtained from the Catalog microservice."
    },
    "SFSku": {
      "type": "object",
      "required": [
        "productId",
        "skuId",
        "type"
      ],
      "properties": {
        "skuId": {
          "type": "string",
          "example": "110075278",
          "description": "Indicates the SKU identifier of the SKU in the cart. This attribute cannot be changed once the item is added to the cart. If this needs to be changed then that item needs to be removed from the cart and new item should be added with the correct value. It is a mandatory field. It should not be null or empty.",
          "minLength": 0,
          "maxLength": 255
        },
        "productId": {
          "type": "string",
          "example": "214006",
          "description": "Indicates the product identifier of the SKU in the cart. This attribute cannot be changed once the item is added to the cart. If this needs to be changed then that item needs to be removed from the cart and new item should be added with the correct value. It is a mandatory field. It should not be null or empty.",
          "minLength": 0,
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "example": "DEFAULT",
          "description": "Specifies the type of the SKU in the cart. The following are the types:<ul><li>DEFAULT: Specifies the simple SKU not part of any bundle.</li><li>BUNDLE: Specifies the bundle SKU which contains other SKUs within.</li><li>MAIN: Indicates the main SKU of a bundle.</li><li>MANDATORY: Indicates the mandatory SKU of a bundle.</li><li>OPTIONAL: Indicates the optional SKU of a bundle.</li></ul><br>This attribute cannot be changed once the item is added to the cart. If this needs to be changed then that item needs to be removed from the cart and a new item should be added with the correct value.<br>It is a mandatory field. It should not be null or empty.",
          "enum": [
            "DEFAULT",
            "BUNDLE",
            "FIXED_BUNDLE",
            "SKUKIT",
            "MAIN",
            "MANDATORY",
            "OPTIONAL"
          ]
        },
        "subType": {
          "type": "string",
          "example": "BUNDLE",
          "description": "Indicates the subtype of the bundle SKU. There are no subtypes for DEFAULT and SKU. The following are the subtypes of the bundle SKU:<ul><li>BUNDLE: Indicates a bundle SKU.<li>MAIN: Indicates the main SKU of a bundle.</li><li>MANDATORY: Indicates the mandatory SKU of a bundle.</li><li>OPTIONAL: Indicates the optional SKU of a bundle. </li></ul><br> This attribute cannot be changed once the item is added to the cart. If this needs to be changed then that item needs to be removed from the cart and a new item should be added with the correct value.",
          "enum": [
            "DEFAULT",
            "BUNDLE",
            "MAIN",
            "MANDATORY",
            "OPTIONAL"
          ]
        },
        "title": {
          "type": "string",
          "example": "Green Shoe",
          "description": "Specifies the title of the SKU. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "optionalSkuQuantity": {
          "type": "number",
          "example": 5.0,
          "description": "Indicates the quantity for the optional quantity of a bundle. When a bundle is added to the cart, it will be set to the quantity of the bundle. It can be updated."
        },
        "skuQuantity": {
          "type": "number",
          "example": 5.0,
          "description": "Indicates the quantity for the optional quantity of a bundle. When a bundle is added to the cart, it will be set to the quantity of the bundle. It can be updated."
        },
        "price": {
          "type": "number",
          "example": 25.99,
          "description": "Indicates the price of the SKU. It is a readonly field"
        },
        "regularPrice": {
          "type": "number",
          "example": 28.99,
          "description": "Indicates the regular price of the SKU. It is a readonly field"
        },
        "markdown": {
          "type": "number",
          "example": 10.0,
          "description": " Indicates the markdown value of the SKU. A markdown is a reduction of the original price of SKUs to increase sales. It is a readonly field"
        },
        "quantityLimit": {
          "description": "Specifies the quantity details for SKU. The information is obtained from Catlog service. It is a readonly field",
          "$ref": "#/definitions/SkuQuantityLimit"
        },
        "variablePriceLimit": {
          "description": "Specifies the variable price details of the SKU. The information is obtained from Catlog service. It is a readonly field",
          "$ref": "#/definitions/SkuVariablePriceLimit"
        },
        "ageLimit": {
          "description": "Specifies the age requirement for the SKU.  This information is obtained from Catlog service. It is a readonly field",
          "$ref": "#/definitions/SkuAgeLimit"
        },
        "alternateCurrencyProperties": {
          "type": "array",
          "example": "[ { \"type\": \"STARS\", \"payonlybycash\": false, \"payonlybypoints\": false, \"points\": 20230, \"minPoints\": 10110, \"maxPoints\": 20230, \"minCash\": 0, \"maxCash\": 10.12, \"offerAppliedValues\": { \"points\": 20230, \"minpoints\": 10110, \"maxpoints\": 20230 }, \"costperpoints\": { \"pointstocash\": \"Details to find cash based on points\", \"cashtoPoints\": \"Details to find points based in cash\", \"costperpoint\": 0.001, \"minValue\": 0.001, \"maxValue\": 0.001 } } ]",
          "description": "Indicates the alternate currency details. This information will be used to buy the SKU using alternate currencies like POINTS, STARS, or MILES. It is a readonly field",
          "items": {
            "$ref": "#/definitions/SkuAlternateCurrencyDetails"
          }
        },
        "skuProperties": {
          "type": "object",
          "example": "{ \"categoryIds\": \"categoryid1, categoryid2\", \"image\": \"link for the image\", \"link\": \"link for the product description page\", \"description\": \"description of the SKU\", \"size\": \"XL\", \"color\": \"Green\", \"style\": \"indian\", \"fit\": \"comfort\", \"brand\": \"drive\", \"groupid\": \"groupid from catalog\", \"vendor\": \"vendor name from catalog\", \"producttitle\": \"Title of the product\", \"producttype\": \"Type of the product\", \"otherskuproperty\": \"propertyvalue\" }",
          "description": "Indicates the catalog properties about the SKU. It is a readonly field",
          "additionalProperties": {
            "type": "string"
          }
        },
        "fulfilmentProperties": {
          "description": "This model consists of attributes related to the fulfillment of the SKU. It is a readonly field",
          "$ref": "#/definitions/SkuFulfillmentDetails"
        },
        "taxationProperties": {
          "description": "Tax Calculation Details for the SKU. It is a readonly field",
          "$ref": "#/definitions/SkuTaxationProperties"
        },
        "inventoryProperties": {
          "description": "Inventory details of the SKU. It is a readonly field",
          "$ref": "#/definitions/SkuInventoryLimit"
        }
      },
      "description": "This model contains the SKU details for the items in the cart. These details are obtained from other microservices such as Catalog, Pricing, and Inventory."
    },
    "Appeasement": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "FLAT",
          "description": "Indicates the type of the appeasement. The accepted values are FLAT and PERCENTAGE.<ul><li>FLAT - Indicates flat appeasement.</li><li>PERCENTAGE - Indicates appeasement in percentage.</li></ul>",
          "enum": [
            "FLAT",
            "PERCENTAGE"
          ]
        },
        "value": {
          "type": "number",
          "example": 100.0,
          "description": "Indicates the value of the appeasement to be added to the cart."
        },
        "overridePin": {
          "type": "string",
          "example": "wfjvqj24343-2435rjhjrw-14234",
          "description": "Indicates the override PIN for processing if the appeasement is given higher than the predefined threshold."
        }
      },
      "description": "This model contains the input appeasement information to provide appeasement to the cart or an item."
    },
    "PromotionDetails": {
      "type": "object",
      "properties": {
        "codes": {
          "type": "array",
          "description": "Indicates the promocode details of all promocodes added to the cart.",
          "items": {
            "$ref": "#/definitions/PromotionCode"
          }
        },
        "appeasement": {
          "description": "Indicates input appeasement information to provide appeasement to the cart or an item",
          "$ref": "#/definitions/Appeasement"
        },
        "promotions": {
          "type": "array",
          "description": "Indicates the details of all the promotions. It is a readonly field",
          "items": {
            "$ref": "#/definitions/Promotion"
          }
        }
      },
      "description": "This model contains all promotion details of the item or the cart."
    },
    "SkuVariablePriceLimit": {
      "type": "object",
      "properties": {
        "isVariablePriceSku": {
          "type": "boolean",
          "example": true,
          "description": "Specifies whether the SKU is a variable priced product or not. It is a readonly field<ul><li>The value true indicates the SKU is variable-priced.</li> <li>The value false indicates the SKU is fixed priced.</li></ul>"
        },
        "minValue": {
          "type": "string",
          "example": "25",
          "description": "Indicates the minimum value for the variable-priced SKU. It is a readonly field"
        },
        "maxValue": {
          "type": "string",
          "example": "100",
          "description": "Indicates the maximum value for the variable-priced SKU. It is a readonly field"
        }
      },
      "description": "This models specifies the variable price details of the SKU"
    },
    "SkuAgeLimit": {
      "type": "object",
      "properties": {
        "required": {
          "type": "boolean",
          "example": true,
          "description": "Specifies whether the age verification is required for the SKU or not. It is a readonly field<ul><li>The value true indicates the age verification is required.</li><li>The value false indicates the age verification is not required.</li></ul>"
        },
        "limit": {
          "type": "number",
          "example": 18.0,
          "description": "Specifies what is the minimum age requirement for the SKU. The value is in years. It is a readonly field"
        }
      },
      "description": "This model specifies the age requirement for the SKU. This information is obtained from the Catalog microservice."
    },
    "SkuFulfillmentSize": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "example": 10.0,
          "description": "Indicates the size of the SKU. This is required if the SKU size is provided. It is a readonly field"
        },
        "unit": {
          "type": "string",
          "example": "GB",
          "description": "Indicates the unit of measurement of the SKU. This is required if the SKU size is provided. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model contains the size details of the SKU. This will be provided for the SKU with fulfillment type DIGITAL."
    },
    "SFCartResponse": {
      "type": "object",
      "properties": {
        "cart": {
          "description": "The Cart model represents the entire cart of the customer.",
          "$ref": "#/definitions/SFCart"
        },
        "carts": {
          "type": "array",
          "description": "This model contains the list of entire cart of the customer.",
          "items": {
            "$ref": "#/definitions/SFCart"
          }
        }
      },
      "description": "This model contains the cart response details."
    },
    "AddPromotionToCartResponse": {
      "type": "object",
      "properties": {
        "promotionCode": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromotionCode"
          }
        }
      }
    },
    "DeleteResponseModel": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string",
          "example": "test",
          "description": "Indicates the identifier of the service operation on the cart. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "timeStamp": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "This model captures response code and response message."
    },
    "Order": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "example": "WTRE324535fwefe23",
          "description": "Indicates the identifier of the order that is generated by submitting the cart.",
          "minLength": 0,
          "maxLength": 255
        },
        "code": {
          "type": "string",
          "example": "CAxxxxxxxx",
          "description": "Indicates the code describing the error in the order. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "message": {
          "type": "string",
          "example": "Order created",
          "description": "Indicates the locale based message describing the code. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "The model provides response to the order submission."
    },
    "SFSubscriptionResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates the subscription id. "
        },
        "code": {
          "type": "string",
          "description": "Indicates the response code. "
        },
        "message": {
          "type": "string",
          "description": "Indicates the response message. "
        }
      },
      "description": "This model represents the create subscription response."
    },
    "SFSubscriptionItemDeliveryDate": {
      "type": "object",
      "properties": {
        "firstDeliveryDate": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates the firstDeliveryDate. "
        },
        "firstOrderCreationDate": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates the firstOrderCreationDate. "
        },
        "firstNotificationDate": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates the firstNotificationDate. "
        },
        "firstDeliveryEditFreeze": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates the firstDeliveryEditFreezeDate. "
        }
      },
      "description": "This model represents the subscription item delivery dates."
    },
    "Category": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "description": "Holds the additional properties that are associated with the category.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "parentId": {
          "type": "string",
          "example": "2",
          "description": "In category entity of catalog service parent id is used to specifies the parent category of the actual category",
          "minLength": 0,
          "maxLength": 255
        },
        "semantics": {
          "type": "array",
          "description": "Indicates the list of semantic identifier.",
          "items": {
            "type": "string"
          }
        },
        "subCategories": {
          "type": "array",
          "description": "Contains the list of categories with information that are associated with the current category. It holds the subcategory of the current category.",
          "items": {
            "$ref": "#/definitions/Category"
          }
        },
        "parentCategories": {
          "type": "array",
          "description": "Contains the list of categories with information that are associated with the current category. It holds the parent category of the current category",
          "items": {
            "$ref": "#/definitions/Category"
          }
        },
        "milestone": {
          "description": "This model contains information about a milestone, such as its priority, productSortOrder, products, type, uxData, etc.",
          "$ref": "#/definitions/Milestone"
        },
        "identifier": {
          "type": "string",
          "example": "shorts",
          "description": "Indicates the identifier of the category. Based on the mentioned identifier, associated category information and its subcategories that have products are responded. It is an auto generated identifier. The minimum length of the identifier is 1 and maximum length of the identifier is 50.",
          "minLength": 1,
          "maxLength": 50
        }
      },
      "description": "This model contains category information."
    },
    "Milestone": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string",
          "example": "milestoneId",
          "description": "Indicates the unique valid ID of the milestone."
        },
        "itemId": {
          "type": "string",
          "example": "shoes",
          "description": "Refers to the item ID of the milestone."
        },
        "name": {
          "type": "string",
          "example": "blackFriday",
          "description": "Indicates the name of an item. The minimum length is 2. The maximum length is 100."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Indicates which milestone has the highest priority. This is used to display the highest priority milestone."
        },
        "productSortOrder": {
          "type": "string",
          "example": "rating",
          "description": "Contains the parameter for sorting. For example, \"rating\" indicates sorting based on the rating."
        },
        "products": {
          "type": "array",
          "example": "[123, 124, 125]",
          "description": "Indicates the list of products to be displayed in this milestone.",
          "items": {
            "type": "string"
          }
        },
        "rule": {
          "type": "string",
          "example": "rule",
          "description": "Refers to the rules of a catagory. Products are mapped to a category in the form of a rule. A merchant defines search criteria in the form of a rule to dynamically pull products from across the catalog for that specific store."
        },
        "templateId": {
          "type": "string",
          "example": "blackFridayTemplate",
          "description": "Indicates a unique identifier of the template."
        },
        "templateUrl": {
          "type": "string",
          "description": "Indicates the URL of the template used for the category."
        },
        "type": {
          "type": "string",
          "example": "NAV",
          "description": "Indicates the type of the milestone. A milestone is differentiated by its type. The possible milestone types are NAV and CATEGORY. <br><ul><li>NAVIGATION - Defines how the categories are arranged hierarchically in the storefront navigation tree. A navigation can have multiple milestones.</li><li>CATEGORY - Groups the products based on some criteria or rules. A category can have multiple milestones.</li></ul>",
          "enum": [
            "NAV",
            "CATEGORY"
          ]
        },
        "uxData": {
          "example": "{\r\n                \"data\": \"some data\",\r\n                \"creativeIds\": \"creative1,creative2\"\r\n            }",
          "description": "Contains the list of creative IDs and the data for a milestone. Each uxdata is differentiated by its identifier. Each milestone contains a uxdata. The uxdata is a collection of data and creative IDs. For example, <i><font face=\"courier\">{\"identifier\":\"uxdata1\",\"data\":\"some data\",\"creative_ids\":\"creative1,creative2\"}</font></i>",
          "$ref": "#/definitions/UxData"
        }
      }
    },
    "ResponseProperty": {
      "type": "object",
      "properties": {
        "noOfProducts": {
          "type": "integer",
          "format": "int64",
          "example": 100,
          "description": "Refers to the number of products in the category. It holds a long value."
        },
        "locale": {
          "type": "string",
          "example": "en_US",
          "description": "Holds the locale value for the text. It must be a valid locale. It is an optional field. The locale needs to be mentioned as per the Java standard locale format. <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">For example, en_Us, en_IN.",
          "minLength": 0,
          "maxLength": 255
        },
        "defaultLocale": {
          "type": "string",
          "example": "en_US",
          "description": "Refers to the default value of the locale.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model uses the JSON object datatype containing ID and value. For example, <font face=\"courier\">{â€™noOfProductsâ€™:â€™100â€™, 'localeâ€™:â€™fr_FRâ€™, 'defaultLocaleâ€™:â€™en_USâ€™}</font>"
    },
    "UxData": {
      "type": "object",
      "properties": {
        "creativeIds": {
          "type": "string",
          "example": "creative1,creative2",
          "description": "Indicates a list of unique comma-separated creative IDs."
        },
        "data": {
          "type": "string",
          "description": "Contains all the data about the template used for a category."
        }
      },
      "description": "This model contains the data about the template used for building a categoryâ€™s PLP page."
    },
    "CategoryResponse": {
      "type": "object",
      "properties": {
        "responseProperty": {
          "description": "Indicates the JSON object datatype contains ID and value. For example, {â€™noOfProductsâ€™:â€™100â€™, 'localeâ€™:â€™fr_FRâ€™, 'defaultLocaleâ€™:â€™en_USâ€™}",
          "$ref": "#/definitions/ResponseProperty"
        },
        "category": {
          "description": "This model contains the category information",
          "$ref": "#/definitions/Category"
        }
      },
      "description": "This model contains the category response information."
    },
    "FacetFilter": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "example": "facet_brand",
          "description": "Indicates the name of the field. This is used for applying the filter. For example, brand, category, etc.",
          "minLength": 0,
          "maxLength": 255
        },
        "name": {
          "type": "string",
          "example": "Brand",
          "description": "Indicates the display name of the field. The possible facet name for the filters are brand, size, etc.",
          "minLength": 0,
          "maxLength": 255
        },
        "values": {
          "type": "array",
          "example": "brand",
          "description": "Contains the list of values of the filter.",
          "items": {
            "$ref": "#/definitions/FacetValue"
          }
        }
      },
      "description": "This model contains the facet filter information."
    },
    "Media": {
      "type": "object",
      "properties": {
        "swatchIcon": {
          "description": "This model which contains the image information.",
          "$ref": "#/definitions/ImageModel"
        },
        "primaryImages": {
          "type": "array",
          "description": "Refers to the list of primary image values.",
          "items": {
            "$ref": "#/definitions/ImageModel"
          }
        },
        "alternateImages": {
          "type": "array",
          "description": "Refers to the list of alternate image values.",
          "items": {
            "$ref": "#/definitions/ImageModel"
          }
        }
      },
      "description": "This model contains the media information such as image, alternate image, etc."
    },
    "PLPResponse": {
      "type": "object",
      "properties": {
        "searchTerm": {
          "type": "string",
          "example": "Addias instead of Adidas",
          "description": "Holds the value to be searched in SOLR. If a searchTerm is given in the request, it will be added into the filter parameter to match the SOLR data. If the searchTerm is not given correctly in the request (for example, Addias instead of Adidas), spellcheck will be done to match the correct word. If there is a matched word in SOLR, the correct word Adidas will be added automatically to the filter to match the SOLR data.",
          "minLength": 0,
          "maxLength": 255
        },
        "didYoyMean": {
          "type": "string",
          "example": "Dres",
          "description": "Indicates a response parameter for the Find All Indices call. If a user gives an incorrect search term in the request, the correct term will be responded in this param.",
          "minLength": 0,
          "maxLength": 255
        },
        "responseProperty": {
          "description": "Indicates the JSON object datatype contains ID and value. For example, {â€™noOfProductsâ€™:â€™100â€™, 'localeâ€™:â€™fr_FRâ€™, 'defaultLocaleâ€™:â€™en_USâ€™}",
          "$ref": "#/definitions/ResponseProperty"
        },
        "category": {
          "description": "This model which contains about the category information.",
          "$ref": "#/definitions/Category"
        },
        "facetFilter": {
          "type": "array",
          "description": "Contains the facet filter details.",
          "items": {
            "$ref": "#/definitions/FacetFilter"
          }
        },
        "product": {
          "type": "array",
          "description": "Contains a set of product details. The products are grouped based on category, specific properties, or particular term which will be available in the product.",
          "items": {
            "$ref": "#/definitions/SFProduct"
          }
        },
        "sort": {
          "type": "array",
          "description": "Contains a set of sort options. The products can be sorted based on the available sort options. For example, a set of products can be sorted based on the price from low to high value.",
          "items": {
            "$ref": "#/definitions/SortOption"
          }
        },
        "pageableInfo": {
          "description": "This model contains pageable information.",
          "$ref": "#/definitions/PageableInfo"
        }
      },
      "description": "This model contains the PLP response."
    },
    "FacetValue": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64",
          "example": 1,
          "description": "Refers to the count of the facet value. It holds a long value."
        },
        "name": {
          "type": "string",
          "example": "test",
          "description": "Refers to the name of the facet value. It holds a string value.",
          "minLength": 0,
          "maxLength": 255
        },
        "selected": {
          "type": "boolean",
          "example": true,
          "description": "Holds a boolean value which is used to describe whether the facet value is selected or not."
        }
      },
      "description": "This model contains the value of the filter."
    },
    "SFProduct": {
      "type": "object",
      "properties": {
        "category": {
          "type": "array",
          "description": "Holds all the category details, such as category ID, properties, and associated subcategories.",
          "items": {
            "$ref": "#/definitions/Category"
          }
        },
        "identifier": {
          "type": "string",
          "example": "shorts",
          "description": "Indicates the unique identifier of the product. It is an auto generated identifier. Based on this identifier, associated product information are responded. This field can be null or empty. ",
          "minLength": 0,
          "maxLength": 255
        },
        "subProducts": {
          "type": "array",
          "description": "Holds all the product details, such as product ID, properties, associated categories, subproducts, upsell products, and cross-sell products.",
          "items": {
            "$ref": "#/definitions/SFProduct"
          }
        },
        "upSellProducts": {
          "type": "array",
          "description": "Holds all the product details, such as product ID, properties, associated categories, subproducts, upsell products, and cross-sell products.",
          "items": {
            "$ref": "#/definitions/SFProduct"
          }
        },
        "crossSellProducts": {
          "type": "array",
          "description": "Holds all the product details, such as product ID, properties, associated categories, subproducts, upsell products, and cross-sell products.",
          "items": {
            "$ref": "#/definitions/SFProduct"
          }
        },
        "bundleMandatoryProducts": {
          "type": "array",
          "description": "Holds all the product information like productId, properties, associated categories, sub products, upsell products, and cross sell products.",
          "items": {
            "$ref": "#/definitions/SFProduct"
          }
        },
        "bundleOptionalProducts": {
          "type": "array",
          "description": "Holds all the product information like productId, properties, associated categories, sub products, upsell products, and cross sell products.",
          "items": {
            "$ref": "#/definitions/SFProduct"
          }
        },
        "skuKit": {
          "type": "array",
          "description": "Holds all the product information like productId, properties, associated categories, sub products, upsell products, and cross sell products.",
          "items": {
            "$ref": "#/definitions/SFProduct"
          }
        },
        "properties": {
          "type": "object",
          "description": "Holds the additional properties that are associated with the product.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sku": {
          "type": "array",
          "description": "Contains the details about SKUs which are having the properties of the product. A SKU can be associated with multiple products. The SKUs will be grouped based on product identifier or SKU IDs.",
          "items": {
            "$ref": "#/definitions/Sku"
          }
        },
        "type": {
          "type": "string",
          "example": "(BUNDLE, COLLECTION)",
          "description": "Refers to the product type. For example, BUNDLE and COLLECTION. If the type is not mentioned, then it will be a product. It will not come under any product types.",
          "minLength": 0,
          "maxLength": 255
        },
        "currency": {
          "type": "string",
          "example": "USD",
          "description": "Refers to the currency of the price; for example, USD.",
          "minLength": 0,
          "maxLength": 255
        },
        "currencySymbol": {
          "type": "string",
          "example": "$",
          "description": "Contains the symbol of currency; for example, $, etc.",
          "minLength": 0,
          "maxLength": 255
        },
        "media": {
          "description": "This model which contains the media information such as image, alternate image etc.",
          "$ref": "#/definitions/Media"
        },
        "prices": {
          "type": "array",
          "description": "Contains the list of price details of the product.",
          "items": {
            "$ref": "#/definitions/PriceModel"
          }
        },
        "transactionPrice": {
          "description": "Contains the transcation price information of the product.",
          "$ref": "#/definitions/PriceModel"
        },
        "defaultCategory": {
          "description": "This model which contains about the category information.",
          "$ref": "#/definitions/Category"
        },
        "semantics": {
          "type": "array",
          "description": "Refers the property named \"semantic_url\" for the product.",
          "items": {
            "type": "string"
          }
        },
        "promotion": {
          "type": "array",
          "description": "Contains the list of promotion offers that are eligible for the product.",
          "items": {
            "$ref": "#/definitions/SFPromotion"
          }
        }
      },
      "description": "This model contains a set of product information. This products might be grouped based on category, specific properties, or particular term which will be available in the product."
    },
    "SortOption": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "example": "brand",
          "description": "Indicates the name of the field used for applying the sort options; for example, brand, category, etc.",
          "minLength": 0,
          "maxLength": 255
        },
        "name": {
          "type": "string",
          "example": "Brand",
          "description": "Indicates the display name of the field; for example, Brand, Category, etc.",
          "minLength": 0,
          "maxLength": 255
        },
        "selected": {
          "type": "boolean",
          "example": true,
          "description": "Holds a boolean value which is used to describe whether the sorting value is selected or not."
        }
      },
      "description": "This model contains a set of sort options. The products can be sorted based on available sort options. For example, a set of products can be sorted based on the price from low value."
    },
    "SFPromotion": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "example": "Festive offer",
          "description": "Indicates the description of the applied offer.",
          "minLength": 0,
          "maxLength": 255
        },
        "discount": {
          "type": "number",
          "format": "double",
          "description": "Indicates the discount price which is calculated from the offer applied price."
        },
        "message": {
          "type": "string",
          "example": "test",
          "description": "Indicates the message of the applied offer.",
          "minLength": 0,
          "maxLength": 255
        },
        "offerId": {
          "type": "string",
          "example": "12313",
          "description": "Indicates the offer ID of the applied offer.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model contains the promotion offers that are eligible for the SKU."
    },
    "PriceModel": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "min price",
          "description": "Refers to the types of the price; for example, reg price, was price, min price, etc.",
          "minLength": 0,
          "maxLength": 255
        },
        "price": {
          "type": "number",
          "format": "double",
          "example": 25.0,
          "description": "Contains the value of the price; for example, 25 or 30.4."
        },
        "currency": {
          "type": "string",
          "example": "USD",
          "description": "Refers to the currency of the price; for example, USD.",
          "minLength": 0,
          "maxLength": 255
        },
        "currencySymbol": {
          "type": "string",
          "example": "$",
          "description": "Contains the symbol of currency; for example, $, etc.",
          "minLength": 0,
          "maxLength": 255
        },
        "minPrice": {
          "type": "number",
          "format": "double",
          "example": 100.0,
          "description": "Contains the minimum price."
        },
        "maxPrice": {
          "type": "number",
          "format": "double",
          "example": 500.0,
          "description": "Contains the maximum price."
        },
        "regularPrice": {
          "type": "number",
          "format": "double",
          "example": 200.0,
          "description": "Contains the regular price."
        }
      },
      "description": "This model contains the price model information."
    },
    "ImageModel": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "example": "test",
          "description": "Contains the image value.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model contains the image information."
    },
    "Sku": {
      "type": "object",
      "properties": {
        "default": {
          "type": "boolean",
          "description": "Indicates the default sku node. When the value is true indicates the sku is default."
        },
        "identifier": {
          "type": "string",
          "example": "1214321",
          "description": "Indicates the unique identifier of the SKU. It is generated automatically. Based on the mentioned identifier, associated SKU information is responded.",
          "minLength": 0,
          "maxLength": 255
        },
        "inventory": {
          "type": "string",
          "description": "Contains the status of inventory. The possible status are available, soldout, comingsoon, backorder. <br><ul><li>The Inventory status is mentioned as 'available', then the product stock is available in the inventory.</li><li>If it is mentioned as 'soldout', then the product is soldout not available in the inventory.</li><li> If it is mentioned as 'comingsoon', then the product will be arrived soon in the inventory. </li><li>If the status is 'backorder', the product has been ordered from the inventory.</li></ul>"
        },
        "prices": {
          "type": "array",
          "description": "Contains the list of price values of the SKU.",
          "items": {
            "$ref": "#/definitions/PriceModel"
          }
        },
        "promotion": {
          "type": "array",
          "description": "Contains the list of promotion offers that are eligible for the SKU.",
          "items": {
            "$ref": "#/definitions/SFPromotion"
          }
        },
        "properties": {
          "type": "object",
          "description": "Holds the additional properties that are associated with the SKU.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "media": {
          "description": "Contains the media information such as image, alternate image etc.",
          "$ref": "#/definitions/Media"
        }
      },
      "description": "This model contains the response of Sku, such as identifier, status etc."
    },
    "PageableInfo": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PDPResponse": {
      "type": "object",
      "properties": {
        "responseProperty": {
          "description": "This is the JSON object datatype contains id and value. Ex:{'noOfProducts':'100', 'locale':'fr_FR', 'defaultLocale':'en_US'}",
          "$ref": "#/definitions/ResponseProperty"
        },
        "product": {
          "type": "array",
          "description": "Holds all the product details, such as productId, properties, associated categories, subproducts, upsell products, and cross-sell products.",
          "items": {
            "$ref": "#/definitions/SFProduct"
          }
        },
        "category": {
          "description": "Contains about the category information.",
          "$ref": "#/definitions/Category"
        }
      },
      "description": "This model contains product detailed information response."
    },
    "SuggestionAPIResponse": {
      "type": "object",
      "properties": {
        "didYouMean": {
          "type": "array",
          "example": "Addias",
          "description": "Indicates a response parameter for the Find All Indices call. If a user gives an incorrect search term in the request, the correct term will be responded in this param.",
          "items": {
            "type": "string"
          }
        },
        "searchTerm": {
          "type": "string",
          "example": "Addias instead of Adidas",
          "description": "Holds the value to be searched in SOLR. If a searchTerm is given in the request, it will be added into the filter parameter to match the SOLR data. If the searchTerm is not given correctly in the request (for example, Addias instead of Adidas), spellcheck will be done to match the correct word. If there is a matched word in SOLR, the correct word Adidas will be added automatically to the filter to match the SOLR data."
        },
        "suggestion": {
          "type": "array",
          "example": "Addias",
          "description": "Indicates a response parameter which holds suggestions. If a user gives incorrect spelling in the search term request, the correct suggestions will be responded.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "This model is the SuggestionAPIResponse model, which holds the search term, did you mean, and the suggestion details."
    },
    "CustomerDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Represents the unique ID of the customer. The minimum value is 1. The maximum value is undetermined. It is an autogenerated value."
        },
        "firstName": {
          "type": "string",
          "example": "john",
          "description": "Refers to the customerâ€™s first name. It is an optional field.",
          "minLength": 0,
          "maxLength": 255
        },
        "lastName": {
          "type": "string",
          "example": "smith",
          "description": "Refers to the customerâ€™s last name. It is an optional field.",
          "minLength": 0,
          "maxLength": 255
        },
        "email": {
          "type": "string",
          "example": "dev@skava.com",
          "description": "Holds the customerâ€™s valid email address. It is used for the customer registration and login. With this value, a relevant identity will be created. The value should be unique within a collection. It is a mandatory field. The minimum and maximum length of an email are validated by a regex. The regex is '^(.+)@(.+).$â€™."
        },
        "phoneNumber": {
          "type": "string",
          "example": "1234567890",
          "description": "Holds the customerâ€™s valid phone number. It is used for customer registration and log in the customer. With this value, a relevant identity will be created. The value should not be duplicate and unique within a collection. This field should not be null or empty. It is a mandatory field. The value is validated by a regex. The regex isâ€™[Â±\\ (0-9Â±\\ )]{3,20}$â€™.",
          "minLength": 3,
          "maxLength": 20
        },
        "userName": {
          "type": "string",
          "example": "testUserName",
          "description": "Indicates the userâ€™s name. UserName identity will be created for the user name.This value is used by the user for login. For example, testUserName.",
          "minLength": 0,
          "maxLength": 255
        },
        "dateOfBirth": {
          "type": "string",
          "example": "08-10-1990",
          "description": "Holds the customerâ€™s date of birth. No specific date format defined. It is an optional field.",
          "minLength": 0,
          "maxLength": 255
        },
        "gender": {
          "type": "string",
          "example": "male",
          "description": "Refers to the customerâ€™s gender. It is an optional field.",
          "minLength": 0,
          "maxLength": 255
        },
        "photo": {
          "type": "string",
          "example": "string_url",
          "description": "Holds the uploaded image URL of the customerâ€™s profile photo. It can hold any valid URL. It is an optional field. There is no validation occurs on the minimum and maximum lengths.",
          "minLength": 0,
          "maxLength": 255
        },
        "customProperties": {
          "type": "object",
          "description": "Indicates all additional properties which need to be added to a customer account apart from the available default properties. The default properties are userâ€™s firstname, lastname, email, phonenumber, DOB, preferences etc. It is of JSON type with the key indicates the user property-name and the value indicates the property value. For example, customProperties : {â€™segmentâ€™:â€™goldâ€™,â€™userRollNumberâ€™:â€™123â€™}",
          "additionalProperties": {
            "type": "string"
          }
        },
        "address": {
          "description": "Addresses object - This holds the list of all addresses which are stored by customer to his account.Limit of address for an customer is 20.",
          "$ref": "#/definitions/AddressOrchestration"
        },
        "payments": {
          "description": "CustomerPayments object - This holds the payment details which are stored by customer to his account.",
          "$ref": "#/definitions/PaymentOrchestration"
        },
        "accounts": {
          "description": "Accounts model object - It refers to the customer account details",
          "$ref": "#/definitions/AccountsDTO"
        }
      },
      "description": "This model refers to the customer information."
    },
    "CustomerUpdateRequest": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "john",
          "description": "Refers to the customerâ€™s first name. It is an optional field.",
          "minLength": 0,
          "maxLength": 255
        },
        "lastName": {
          "type": "string",
          "example": "smith",
          "description": "Refers to the customerâ€™s last name. It is an optional field.",
          "minLength": 0,
          "maxLength": 255
        },
        "email": {
          "type": "string",
          "example": "dev@skava.com",
          "description": "Holds the customerâ€™s valid email address. It is used for customer registration and log in the customer. With this value, a relevant identity will be created. The value should be unique within a collection. The minimum and maximum length of an email are validated by a regex. The regex is '^(.+)@(.+).$â€™. It is a editable and optional field."
        },
        "phoneNumber": {
          "type": "string",
          "example": "1234567890",
          "description": "Holds the customerâ€™s valid phone number. It is used for customer registration and login. With this value, a relevant identity will be created. The value should be unique within a collection. It is editable and optional field. It is The value is validated by a regex. The regex is â€™[Â±\\ (0-9Â±\\ )]{3,20}$â€™.",
          "minLength": 3,
          "maxLength": 20
        },
        "userName": {
          "type": "string",
          "example": "testUserName",
          "description": "Indicates the userâ€™s name. UserName identity will be created for the user name.This value is used by the user for login. For example, testUserName.",
          "minLength": 0,
          "maxLength": 255
        },
        "dateOfBirth": {
          "type": "string",
          "example": "08-10-1990",
          "description": "Holds the customerâ€™s date of birth. There is no specific date format has been defined. It is an optional field.",
          "minLength": 0,
          "maxLength": 255
        },
        "gender": {
          "type": "string",
          "example": "male",
          "description": "Refers to the customerâ€™s gender. It is an optional field.",
          "minLength": 0,
          "maxLength": 255
        },
        "photo": {
          "type": "string",
          "example": "string_url",
          "description": "Holds the uploaded image URL of the customerâ€™s profile photo. It can hold any valid URL. It is an optional field.",
          "minLength": 0,
          "maxLength": 255
        },
        "status": {
          "type": "string",
          "example": "ACTIVE",
          "description": "Indicates the status of a customer, such as:<br/><ul><li>ACTIVE status indicates the active customer who is created in the direct customer creation via the registration process.</li><li>INACTIVE status indicates the inactive customer.</li><li>NOT ACTIVATED status indicates the not activated customer who is created by an administrator by inviting the customer.</li><li>LOCKED status indicates the locked customer who is locked due to the specific number of login attempts with invalid credentials.</li><li>FREEZE status indicates the frozen customer. When the status is given as FREEZE, the customer will be frozen and cannot perform any other actions. Only the active customers can be frozen.</li></ul><br/>The FREEZE and INACTIVE customers will not able to log in, and hence no actions will be performed for these customers. There is no string validation occurs on the minimum and maximum lengths.",
          "minLength": 0,
          "maxLength": 255
        },
        "customProperties": {
          "type": "object",
          "description": "Indicates all additional properties which need to be added to a customer account apart from the available default properties. The default properties are userâ€™s firstname, lastname, email, phonenumber, DOB, preferences etc. It is of JSON type with the key indicates the user property-name and the value indicates the property value. For example, <font face=\"courier\">customProperties : {â€™segmentâ€™:â€™goldâ€™,â€™userRollNumberâ€™:â€™123â€™}",
          "additionalProperties": {
            "type": "string"
          }
        },
        "securityQuestions": {
          "$ref": "#/definitions/SecurityQuestionsRequest"
        }
      },
      "description": "Contains the customer details which needs to be updated."
    },
    "CustomerLoginResponse": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string",
          "example": "a79e25628b84b0faabb07bde0a6f13b5",
          "description": "Indicates the session ID of the logged in customer."
        },
        "customer": {
          "description": "Customer model contains the customer information.",
          "$ref": "#/definitions/CustomerOrchestration"
        }
      },
      "description": "This model contains the customer login response."
    },
    "CustomerActivationRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "Refers to the activation password of the customer."
        },
        "activationParam": {
          "type": "string",
          "description": "Refers to the activationParam of the customer."
        }
      },
      "description": "Refers to the customerâ€™s activation request containing password, activationParam."
    },
    "CustomerLoginRequest": {
      "type": "object",
      "required": [
        "identity",
        "password"
      ],
      "properties": {
        "identity": {
          "type": "string",
          "example": "dev@skava.com",
          "description": "Indicates the customerâ€™s unique identity. The value can be phoneNumber or email. It is a mandatory field.",
          "minLength": 0,
          "maxLength": 20
        },
        "password": {
          "type": "string",
          "example": "Skava@123",
          "description": "Refers to the customerâ€™s new password provided while resetting a password. This is a hidden property. It will be active on resetting a customer password. The password must contain an uppercase character, a special character, and a numeric value.",
          "minLength": 0,
          "maxLength": 20
        },
        "identityType": {
          "type": "string",
          "example": "DEFAULT",
          "description": "Denotes the type of the user login identity. The possible values are:<br><ul><li>DEFAULT - indicates the default login with email ID or phone number.</li><li>CUSTOM - indicates the custom login.</li><li>GOOGLE - indicates the Google login, such as SSO.</li></ul>",
          "minLength": 0,
          "maxLength": 20
        }
      },
      "description": "This model contains the customerâ€™s login request details, such as email ID, phone number, password, and security questions with answers."
    },
    "CustomerUpdatePasswordRequest": {
      "type": "object",
      "required": [
        "confirmPassword",
        "newPassword"
      ],
      "properties": {
        "oldPassword": {
          "type": "string",
          "example": "Skava@123",
          "description": "Indicates the old password of the customer. This is a mandatory field.",
          "minLength": 0,
          "maxLength": 20
        },
        "newPassword": {
          "type": "string",
          "example": "Test@123",
          "description": "Refers to the new password of the customer which resets the existing password. Password must contain 1 Uppercase, 1 Special Character and numeric value. Password validation is configurable in collection attributes.Eg:Test@123.",
          "minLength": 0,
          "maxLength": 20
        },
        "confirmPassword": {
          "type": "string",
          "example": "Test@123",
          "description": "Refers to the password which must match with the new password provided for password update.",
          "minLength": 0,
          "maxLength": 20
        }
      },
      "description": "Refers to the credentials details such as password"
    },
    "CustomerValidatePasswordRequest": {
      "type": "object",
      "required": [
        "confirmPassword",
        "password",
        "resetParam"
      ],
      "properties": {
        "resetParam": {
          "type": "string",
          "example": "f3fa46a7b2cd095e37ee3095ea265ebad9415a6490ab5802ee1913375fcff586",
          "description": "Holds the string value. Refers to the reset parameter which is received via email or SMS.",
          "minLength": 0,
          "maxLength": 100
        },
        "password": {
          "type": "string",
          "example": "Test@123",
          "description": "Refers to the new password of the customer which resets the existing password. Password must contain 1 Uppercase, 1 Special Character and numeric value. Password validation is configurable in collection attributes.Eg:Test@123.",
          "minLength": 0,
          "maxLength": 20
        },
        "confirmPassword": {
          "type": "string",
          "example": "Test@123",
          "description": "Refers to the password which must match with the new password provided for password update.",
          "minLength": 0,
          "maxLength": 20
        }
      },
      "description": "Refers to the customer's reset password request with reset param"
    },
    "CustomerResetPasswordRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "dev@skava.com",
          "description": "Holds the string value. Refers the customerâ€™s valid email address. It is used for customer registration and log in the customer. With this value, a relevant identity will be created. The value should be unique within a collection. It is an optional field. The minimum and the maximum length of an email are validated by a regex. The regex is '^(.+)@(.+).$â€™.",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneNumber": {
          "type": "string",
          "example": "1234567890",
          "description": "Holds the string value. Refers the customerâ€™s valid phone number. It is used for customer registration and log in the customer. With this value, a relevant identity will be created. The value should be unique within a collection. This field should not be null or empty. The value is validated by a regex. The regex isâ€™[Â±\\ (0-9Â±\\ )]{3,20}$â€™.",
          "minLength": 0,
          "maxLength": 20
        }
      },
      "description": "Refers to the customer's login request contains email, phoneNumber, password and security questions with answers."
    },
    "CustomerGetSecurityQuestionRequest": {
      "type": "object",
      "required": [
        "identity"
      ],
      "properties": {
        "identity": {
          "type": "string",
          "example": "dev@skava.com",
          "description": "Indicates the customerâ€™s unique identity. The value can be phoneNumber, or email. It is a mandatory field.",
          "minLength": 0,
          "maxLength": 20
        }
      },
      "description": "Refers to the customer's get security questions request contains email/phoneNumber"
    },
    "CustomerSecurityQuestionsWithoutAnswers": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string",
          "example": "What is your company name ?",
          "description": "Refers to the security question details.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model refers to the security questions of the customer."
    },
    "CustomerSecurityRequest": {
      "type": "object",
      "required": [
        "identity",
        "password"
      ],
      "properties": {
        "identity": {
          "type": "string",
          "example": "dev@skava.com",
          "description": "Indicates the customerâ€™s unique identity. The value can be phoneNumber or email. It is a mandatory field.",
          "minLength": 0,
          "maxLength": 20
        },
        "password": {
          "type": "string",
          "example": "Skava@123",
          "description": "Refers to the customerâ€™s new password provided while resetting a password. This is a hidden property. It will be active on resetting a customer password. The password must contain an uppercase character, a special character, and a numeric value.",
          "minLength": 0,
          "maxLength": 20
        },
        "identityType": {
          "type": "string",
          "example": "DEFAULT",
          "description": "Denotes the type of the user login identity. The possible values are:<br><ul><li>DEFAULT - indicates the default login with email ID or phone number.</li><li>CUSTOM - indicates the custom login.</li><li>GOOGLE - indicates the Google login, such as SSO.</li></ul>",
          "minLength": 0,
          "maxLength": 20
        },
        "securityQuestionsRequest": {
          "description": "Refers to the security questions and answers of the customer.",
          "$ref": "#/definitions/SecurityQuestionsRequest"
        }
      },
      "description": "Refers to the customerâ€™s security request containing email, phoneNumber, password and security questions with answers."
    },
    "SessionDTO": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string",
          "example": "b490240ca2f9d1358",
          "description": "Indicates the ID of the session.",
          "readOnly": true
        },
        "userid": {
          "type": "string",
          "example": "4",
          "description": "Indicates the ID of the actonbehalfof user, which is associated with the session.",
          "readOnly": true
        },
        "adminId": {
          "type": "integer",
          "format": "int64",
          "example": 6,
          "description": "Indicates the ID of a csr admin user, who initiated the session.",
          "readOnly": true
        },
        "businessId": {
          "type": "integer",
          "format": "int64",
          "example": 4,
          "description": "Indicates the ID of a business, which is associated with the session.",
          "readOnly": true
        },
        "firstName": {
          "type": "string",
          "example": "john",
          "description": "Refers to the csradmin's first name. It is an optional field.",
          "minLength": 0,
          "maxLength": 255
        },
        "lastName": {
          "type": "string",
          "example": "smith",
          "description": "Refers to the csradmin's last name. It is an optional field.",
          "minLength": 0,
          "maxLength": 255
        },
        "email": {
          "type": "string",
          "example": "dev@skava.com",
          "description": "Holds the csradmin's valid email address. It is used for the customer registration and login. With this value, a relevant identity will be created. The value should be unique within a collection. It is a mandatory field. The minimum and maximum length of an email are validated by a regex. The regex is '^(.+)@(.+).$â€™."
        },
        "phoneNumber": {
          "type": "string",
          "example": "1234567890",
          "description": "Holds the csradmin's valid phone number. It is used for customer registration and log in the customer. With this value, a relevant identity will be created. The value should not be duplicate and unique within a collection. This field should not be null or empty. It is a mandatory field. The value is validated by a regex. The regex isâ€™[Â±\\ (0-9Â±\\ )]{3,20}$â€™.",
          "minLength": 3,
          "maxLength": 20
        },
        "userName": {
          "type": "string",
          "example": "testUserName",
          "description": "Indicates the csradmin's name. UserName identity will be created for the user name.This value is used by the user for login. For example, testUserName.",
          "minLength": 0,
          "maxLength": 255
        }
      }
    },
    "SFList": {
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "listId": {
          "type": "string",
          "example": "32794",
          "description": "Indicates the unique auto-generated identifier to identify the list.",
          "minLength": 0,
          "maxLength": 255
        },
        "id": {
          "type": "string",
          "example": "32794",
          "description": "Indicates the unique auto-generated identifier to identify the list.",
          "minLength": 0,
          "maxLength": 255
        },
        "listItems": {
          "type": "array",
          "description": "This model captures the list item information.",
          "items": {
            "$ref": "#/definitions/SFListItem"
          }
        },
        "name": {
          "type": "string",
          "example": "My Fav",
          "description": "Indicates the name of the list.",
          "minLength": 0,
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "example": "WISHLIST",
          "description": "Indicates the type of the list. The possible types are:<br/><ul><li>WISHLIST - The WISHLIST serves as a way for the customers to select and track their desired items for purchase at a later date.</li><li>SAVEFORLATER - To wait until another day to buy some of the items, then use SAVEFORLATER.</li><li>FAVOURITES - When the type is mentioned as FAVOURITES, the customer selects the items which they liked the most while logged in. Those items will be available all the time in the site untile removed.</li></ul>",
          "minLength": 0,
          "maxLength": 255,
          "enum": [
            "WISHLIST",
            "FAVORITES",
            "SAVEFORLATER"
          ]
        },
        "userId": {
          "type": "string",
          "example": "43354",
          "description": "Indicates the unique valid identifier of the customer who owns the list. The user ID will be fetched based on the userâ€™s session ID passed by the client's storefont in the request.",
          "minLength": 0,
          "maxLength": 255
        },
        "accountId": {
          "type": "string",
          "example": "9832643",
          "description": "Indicates the unique valid identifier of the account for which this list belongs to.",
          "minLength": 0,
          "maxLength": 255
        },
        "itemType": {
          "type": "string",
          "example": "SKU",
          "description": "Specifies the type of the list item. The possible item type values are:<br/><ul><li>SKU - The SKU is the unique number which distinguishes one product from another. It is used, most often, for the purpose of accounting for inventory.</li><li>PRODUCT - Each product has the unique number, allowing smooth tracking as products move in and out of a store.</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "accessType": {
          "type": "string",
          "example": "PUBLIC",
          "description": "Indicates the access type of the list. The possible values are:<br/><ul><li>PUBLIC - When the accessType is PUBLIC for the list, then that list can be viewed by other customers also.</li><li>PRIVATE - If the accessType is PRIVATE, then only the customer who created that list can only able to view it.</li></ul>",
          "minLength": 0,
          "maxLength": 255,
          "enum": [
            "PRIVATE",
            "PUBLIC"
          ]
        },
        "createdTime": {
          "type": "string",
          "example": "1532979519149",
          "description": "Contains the date and time in which the list was created. It is represented in milliseconds since the UNIX epoch (January 1, 1970 00:00:00 UTC). This value can be null or empty.",
          "minLength": 0,
          "maxLength": 255
        },
        "updatedTime": {
          "type": "string",
          "example": "1532979519149",
          "description": "Contains the date and time in which the list was last updated. It is represented in milliseconds since the UNIX epoch (January 1, 1970 00:00:00 UTC). This value can be null or empty.",
          "minLength": 0,
          "maxLength": 255
        },
        "properties": {
          "type": "object",
          "description": "Indicates properties which need to be added to a list. It is of JSON type with the key indicates the list property-name and the value indicates the property value.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "responseCode": {
          "type": "string",
          "example": "LIxxxxxxxx",
          "description": "Indicates the response code for the service operation on the list.",
          "minLength": 0,
          "maxLength": 255
        },
        "responseMessage": {
          "type": "string",
          "example": "List created successfully",
          "description": "Indicates the response message corresponding to the response code.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model contains the list details."
    },
    "SFListItem": {
      "type": "object",
      "required": [
        "key",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "1",
          "description": "Indicates the unique identifier of the list item. This field is generated automatically. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "listItemId": {
          "type": "string",
          "example": "1",
          "description": "Indicates the unique identifier of the list item. This field is generated automatically. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "responseMessage": {
          "type": "string",
          "example": "List Item created successfully",
          "description": "Indicates the response message corresponding to the response code. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "key": {
          "type": "string",
          "example": "432SE2352",
          "description": "Indicates the key of the item to be listed. The possible values of the key are:<br/><ul><li>SKU ID - If the list's itemType is SKU, then it contains a valid SKU ID.</li><li>Product ID - If the list's itemType is product, then it contains a valid product ID.</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "name": {
          "type": "string",
          "example": "Green Shoe",
          "description": "Refers to the name of the item.",
          "minLength": 0,
          "maxLength": 255
        },
        "createdTime": {
          "type": "string",
          "example": "2016-08-16T10:15:30+08:00",
          "description": "Contains the date and time on which the item was added to the list. It is represented in milliseconds since the UNIX epoch (January 1, 1970 00:00:00 UTC). This value can be null or empty. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "updatedTime": {
          "type": "string",
          "example": "2016-08-16T10:15:30+08:00",
          "description": "Contains the date and time on which the item was last updated. It is represented in milliseconds since the UNIX epoch (January 1, 1970 00:00:00 UTC). This value can be be null or empty. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "properties": {
          "type": "object",
          "description": "Indicates the properties which need to be added to a list item. It is of JSON type with key and value format:<br/><ul><li>key - The key denoting the list item property's name.</li><li>The value denoting the list item property's value.</li></ul>",
          "additionalProperties": {
            "type": "string"
          }
        },
        "responseCode": {
          "type": "string",
          "example": "LIxxxxxxxx",
          "description": "Indicates the response code of the service operation on the list item. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "sku": {
          "description": "Contains the SKU details. It is referred from the Catalog service. It is a readonly field",
          "$ref": "#/definitions/Sku"
        },
        "product": {
          "description": "Contains the product details. It is referred from the Catalog service. It is a readonly field",
          "$ref": "#/definitions/SFProduct"
        }
      },
      "description": "This model captures the list item information."
    },
    "SFListsAPIResponse": {
      "type": "object",
      "properties": {
        "lists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SFList"
          }
        },
        "pageableInfo": {
          "$ref": "#/definitions/PageableInfo"
        }
      }
    },
    "SFListItemRequest": {
      "type": "object",
      "required": [
        "key",
        "name"
      ],
      "properties": {
        "key": {
          "type": "string",
          "example": "432SE2352",
          "description": "Indicates the key of the item to be listed. The possible values of the key are:<br/><ul><li>SKU ID - If the list's itemType is SKU, then it contains a valid SKU ID.</li><li>Product ID - If the list's itemType is product, then it contains a valid product ID.</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "name": {
          "type": "string",
          "example": "Green Shoe",
          "description": "Refers to the name of the item.",
          "minLength": 0,
          "maxLength": 255
        },
        "properties": {
          "type": "object",
          "description": "Indicates the properties which need to be added to a list item. It is of JSON type with key and value format:<br/><ul><li>key - The key denoting the list item property's name.</li><li>The value denoting the list item property's value.</li></ul>",
          "additionalProperties": {
          "type": "string"
          }
        }
        },
      "description": "This model captures the list item information."
        },
    "SFListRequest": {
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "listId": {
          "type": "string",
          "example": "32794",
          "description": "Indicates the unique auto-generated identifier to identify the list. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "id": {
          "type": "string",
          "example": "32794",
          "description": "Indicates the unique auto-generated identifier to identify the list. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "listItems": {
          "type": "array",
          "description": "This model captures the list item information.",
          "items": {
            "$ref": "#/definitions/SFListItemRequest"
          }
        },
        "name": {
          "type": "string",
          "example": "My Fav",
          "description": "Indicates the name of the list.",
          "minLength": 0,
          "maxLength": 255
        },
        "accessType": {
          "type": "string",
          "example": "PUBLIC",
          "description": "Indicates the access type of the list. The possible values are:<br/><ul><li>PUBLIC - When the accessType is PUBLIC for the list, then that list can be viewed by other customers also.</li><li>PRIVATE - If the accessType is PRIVATE, then only the customer who created that list can only able to view it.</li></ul>",
          "minLength": 0,
          "maxLength": 255,
          "enum": [
            "PRIVATE",
            "PUBLIC"
          ]
        },
        "properties": {
          "type": "object",
          "description": "Indicates properties which need to be added to a list. It is of JSON type with the key indicates the list property-name and the value indicates the property value.",
          "additionalProperties": {
          "type": "string"
          }
        },
        "userId": {
          "type": "string",
          "example": "43354",
          "description": "Indicates the unique valid identifier of the customer who owns the list. The user ID will be fetched based on the userâ€™s session ID passed by the client's storefont in the request. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "type": {
          "type": "string",
          "example": "WISHLIST",
          "description": "Indicates the type of the list. The possible types are:<br/><ul><li>WISHLIST - The WISHLIST serves as a way for the customers to select and track their desired items for purchase at a later date.</li><li>SAVEFORLATER - To wait until another day to buy some of the items, then use SAVEFORLATER.</li><li>FAVOURITES - When the type is mentioned as FAVOURITES, the customer selects the items which they liked the most while logged in. Those items will be available all the time in the site untile removed.</li></ul>",
          "minLength": 0,
          "maxLength": 255,
          "enum": [
            "WISHLIST",
            "FAVORITES",
            "SAVEFORLATER"
          ]
        },
        "accountId": {
          "type": "string",
          "example": "9832643",
          "description": "Indicates the unique valid identifier of the account for which this list belongs to. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "itemType": {
          "type": "string",
          "example": "SKU",
          "description": "Specifies the type of the list item. The possible item type values are:<br/><ul><li>SKU - The SKU is the unique number which distinguishes one product from another. It is used, most often, for the purpose of accounting for inventory.</li><li>PRODUCT - Each product has the unique number, allowing smooth tracking as products move in and out of a store.</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "createdTime": {
          "type": "string",
          "example": "1532979519149",
          "description": "Contains the date and time in which the list was created. It is represented in milliseconds since the UNIX epoch (January 1, 1970 00:00:00 UTC). This value can be null or empty. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "updatedTime": {
          "type": "string",
          "example": "1532979519149",
          "description": "Contains the date and time in which the list was last updated. It is represented in milliseconds since the UNIX epoch (January 1, 1970 00:00:00 UTC). This value can be null or empty. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        }
        },
      "description": "This model contains the list details."
    },
    "SFListCommonRequest": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "My Fav",
          "description": "Indicates the name of the list.",
          "minLength": 0,
          "maxLength": 255
        },
        "accessType": {
          "type": "string",
          "example": "PUBLIC",
          "description": "Indicates the access type of the list. The possible values are:<br/><ul><li>PUBLIC - When the accessType is PUBLIC for the list, then that list can be viewed by other customers also.</li><li>PRIVATE - If the accessType is PRIVATE, then only the customer who created that list can only able to view it.</li></ul>",
          "minLength": 0,
          "maxLength": 255,
          "enum": [
            "PRIVATE",
            "PUBLIC"
          ]
        },
        "properties": {
          "type": "object",
          "description": "Indicates properties which need to be added to a list. It is of JSON type with the key indicates the list property-name and the value indicates the property value.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "userId": {
          "type": "string",
          "example": "43354",
          "description": "Indicates the unique valid identifier of the customer who owns the list. The user ID will be fetched based on the userâ€™s session ID passed by the client's storefont in the request. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
      }
    },
      "description": "This model contains the list details."
    },
    "ListItemResponse": {
      "type": "object",
      "properties": {
        "listItems": {
          "type": "array",
          "description": "It contains the ListItem information. It is a readonly field",
          "items": {
            "$ref": "#/definitions/SFListItem"
          }
        },
        "pageableInfo": {
          "description": "Page data consists of page, size, count and total count of the response data. It is a readonly field",
          "$ref": "#/definitions/PageableInfo"
        }
      }
    },
    "SFShareList": {
      "type": "object",
      "required": [
        "recipients"
      ],
      "properties": {
        "listId": {
          "type": "string",
          "example": "32794",
          "description": "Indicates the unique identifier used to identify the list. This field is generated automatically. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "recipients": {
          "type": "array",
          "description": "Indicates the email ID of recipients for the share list.",
          "items": {
            "$ref": "#/definitions/SFShareListRecipient"
          }
        }
      },
      "description": "This model contains the share list details."
    },
    "SFShareListRecipient": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "user@domain.com",
          "description": "Indicates the email ID of the recipient."
        }
      },
      "description": "This model contains the email ID of recipients for the share list."
    },
    "ShippingMethod": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "code1",
          "description": "Contains the shipping code of the shipping method, which is customized based on the user.",
          "minLength": 0,
          "maxLength": 255
        },
        "deliveryStore": {
          "type": "string",
          "example": "JCPenney",
          "description": "Indicates the delivery store of the shipping method.",
          "minLength": 0,
          "maxLength": 255
        },
        "deliveryTerm": {
          "type": "string",
          "example": "homeshipping",
          "description": "Contains the delivery term of the shipping method.",
          "minLength": 0,
          "maxLength": 255
        },
        "name": {
          "type": "string",
          "example": "homeshipping",
          "description": "Contains the name of the shipping method, which is customized based on the user.",
          "minLength": 0,
          "maxLength": 255
        },
        "priceInfo": {
          "type": "array",
          "description": "Indicates the delivery charges of the shipping method. This field should not be null or empty.",
          "items": {
            "$ref": "#/definitions/ShippingMethodPriceInfo"
          }
        }
      },
      "description": "This model contains shipping method related details."
    },
    "Discount": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "DISCOUNT25",
          "description": "Contains the discount code, which is used to apply the discount. This field can be null.",
          "minLength": 0,
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "example": "This offer is applied only for baby products.",
          "description": "Indicates the description of the discount. This field can be null or empty.",
          "minLength": 0,
          "maxLength": 255
        },
        "discountClass": {
          "type": "string",
          "example": "disclass11",
          "description": "Indicates the discount class of an order or an order item.",
          "minLength": 0,
          "maxLength": 255
        },
        "level": {
          "type": "string",
          "example": "ITEM",
          "description": "Contains the discount level, where the discount is applied on ITEM, ORDER, PERSONALIZATION, or SHIPPING. This field should not be null or empty.",
          "enum": [
            "ITEM",
            "ORDER",
            "PERSONALIZATION",
            "SHIPPING"
          ]
        },
        "mode": {
          "type": "string",
          "example": "dollar",
          "description": "Indicates the mode in which the payment is made. This field should not be null or empty.",
          "minLength": 0,
          "maxLength": 255
        },
        "name": {
          "type": "string",
          "example": "string",
          "description": "Contains the name of the discount for an order or an order item. This field can be null or empty.",
          "minLength": 0,
          "maxLength": 255
        },
        "offerId": {
          "type": "string",
          "example": "string",
          "description": "Indicates the offer ID applied for the discount of an order or an order item.",
          "minLength": 0,
          "maxLength": 255
        },
        "parentItem": {
          "type": "string",
          "example": "string",
          "description": "Indicates the parent item of the discount for an order or an order item. For example, if the discount is \"Buy 1 Get 1\", then the buying product is the parent item.",
          "minLength": 0,
          "maxLength": 255
        },
        "priceInfo": {
          "description": "This model contains the information about the discount price for the order/orderItem.",
          "$ref": "#/definitions/DiscountPriceInfo"
        }
      },
      "description": "This model contains information about the discount, including its code, name, description, payment mode, price details, offer ID, etc."
    },
    "Personalization": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "1",
          "description": "Indicates the unique identifier of the personalization made on an order or an item. This field should not be null or empty.",
          "minLength": 0,
          "maxLength": 255
        },
        "message": {
          "type": "string",
          "example": "Happy Birthday",
          "description": "Indicates the message to be presented in the personalization. This field can be null or empty.",
          "minLength": 0,
          "maxLength": 255
        },
        "priceInfo": {
          "type": "array",
          "description": "Indicates the price information of the personalized product or an item.",
          "items": {
            "$ref": "#/definitions/PersonalizationPriceInfo"
          }
        },
        "receipt": {
          "type": "boolean",
          "example": false,
          "description": "Indicates the boolean value to represent whether the receipt is attached or not.This field can be null or empty. If the value is true, receipt is attached and if the value is false, then receipt is not attached."
        },
        "skuId": {
          "type": "string",
          "example": "2113242",
          "description": "Indicates the unique identifier of the SKU of an order item. This field can be null or empty.",
          "minLength": 0,
          "maxLength": 255
        },
        "wrap": {
          "type": "string",
          "example": "Gift wrap as from john",
          "description": "Indicates the personalized gift wrap on an order or an item. This field can be null or empty.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model contains the personalization details."
    },
    "SkuInfo": {
      "type": "object",
      "properties": {
        "categoryId": {
          "type": "string",
          "example": "Dresses",
          "description": "Specifies the category ID of an item. This field identifies the category of an item.",
          "minLength": 0,
          "maxLength": 255
        },
        "color": {
          "type": "string",
          "example": "Blue",
          "description": "Indicates the color of an item. This field defines the color variants of an item.",
          "minLength": 0,
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "example": "Light shaded dresses",
          "description": "Indicates the detailed description of an item. The minimum length is 0 and the maximum length is 255.",
          "minLength": 0,
          "maxLength": 255
        },
        "dimension": {
          "type": "string",
          "example": "30 inches long",
          "description": "Defines the height and the width measurement of an item.",
          "minLength": 0,
          "maxLength": 255
        },
        "fit": {
          "type": "string",
          "example": "Slim fit",
          "description": "Indicates the fit type, compatibility of an item.",
          "minLength": 0,
          "maxLength": 255
        },
        "image": {
          "type": "string",
          "example": "string_url",
          "description": "Indicates the image of an item. The value can be a URL or a file location of the itemâ€™s image.",
          "minLength": 0,
          "maxLength": 255
        },
        "link": {
          "type": "string",
          "example": "string_url",
          "description": "Specifies the link of an item. This field defines a link to the product details page.",
          "minLength": 0,
          "maxLength": 255
        },
        "name": {
          "type": "string",
          "example": "Levis Jean",
          "description": "Indicates the name of an item. The minimum length is 0 and the maximum length is 255.",
          "minLength": 0,
          "maxLength": 255
        },
        "size": {
          "type": "string",
          "example": "XL",
          "description": "Defines the size measurement of an item. For example, XL, X, XS, XXX, etc.",
          "minLength": 0,
          "maxLength": 255
        },
        "style": {
          "type": "string",
          "example": "Half sleeves t-shirt",
          "description": "Defines the style of an item. This field defines the style variants of the item.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model contains the SKU related information."
    },
    "ItemInfo": {
      "type": "object",
      "properties": {
        "personalization": {
          "type": "array",
          "description": "List of Personalization objects contains the personalization details.",
          "items": {
            "$ref": "#/definitions/Personalization"
          }
        },
        "returnable": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether the product is allowed to return or not."
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Indicates the count of the item being ordered."
        },
        "lineId": {
          "type": "string",
          "example": "1",
          "description": "Indicates the unique line ID of the order which is used while splitting the order.",
          "minLength": 0,
          "maxLength": 255
        },
        "status": {
          "type": "string",
          "example": "SHIPPED",
          "description": "Indicates the current status of the item. The status can be SHIPPED, DELIVERED, APPROVED, etc.",
          "minLength": 0,
          "maxLength": 255
        },
        "nextstatus": {
          "type": "array",
          "description": "Indicates the nextstatus of an order.",
          "items": {
            "type": "string"
          }
        },
        "cancelable": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether the item can be canceled or not."
        },
        "statusReason": {
          "description": "The Reason object contains order returns reason details.",
          "$ref": "#/definitions/Reason"
        },
        "id": {
          "type": "string",
          "example": "1",
          "description": "Specifies the unique ID of the order item.",
          "minLength": 0,
          "maxLength": 255
        },
        "storeId": {
          "type": "string",
          "example": "1",
          "description": "Indicates a store ID of a particular order item.",
          "minLength": 0,
          "maxLength": 255
        },
        "storeName": {
          "type": "string",
          "example": "B2B Store",
          "description": "Indicates a store name of a particular order item.",
          "minLength": 0,
          "maxLength": 255
        },
        "sku": {
          "description": "SkuOms object describes about the sku information",
          "$ref": "#/definitions/SkuOms"
        },
        "statusTime": {
          "type": "array",
          "description": "Contains the status information of the ordered item.",
          "items": {
            "$ref": "#/definitions/OrderItemStatusTime"
          }
        }
      },
      "description": "This model contains the item related information."
    },
    "OrderDetails": {
      "type": "object",
      "required": [
        "orderItems",
        "updatedTime"
      ],
      "properties": {
        "channel": {
          "type": "string",
          "example": "Phone",
          "description": "Contains the channel used to create an order. The channels are usually used to define orders and customize it for the business. For example, mobile, instore, desktop, etc. ",
          "minLength": 0,
          "maxLength": 255
        },
        "updatedTime": {
          "type": "integer",
          "format": "int64",
          "example": 1537096108,
          "description": "Contains the last updated date and time of an order. It is represented in milliseconds since the UNIX epoch (January 1, 1970 00:00:00 UTC). This field should not be null or empty."
        },
        "orderItems": {
          "type": "array",
          "description": "Indicates the items of an order.",
          "items": {
            "$ref": "#/definitions/OrderItem"
          }
        },
        "status": {
          "type": "array",
          "description": "Indicates the status of an order.",
          "items": {
            "type": "string"
          }
        },
        "nextstatus": {
          "type": "array",
          "description": "Indicates the nextstatus of an order.",
          "items": {
            "type": "string"
          }
        },
        "createdTime": {
          "type": "integer",
          "format": "int64",
          "example": 1537096108,
          "description": "Contains the date and time in which the order was created. It is represented in milliseconds since the UNIX epoch (January 1, 1970 00:00:00 UTC). This field should not be null or empty."
        },
        "locale": {
          "type": "string",
          "description": "Indicates the locale in which the API response and the error messages will be responded. The locale should be mentioned in the <a href=\"http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html\">Java standard locale</a> format.",
          "minLength": 0,
          "maxLength": 255
        },
        "id": {
          "type": "string",
          "example": "1",
          "description": "Indicates the unique identifier of the order.",
          "minLength": 0,
          "maxLength": 255
        },
        "storeId": {
          "type": "string",
          "example": "1O",
          "description": "Contains the store ID of an order.",
          "minLength": 0,
          "maxLength": 255
        },
        "shippingInfo": {
          "description": "ShippingInfo object contains the shipping details of an order",
          "$ref": "#/definitions/ShippingInfo"
        },
        "deletable": {
          "type": "boolean",
          "description": "Indicates whether the order is deletable or not."
        }
      },
      "description": "This model contains the details of an order."
    },
    "OrderTaxInfo": {
      "type": "object",
      "required": [
        "mode",
        "taxCode",
        "taxInfo"
      ],
      "properties": {
        "taxCode": {
          "type": "string",
          "example": "tax123",
          "description": "Indicates the tax code of an order. This field should not be null or empty.",
          "minLength": 0,
          "maxLength": 255
        },
        "taxInfo": {
          "description": "Indicates tax information",
          "$ref": "#/definitions/TaxInfo"
        },
        "mode": {
          "type": "string",
          "example": "CASH",
          "description": "Indicates the mode in which the payment is made for the order. This field should not be null or empty. ",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model contains the order tax related information."
    },
    "OrderFinancials": {
      "type": "object",
      "properties": {
        "orderPriceInfo": {
          "type": "array",
          "description": "Indicates the price calculation of the order.",
          "items": {
            "$ref": "#/definitions/Math"
          }
        },
        "orderTaxInfo": {
          "type": "array",
          "description": "Indicates the tax calculation of the order.",
          "items": {
            "$ref": "#/definitions/OrderTaxInfo"
          }
        }
      },
      "description": "This model contains the financial details of the order."
    },
    "ItemFinancials": {
      "type": "object",
      "required": [
        "orderLevelTax",
        "priceInfo"
      ],
      "properties": {
        "priceInfo": {
          "type": "array",
          "description": "This model performs various mathematical calculations on an order item. It is a mandatory field.",
          "items": {
            "$ref": "#/definitions/Math"
          }
        },
        "orderLevelTax": {
          "type": "array",
          "description": "This model performs various mathematical calculations on an order item for tax. It is a mandatory field.",
          "items": {
            "$ref": "#/definitions/Math"
          }
        },
        "paymentStatus": {
          "type": "string",
          "description": "Indicates the payment status of the ordered item. The possible values are AUTHORIZED,SETTLED, SETTLED_FULFILLED, AUTHORIZED_REFUND, REFUNDED, AUTHORIZATION_CANCELED, CHARGEPENDING, REFUNDPENDING, PREAUTHORIZED, and BADDEBT.",
          "enum": [
            "AUTHORIZED",
            "SETTLED",
            "SETTLED_FULFILLED",
            "AUTHORIZED_REFUND",
            "REFUNDED",
            "AUTHORIZATION_CANCELED",
            "CHARGEPENDING",
            "REFUNDPENDING",
            "PREAUTHORIZED",
            "BADDEBT"
          ]
        }
      },
      "description": "This model contains the financial information of the item."
    },
    "Math": {
      "type": "object",
      "required": [
        "cost",
        "discount",
        "discountCost",
        "estimatedTax",
        "estimatedUnitTax",
        "paymentId",
        "personalizationCost",
        "personalizationDiscount",
        "personalizationSale",
        "roundOff",
        "sale",
        "tax",
        "taxable",
        "totalSale",
        "unitTax"
      ],
      "properties": {
        "conversionRatio": {
          "type": "number",
          "example": 1.0,
          "description": "Indicates the conversion ratio of an order or an order item."
        },
        "cost": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the cost price of an item. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "discount": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the discount of an item. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "discountCost": {
          "type": "number",
          "example": 50.0,
          "description": "Contains the discount cost of an item. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "estimatedTax": {
          "type": "number",
          "example": 50.0,
          "description": "Contains the estimated tax of an item. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "estimatedUnitTax": {
          "type": "number",
          "example": 50.0,
          "description": "Indicates the estimated unit tax of the ordered Item. It is used when the unitTax does not exist."
        },
        "fulfilmentPriceInfo": {
          "description": "The FulfilmentPriceInfo object contains estimated shipping price details",
          "$ref": "#/definitions/FulfilmentPriceInfo"
        },
        "mode": {
          "type": "string",
          "description": "Indicates the mode in which the payment is made. This field should not be null or empty.",
          "minLength": 0,
          "maxLength": 255
        },
        "paymentId": {
          "type": "string",
          "example": "12",
          "description": "Contains the payment identifier of an item."
        },
        "personalizationCost": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the personalization cost of an item. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "personalizationDiscount": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the personalization discount of an item. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "personalizationSale": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the personalization sale of an item. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "roundOff": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the adjustment value of the currency type. The lower bound of the currency type is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "sale": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the sale price of an item. A sale price is the discounted price of an item from the regular selling price. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "tax": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the tax levied on an item. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "taxable": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the taxable amount of an item. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "totalSale": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the total sale amount of an item. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "transaction": {
          "type": "array",
          "description": "This model contains about the payment transaction details.",
          "items": {
            "$ref": "#/definitions/PaymentTransaction"
          }
        },
        "unitTax": {
          "type": "number",
          "example": 0.05,
          "description": "Indicates the unit tax of the item. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places.This field should not be null or empty."
        }
      },
      "description": "This model performs various mathematical calculations on an order item or an order."
    },
    "PersonalizationPriceInfo": {
      "type": "object",
      "properties": {
        "conversionRatio": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the conversion ratio of the item. The minimum value is 0.01."
        },
        "discount": {
          "type": "array",
          "description": "Contains the discount information of the personalization. This field should not be null or empty.",
          "items": {
            "$ref": "#/definitions/Discount"
          }
        },
        "mode": {
          "type": "string",
          "example": "CASH",
          "description": "Indicates the mode in which the payment is made. This field should not be null or empty.",
          "minLength": 0,
          "maxLength": 255
        },
        "taxInfo": {
          "description": "This model contains about the tax information for the order/orderItem with respective to the discount applied for. ",
          "$ref": "#/definitions/TaxInfo"
        },
        "totalPersonalizationCost": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the total personalization cost of an item. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "totalPersonalizationPrice": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the total personalization price of an item. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "unitPersonalizationCost": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the unit personalization cost of an item. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "unitPersonalizationPrice": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the unit personalization price of an item. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        }
      },
      "description": "This model contains the price details of the personalized gift(s) or product(s)."
    },
    "Reason": {
      "type": "object",
      "properties": {
        "reasonCode": {
          "type": "string",
          "example": "R001",
          "description": "Indicates the reason code of the order which has to be returned.",
          "minLength": 0,
          "maxLength": 255
        },
        "reasonMessage": {
          "type": "string",
          "example": "Returned the order.",
          "description": "Indicates the reason message of the order which has to be canceled.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "The model contains the reason code and the reason message of the order returns."
    },
    "Item": {
      "type": "object",
      "properties": {
        "itemInfo": {
          "description": "This model contains the item price related information.",
          "$ref": "#/definitions/ItemInfo"
        },
        "itemFinancials": {
          "description": "ItemFinancials object- This model contains financial information of the item.",
          "$ref": "#/definitions/ItemFinancials"
        },
        "itemPromotions": {
          "type": "array",
          "description": "Contains the list of discount objects This object contains the details of a discount, including its code, name, description, payment mode, price details, offer ID, etc.",
          "items": {
            "$ref": "#/definitions/Discount"
          }
        }
      },
      "description": "This model describes an item of the order."
    },
    "ShippingMethodPriceInfo": {
      "type": "object",
      "properties": {
        "conversionRatio": {
          "type": "number",
          "example": 1.89,
          "description": "Contains the shipping conversion ratio based on the price of the item. The minimum value is 0.01. The price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "cost": {
          "type": "number",
          "example": 1.89,
          "description": "Contains the cost price of a shipping method. The minimum value is 0.01. The cost price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "discountInfo": {
          "type": "array",
          "description": "Contains the shipping discount information of a shipping method.",
          "items": {
            "$ref": "#/definitions/Discount"
          }
        },
        "estCost": {
          "type": "number",
          "example": 3.94,
          "description": "Contains the estimated cost price of a shipping method. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "estPrice": {
          "type": "number",
          "example": 2.39,
          "description": "Contains the estimated sale price of a shipping method. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "mode": {
          "type": "string",
          "example": "CASH",
          "description": "Indicates the mode in which the payment is made.",
          "minLength": 0,
          "maxLength": 255
        },
        "price": {
          "type": "number",
          "example": 2.79,
          "description": "Contains the sale price of a shipping method. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "taxInfo": {
          "description": "TaxInfo object- This holds about the tax information for the order/orderItem with respective to the discount applied for. ",
          "$ref": "#/definitions/TaxInfo"
        }
      },
      "description": "This model contains the price details related to the shipping method."
    },
    "TaxInfo": {
      "type": "object",
      "required": [
        "estimatedTax",
        "tax",
        "taxRate",
        "taxable"
      ],
      "properties": {
        "estimatedTax": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the estimated tax of an item. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "tax": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the tax levied on an item. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "taxable": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the taxable amount of an item. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "taxRate": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the tax percentage of an item. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        }
      },
      "description": "This model holds the tax information of the order or the order item based on the discount applied."
    },
    "ShippingInfo": {
      "type": "object",
      "required": [
        "shippingFinancials"
      ],
      "properties": {
        "shippingDetails": {
          "description": "FulfilmentInfo object- This model contains the shipping details of an item or an order.",
          "$ref": "#/definitions/FulfilmentInfo"
        },
        "shippingMethod": {
          "description": "ShippingMethod object contains shipping method related details.",
          "$ref": "#/definitions/ShippingMethod"
        },
        "shippingAddress": {
          "description": "The Address object contains customerâ€™s address details.",
          "$ref": "#/definitions/AddressOrchestration"
        },
        "shippingFinancials": {
          "type": "array",
          "description": "This model performs various mathematical calculations on an order item for shipping.",
          "items": {
            "$ref": "#/definitions/Math"
          }
        }
      },
      "description": "This model contains the shipping details of an order."
    },
    "AllowedPatchFields": {
      "type": "object",
      "properties": {
        "actionName": {
          "type": "string",
          "example": "Cancel",
          "description": "Indicates the action name to be displayed in the button label, which triggers the patch operation.",
          "readOnly": true
        },
        "allowedInputs": {
          "type": "array",
          "description": "Contains the input validation criteria that needs to be applied to make a status transition using a patch call.",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/AllowedInputs"
          }
        },
        "confirmationMessage": {
          "type": "string",
          "example": "Are you sure you want to cancel the order or order item ?",
          "description": "Indicates the confirmation message to be displayed while triggering the operation.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "example": "Cancelled",
          "description": "Indicates the status of the order item for which the given configuration needs to be applied.",
          "readOnly": true
        }
      },
      "description": "This model contains the order information for a patch API call."
    },
    "ReturnInfo": {
      "type": "object",
      "properties": {
        "returnsDetails": {
          "description": "FulfilmentInfo object- This model contains the shipping details of an item or an order. ",
          "$ref": "#/definitions/FulfilmentInfo"
        },
        "returnAddress": {
          "description": "The Address object contains customerâ€™s address details.",
          "$ref": "#/definitions/AddressOrchestration"
        },
        "returnMethod": {
          "description": "This model contains shipping method related details.",
          "$ref": "#/definitions/ShippingMethod"
        },
        "trackingUrl": {
          "type": "string",
          "example": "string_url",
          "description": "Indicates the tracking URL of an item or an order.",
          "minLength": 0,
          "maxLength": 255
        },
        "returnReceipt": {
          "type": "string",
          "example": "string_url",
          "description": "Indicates the return receipt details of an item or an order.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model contains the order return information."
    },
    "ReturnOrderOms": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "returnsInfo": {
          "description": "ReturnInfo object contains order return information.",
          "$ref": "#/definitions/ReturnInfo"
        },
        "items": {
          "type": "array",
          "description": "Indicates the order items of the order.",
          "items": {
            "$ref": "#/definitions/Item"
          }
        }
      },
      "description": "This model contains the return order details and the items information."
    },
    "AllowedInputs": {
      "type": "object",
      "properties": {
        "allowedCharacter": {
          "type": "string",
          "example": "Special Character",
          "description": "Indicates the allowed special character for response messages.",
          "readOnly": true
        },
        "allowedValues": {
          "type": "array",
          "example": "[\"Ordered a wrong product\",\"Travelling out of town\"]",
          "description": "Indicates list of values allowed for the patch operation",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "label": {
          "type": "string",
          "example": "ReasonCode/Quantity",
          "description": "Indicates the label name to be displayed for the field.",
          "readOnly": true
        },
        "max": {
          "type": "string",
          "example": "10",
          "description": "Indicates the maximum value to be passed in case of number datatype. It can be a Xpath to point reference to a specific field in the order response.",
          "readOnly": true
        },
        "maxXPath": {
          "type": "string",
          "example": "orderitem[]/quantity",
          "description": "Indicates the maximum value to be passed in case of number datatype. It can be a Xpath to point reference to a specific field in the order response.",
          "readOnly": true
        },
        "min": {
          "type": "string",
          "example": "1",
          "description": "Indicates the minimum value to be passed in case of number datatype. It can be a Xpath to point reference to a specific field in the order response.",
          "readOnly": true
        },
        "minXPath": {
          "type": "string",
          "example": "orderitem[]/quantity",
          "description": "Indicates the minimum value to be passed in case of number datatype. It can be a Xpath to point reference to a specific field in the order response.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "example": "reasonCode",
          "description": "Indicates the name of field.",
          "readOnly": true
        },
        "required": {
          "type": "boolean",
          "example": false,
          "description": "Indicates the field for the required or not.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "string",
          "description": "Indicates the data type of the field.",
          "readOnly": true
        }
      },
      "description": "This model contains order patch fields related details."
    },
    "SkuOms": {
      "type": "object",
      "properties": {
        "expectedPreOrderShipmentDatetime": {
          "type": "integer",
          "format": "int64",
          "example": 1537096108,
          "description": "Specifies the expected preorder shipment date in the timestamp. It is represented in milliseconds since the UNIX epoch (January 1, 1970 00:00:00 UTC). This field should not be null or empty. This date will be specified by the customer."
        },
        "skuInfo": {
          "description": "This model contains the SKU related information.",
          "$ref": "#/definitions/SkuInfo"
        },
        "productId": {
          "type": "string",
          "example": "12",
          "description": "Indicates the unique identifier of the product from the Catalog service. This field should not be null or empty.",
          "minLength": 0,
          "maxLength": 255
        },
        "preOrdered": {
          "type": "boolean",
          "example": false,
          "description": "Indicates whether the item can be prebooked or not."
        },
        "priceInfo": {
          "type": "array",
          "description": "Indicates the price information of the item. This field should not be null or empty.",
          "items": {
            "$ref": "#/definitions/ItemPriceInfo"
          }
        },
        "skuId": {
          "type": "string",
          "example": "232423",
          "description": "Indicates the unique ID of the SKU.",
          "minLength": 0,
          "maxLength": 255
        },
        "upc": {
          "type": "string",
          "example": "1234",
          "description": "Indicates the Universal Product Code (UPC), that are uniquely assigned to each trade item.",
          "minLength": 0,
          "maxLength": 255
        },
        "vendor": {
          "type": "string",
          "example": "john",
          "description": "Indicates the third-party seller name of the item.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model describes the item in the order item."
    },
    "OrderInfo": {
      "type": "object",
      "required": [
        "orderDetails",
        "orderFinancials"
      ],
      "properties": {
        "orderDetails": {
          "description": "Indicates the other details for the order",
          "$ref": "#/definitions/OrderDetails"
        },
        "orderFinancials": {
          "description": "Contains the financial details of the order.",
          "$ref": "#/definitions/OrderFinancials"
        },
        "orderPromotions": {
          "type": "array",
          "description": "Contains the applicable discount codes that can be applied to the order.",
          "items": {
            "$ref": "#/definitions/Discount"
          }
        }
      },
      "description": "This model contains the order related information."
    },
    "OrderOms": {
      "type": "object",
      "properties": {
        "allowedPatchFields": {
          "type": "array",
          "description": "Contains the information related to the fields that are required to be passed along to perform a patch operation.",
          "items": {
            "$ref": "#/definitions/AllowedPatchFields"
          }
        },
        "orderInfo": {
          "description": "Indicates the unique ID given to the order",
          "$ref": "#/definitions/OrderInfo"
        },
        "customer": {
          "description": "Indicates customer details of the order",
          "$ref": "#/definitions/CustomerOrchestration"
        },
        "shipmentPackages": {
          "type": "array",
          "description": "Indicates the shipment packages of the order.",
          "items": {
            "$ref": "#/definitions/ShipmentPackage"
          }
        },
        "payments": {
          "type": "array",
          "description": "Indicates the payment methods of the order.",
          "items": {
            "$ref": "#/definitions/PaymentOrchestration"
          }
        },
        "returns": {
          "type": "array",
          "description": "This model contains the return order details and the items information.",
          "items": {
            "$ref": "#/definitions/ReturnOrderOms"
          }
        }
      },
      "description": "This object contains the order information."
    },
    "ItemPriceInfo": {
      "type": "object",
      "required": [
        "conversionRatio",
        "costPrice",
        "mode"
      ],
      "properties": {
        "conversionRatio": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the conversion ratio of the item. The minimum value is 0.01."
        },
        "costPrice": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the cost price of an item.The cost price is the actual price of the item. The minimum value is 0.00. The estimated shipping price is is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "mode": {
          "type": "string",
          "example": "CASH",
          "description": "Indicates the mode in which the payment is made. This field should not be null or empty.",
          "minLength": 0,
          "maxLength": 255
        },
        "regPrice": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the regular price of an item. A regular price is the actual original price of the product. The minimum value is 0.00. The regular price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "roundOff": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the adjustment value of the currency type. The lower bound of the currency type is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "salePrice": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the sale price of an item. A sale price is the discounted price of an item from the regular selling price. The minimum value is 0.00. The sale price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "savePrice": {
          "type": "number",
          "example": 10.0,
          "description": "Contains the total amount reduced from the original price of an item. The save price is the total amount reduced from the original price. The minimum value is 0.00. The save price is rounded to a maximum of 2 decimal places. This field should not be null or empty."
        },
        "taxInfo": {
          "description": "TaxInfo object- This holds about the tax information for the order/orderItem with respective to the discount applied for. ",
          "$ref": "#/definitions/TaxInfo"
        }
      },
      "description": "This model contains the item price related information."
    },
    "PaymentTransaction": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "AUTHORIZED",
          "description": "Indicates the status of a payment transaction on an order or an item. This field can be null or empty.",
          "minLength": 0,
          "maxLength": 255
        },
        "value": {
          "type": "number",
          "example": 12.0,
          "description": "Indicates the payment transaction value on an order or an item. This field can be null or empty."
        }
      },
      "description": "This model contains the payment transaction details."
    },
    "FulfilmentPriceInfo": {
      "type": "object",
      "required": [
        "estimatedFulfilmentCost",
        "estimatedFulfilmentSale",
        "estimatedFulfilmentTax",
        "fulfilmentCost",
        "fulfilmentDiscount",
        "fulfilmentSale",
        "fulfilmentTax",
        "totalFulfilmentSale"
      ],
      "properties": {
        "estimatedFulfilmentCost": {
          "type": "number",
          "example": 100.0,
          "description": "Indicates the unit shipping price of the estimated cost price. This field should not be null or empty."
        },
        "estimatedFulfilmentSale": {
          "type": "number",
          "example": 100.0,
          "description": "Indicates the unit shipping price of the estimated sale price. This field should not be null or empty."
        },
        "estimatedFulfilmentTax": {
          "type": "number",
          "example": 0.05,
          "description": "Contains the estimated shipping tax of an item. The minimum value is 0.00. The sale price is rounded toa maximum of 2 decimal places. This field should not be null or empty."
        },
        "fulfilmentCost": {
          "type": "number",
          "example": 0.05,
          "description": "Indicates the shipping price for the cost price. This field should not be null or empty."
        },
        "fulfilmentDiscount": {
          "type": "number",
          "example": 0.05,
          "description": "Indicates the item level shipping discount. This field should not be null or empty."
        },
        "fulfilmentSale": {
          "type": "number",
          "example": 0.05,
          "description": "Indicates the shipping price for the sale price. This field should not be null or empty."
        },
        "fulfilmentTax": {
          "type": "number",
          "example": 0.05,
          "description": "Indicates the item level shipping tax.This field should not be null or empty."
        },
        "totalFulfilmentSale": {
          "type": "number",
          "example": 0.05,
          "description": "Indicates the total sale of the item level shipping . This field should not be null or empty."
        }
      },
      "description": "This object contains the estimated shipping price details."
    },
    "OrderItemStatusTime": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "SHIPPED",
          "description": "Indicates the status of the order item.",
          "minLength": 0,
          "maxLength": 255
        },
        "timeStamp": {
          "type": "integer",
          "format": "int64",
          "example": 1537096108,
          "description": "Contains the time stamp on which the item had moved to this status. It is represented in milliseconds since the UNIX epoch (January 1, 1970 00:00:00 UTC)."
        }
      },
      "description": "This object contains the item status information."
    },
    "ShipmentPackage": {
      "type": "object",
      "required": [
        "itemIds"
      ],
      "properties": {
        "shippingInfo": {
          "description": "ShippingInfo object contains the shipping details of an order.",
          "$ref": "#/definitions/ShippingInfo"
        },
        "itemIds": {
          "type": "array",
          "description": "Indicates the list of ordered item IDs.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "This model contains the shipping package details of an order."
    },
    "OrderItem": {
      "type": "object",
      "properties": {
        "allowedPatchFields": {
          "type": "array",
          "description": "Contains the information related to the fields that are required to be passed along to do a patch operation.",
          "items": {
            "$ref": "#/definitions/AllowedPatchFields"
          }
        },
        "item": {
          "description": "Item object - It describes about the item in the order item.",
          "$ref": "#/definitions/Item"
        },
        "shippingInfo": {
          "description": "ShippingInfo object contains the shipping details of an order",
          "$ref": "#/definitions/ShippingInfo"
        }
      },
      "description": "This model contains the order item details."
    },
    "DiscountPriceInfo": {
      "type": "object",
      "properties": {
        "taxInfo": {
          "description": "TaxInfo object- This holds about the tax information for the order/orderItem with respective to the discount applied for. ",
          "$ref": "#/definitions/TaxInfo"
        },
        "totalCost": {
          "type": "number",
          "example": 100.0,
          "description": "Contains the total discounted cost of an item or an order item. This field should not be null or empty."
        },
        "totalDiscount": {
          "type": "number",
          "example": 100.0,
          "description": "Contains the total discount of an item or an order item. This field should not be null or empty."
        },
        "unitCost": {
          "type": "number",
          "example": 100.0,
          "description": "Contains the unit cost discount of an item or an order item. This field should not be null or empty."
        },
        "unitDiscount": {
          "type": "number",
          "example": 100.0,
          "description": "Contains the unit discount of an item or an order item. This field should not be null or empty."
        }
      },
      "description": "This model contains the discount price details."
    },
    "FulfilmentIdDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 10001,
          "description": "Contains the unique identifier, which identifies the shipping status of an item or an order. This field should not be null or empty."
        },
        "status": {
          "type": "string",
          "example": "DELIVERED",
          "description": "Contains the shipping status of an item or an order. This field should not be null or empty.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model identifies the shipment status of an existing item or an order."
    },
    "FulfilmentInfo": {
      "type": "object",
      "properties": {
        "fulfilmentId": {
          "description": "This object identifies the shipment status for an existing item or an order. ",
          "$ref": "#/definitions/FulfilmentIdDTO"
        },
        "shippingContact": {
          "description": "The ContactInfo object contains customerâ€™s contact details.",
          "$ref": "#/definitions/ContactInfo"
        },
        "type": {
          "type": "string",
          "example": "DIGITAL",
          "description": "Contains the shipping type of an order or an order item. The possible values are:<br><ul><li>DIGITAL OR 0 - Indicates any order in the digital content; for example, PDF)</li><li>PHYSICAL OR 1 - Indicates any order in the physical content; for example, Shoes.</li><li>INSTORE OR 2 - Any order purchased from a store by the instore option</li></ul>",
          "enum": [
            "DIGITAL",
            "PHYSICAL",
            "INSTORE"
          ]
        },
        "trackingUrl": {
          "type": "string",
          "example": "string_url",
          "description": "Indicates the tracking URL of an item or an order.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model contains the shipping details of an item or an order."
    },
    "DeleteOrderInput": {
      "type": "object",
      "properties": {
        "reasonCode": {
          "type": "string",
          "example": "R001",
          "description": "Indicates the reason code of the order which has to be canceled.",
          "minLength": 0,
          "maxLength": 255
        },
        "reasonMessage": {
          "type": "string",
          "example": "Wrongly placed order.",
          "description": "Indicates the reason message of the order which has to be canceled.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This object captures a reason for canceling the order."
    },
    "DeleteOrderOutput": {
      "type": "object",
      "properties": {
        "reason": {
          "description": "Indicates the request send",
          "$ref": "#/definitions/DeleteOrderInput"
        },
        "responseCode": {
          "type": "string",
          "description": "Indicates the response code of the API call."
        },
        "responseMessage": {
          "type": "string",
          "description": "Indicates the response message of the API call."
        }
      },
      "description": "This model contains the reason for order cancellation."
    },
    "OrderUpdate": {
      "type": "object",
      "required": [
        "reason",
        "status"
      ],
      "properties": {
        "status": {
          "type": "string",
          "example": "MANAGERAPPROVED",
          "description": "Indicates the order status to be updated.",
          "minLength": 0,
          "maxLength": 255
        },
        "reason": {
          "description": "The model contains the reason code and the reason message of order returns.",
          "$ref": "#/definitions/Reason"
        }
      },
      "description": "This model contains the order level update details."
    },
    "DeleteItemInput": {
      "type": "object",
      "properties": {
        "quantity": {
          "type": "string",
          "example": "2",
          "description": "Indicates the quantity of the order item which has to be canceled.",
          "minLength": 0,
          "maxLength": 255
        },
        "reasonCode": {
          "type": "string",
          "example": "R001",
          "description": "Indicates the reason code of the order item, which has to be canceled.",
          "minLength": 0,
          "maxLength": 255
        },
        "reasonMessage": {
          "type": "string",
          "example": "Wrongly placed order.",
          "description": "Indicates the reason message of the order item which has to be canceled.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "The model contains the reason details of the canceled order item."
    },
    "DeleteItemOutput": {
      "type": "object",
      "properties": {
        "reason": {
          "description": "Indicates the request send",
          "$ref": "#/definitions/DeleteItemInput"
        },
        "responseCode": {
          "type": "string",
          "description": "Indicates the response code of the API call."
        },
        "responseMessage": {
          "type": "string",
          "description": "Indicates the response message of the API call."
        }
      },
      "description": "This model contains the reason for order item cancellation."
    },
    "ReturnItemInput": {
      "type": "object",
      "properties": {
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 2,
          "description": "Indicates the quantity of the order item which has to be returned.",
          "minimum": 0,
          "maximum": 255
        },
        "reasonCode": {
          "type": "string",
          "example": "R001",
          "description": "Indicates the reason code of the order item which has to be returned.",
          "minLength": 0,
          "maxLength": 255
        },
        "reasonMessage": {
          "type": "string",
          "example": "Wrongly placed order.",
          "description": "Indicates the reason message of the order item which has to be returned.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "The model contains the reason details of the returned order item."
    },
    "ReturnItemOutput": {
      "type": "object",
      "properties": {
        "reason": {
          "description": "Indicates the request send",
          "$ref": "#/definitions/ReturnItemInput"
        },
        "responseCode": {
          "type": "string",
          "description": "Indicates the response code of the API call."
        },
        "responseMessage": {
          "type": "string",
          "description": "Indicates the response message of the API call."
        }
      },
      "description": "This model contains the reason details of the order item returned."
    },
    "ReturnOrderInput": {
      "type": "object",
      "properties": {
        "reasonCode": {
          "type": "string",
          "example": "R001",
          "description": "Indicates the reason code of the order which has to be returned.",
          "minLength": 0,
          "maxLength": 255
        },
        "reasonMessage": {
          "type": "string",
          "example": "Wrongly placed order.",
          "description": "Indicates the reason message of the order which has to be returned.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This object captures a reason for returning the order."
    },
    "ReturnOrderOutput": {
      "type": "object",
      "properties": {
        "reason": {
          "description": "Indicates the request send",
          "$ref": "#/definitions/ReturnOrderInput"
        },
        "responseCode": {
          "type": "string",
          "description": "Indicates the response code of the API call."
        },
        "responseMessage": {
          "type": "string",
          "description": "Indicates the response message of the API call."
        }
      },
      "description": "This model contains the reason details of the order returned."
    },
    "SubscriptionsAPIResponse": {
      "type": "object",
      "properties": {
        "pageableInfo": {
          "$ref": "#/definitions/PageableInfo"
        },
        "subscriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionResponse"
          }
        }
      }
    },
    "ItemResponse": {
      "type": "object",
      "required": [
        "id",
        "price"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "preparationPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "price": {
          "type": "number",
          "format": "float"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "skus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkuResponse"
          }
        }
      }
    },
    "SubscriptionAddressResponse": {
      "type": "object",
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "addressLine3": {
          "type": "string"
        },
        "addressVersion": {
          "type": "integer",
          "format": "int64"
        },
        "canReceiveSMS": {
          "type": "boolean"
        },
        "city": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "county": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "profileAddressId": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "storeId": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        }
      }
    },
    "ShippingResponse": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "deliveryPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "instruction": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "SubscriptionResponse": {
      "type": "object",
      "required": [
        "frequencyEndType",
        "frequencyType",
        "status",
        "type"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "collectionId": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "createdTime": {
          "type": "integer",
          "format": "int64"
        },
        "currentInstance": {
          "type": "integer",
          "format": "int32"
        },
        "firstDeliveryDate": {
          "type": "integer",
          "format": "int64"
        },
        "frequencyEndDate": {
          "type": "integer",
          "format": "int64"
        },
        "frequencyEndType": {
          "type": "string"
        },
        "frequencyPeriod": {
          "type": "integer",
          "format": "int64"
        },
        "frequencyStartDate": {
          "type": "integer",
          "format": "int64"
        },
        "frequencyType": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "storeId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "nextDeliveryDate": {
          "type": "integer",
          "format": "int64"
        },
        "nextDeliveryEditFreezeDate": {
          "type": "integer",
          "format": "int64"
        },
        "nextNotificationDate": {
          "type": "integer",
          "format": "int64"
        },
        "nextOrderCreationDate": {
          "type": "integer",
          "format": "int64"
        },
        "itemInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemResponse"
          }
        },
        "addressInfo": {
          "$ref": "#/definitions/SubscriptionAddressResponse"
        },
        "paymentInfo": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "revisedDeliveryDate": {
          "type": "integer",
          "format": "int64"
        },
        "shippingInfo": {
          "$ref": "#/definitions/ShippingResponse"
        },
        "updatedBy": {
          "type": "string"
        },
        "updatedTime": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "SkuResponse": {
      "type": "object",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "optionalQuantity": {
          "type": "integer",
          "format": "int32"
        },
        "productId": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "DEFAULT",
            "BUNDLE",
            "MAIN",
            "MANDATIORY",
            "OPTIONAL"
          ]
        }
      }
    },
    "SFSubscriptionItem": {
      "type": "object",
      "properties": {
        "price": {
          "type": "number",
          "format": "float",
          "description": "Indicates the price. "
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates the quantity. "
        },
        "preparationPeriod": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates the preparationPeriod. "
        },
        "properties": {
          "type": "object",
          "description": "Indicates the custom properties that can be added to the subscription item. ",
          "additionalProperties": {
            "type": "string"
          }
        },
        "skus": {
          "type": "array",
          "description": "Indicates the skus retrieved from subscription service. ",
          "items": {
            "$ref": "#/definitions/SFSubscriptionSkuResponse"
          }
        }
      },
      "description": "This model represents the entire subscription of the customer."
    },
    "SFSubscriptionDeliveryStore": {
      "type": "object",
      "properties": {
        "storeId": {
          "type": "string",
          "example": "MyStore",
          "description": "Specifies the physical store identifier, which uniquely locates the physical store. There is no validation occurs on the length and the value.",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "description": "This model specifies the delivery store from where the SKU will be fulfilled."
    },
    "SFSubscription": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates the id."
        },
        "userId": {
          "type": "string",
          "description": "Indicates the userId."
        },
        "accountId": {
          "type": "string",
          "description": "Indicates the accountId."
        },
        "storeId": {
          "type": "string",
          "description": "Indicates the storeId."
        },
        "status": {
          "type": "string",
          "description": "Indicates the status."
        },
        "type": {
          "type": "string",
          "description": "Indicates the type."
        },
        "frequencyType": {
          "type": "string",
          "description": "Indicates the frequency type."
        },
        "frequencyPeriod": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates the frequency period."
        },
        "frequencyStartDate": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates the frequency start date."
        },
        "frequncyEndType": {
          "type": "string",
          "description": "Indicates the frequncy end type."
        },
        "frequencyEndDate": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates the frequency end date."
        },
        "firstDeliveryDate": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates the first delivery date."
        },
        "revisedDeliveryDate": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates the revised delivery date."
        },
        "nextDeliveryEditFreezeDate": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates the next Delivery Edit Freeze Date."
        },
        "nextNotifiatonDate": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates the nextNotifiatonDate."
        },
        "nextOrderCreationDate": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates the nextOrderCreationDate."
        },
        "nextDeliveryDate": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates the nextDeliveryDate."
        },
        "currentInstance": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates the current instance number."
        },
        "lastOrderId": {
          "type": "string",
          "description": "Indicates the last ordered id."
        },
        "lastOrderDate": {
          "type": "integer",
          "format": "int64",
          "description": "Indicates the last ordered date."
        },
        "itemInfo": {
          "type": "array",
          "description": "Indicates the list of item that can be added to the subscription.",
          "items": {
            "$ref": "#/definitions/SFSubscriptionItem"
          }
        },
        "properties": {
          "type": "object",
          "description": "Indicates the custom properties that can be added to the subscription.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "deliveryDetails": {
          "description": "Delivery  details for the item or the items of the subscription.",
          "$ref": "#/definitions/SFSubscriptionDeliveryDetails"
        },
        "payments": {
          "type": "array",
          "description": "Indicates the list of payments added to the subscription.",
          "items": {
            "$ref": "#/definitions/PaymentOrchestration"
          }
        }
      },
      "description": "This model represents the entire subscription of the customer."
    },
    "SFSubscriptionSkuResponse": {
      "type": "object",
      "required": [
        "id",
        "name",
        "productId",
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "example": "BUNDLE",
          "description": "Indicates the subtype of the bundle SKU. There are no subtypes for DEFAULT and SKU. The following are the subtypes of the bundle SKU:<ul><li>BUNDLE: Indicates a bundle SKU.<li>MAIN: Indicates the main SKU of a bundle.</li><li>MANDATORY: Indicates the mandatory SKU of a bundle.</li><li>OPTIONAL: Indicates the optional SKU of a bundle. </li></ul><br> This attribute cannot be changed once the item is added to the subscription. If this needs to be changed then that item needs to be removed from the cart and a new item should be added with the correct value.",
          "enum": [
            "DEFAULT",
            "BUNDLE",
            "MAIN",
            "MANDATIORY",
            "OPTIONAL"
          ]
        },
        "id": {
          "type": "string",
          "example": "110075278",
          "description": "Indicates the SKU identifier of the SKU in the subscription. This attribute cannot be changed once the item is added to the subscription. If this needs to be changed then that item needs to be removed from the cart and new item should be added with the correct value. It is a mandatory field. It should not be null or empty.",
          "minLength": 0,
          "maxLength": 255
        },
        "name": {
          "type": "string",
          "example": "Mate Finish Tier",
          "description": "Indicates the SKU name of the SKU in the subscription.It should not be null or empty."
        },
        "optionalSkuQuantity": {
          "type": "integer",
          "format": "int32",
          "example": "5.0",
          "description": "Indicates the quantity for the optional quantity of a bundle. When a bundle is added to the subscription, it will be set to the quantity of the bundle. It can be updated."
        },
        "productId": {
          "type": "string",
          "example": "214006",
          "description": "Indicates the product identifier of the SKU in the subscription. This attribute cannot be changed once the item is added to the subscription. If this needs to be changed then that item needs to be removed from the subscription and new item should be added with the correct value. It is a mandatory field. It should not be null or empty.",
          "minLength": 0,
          "maxLength": 255
        }
      }
    },
    "SFSubscriptionDeliveryDetails": {
      "type": "object",
      "properties": {
        "deliveryId": {
          "type": "string",
          "example": "353SDGDS24",
          "description": "Indicates the unique identifier of the delivery details. It is generated in the subscription service. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "isDeliveredAlone": {
          "type": "boolean",
          "example": true,
          "description": "Specifies whether the item is delivered at the item level or at the subscription level. <ul><li>The value true indicates the item level delivery.</li><li>The value false indicates the subscription level delivery.</li></ul>"
        },
        "deliveryType": {
          "type": "string",
          "example": "DIGITAL",
          "description": "Indicates the type of delivery opted by the customer. The value can be PHYSICAL, DIGITAL, or STOREPICKUP.<ul><li>PHYSICAL - Corresponds to physical delivery of an item.</li> <li>DIGITAL- Corresponds to digital delivery of an item.</li> <li>STOREPICKUP - Corresponds to delivery where an item is picked up from the store.</li></ul>",
          "minLength": 0,
          "maxLength": 255
        },
        "deliveryInstructions": {
          "type": "string",
          "example": "Leave it at the door steps",
          "description": "Indicates the delivery instructions requested by the customer. There is no validation occurs on the length and the value.",
          "minLength": 0,
          "maxLength": 255
        },
        "deliverOnOrBefore": {
          "type": "integer",
          "format": "int64",
          "example": 153129361068312,
          "description": "Indicates the delivery date requested by the customer. The item should be delivered on or before this date. Indicates timestamp in milliseconds since the UNIX epoch (January 1, 1970 00:00:00 UTC). There is no validation occurs on this field."
        },
        "deliveryCharge": {
          "type": "number",
          "example": 5.99,
          "description": "Indicates the delivery charge for the delivery of a single quantity."
        },
        "totalDeliveryCharge": {
          "type": "number",
          "example": 5.99,
          "description": "Indicates the delivery charge for the delivery of total quantity.quantity."
        },
        "store": {
          "description": "Store information of where the SKU needs to be picked up from.",
          "$ref": "#/definitions/SFSubscriptionDeliveryStore"
        },
        "address": {
          "description": "Delivery address for the items that are in the subscription. Only one address can be tied to a subscription altogather and or to a subscription item.",
          "$ref": "#/definitions/AddressOrchestration"
        },
        "methods": {
          "type": "array",
          "description": "Indicates the delivery methods based on the delivery type opted by the customer.",
          "items": {
            "$ref": "#/definitions/SFSubscriptionDeliveryMethod"
          }
        },
        "properties": {
          "type": "object",
          "description": " Indicates the custom properties of the delivery. ",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "This model contains delivery details of the item or the items in the subscription."
    },
    "SFSubscriptionDeliveryMethod": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "Economy",
          "description": "Indicates the delivery method identifier generated by the Shipping service.It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "name": {
          "type": "string",
          "example": "Economy Shipping",
          "description": "Indicates the name or description of the method. This field provides more details for the consumer to choose an option. There is no validation occurs on the length and the value. It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "cost": {
          "type": "number",
          "example": 10.99,
          "description": "Indicates the delivery charge depending on the selected delivery method. It is a readonly field"
        },
        "deliveryTime": {
          "type": "integer",
          "format": "int64",
          "example": 1531284825860,
          "description": "Indicates the expected date and time when the delivery can be made. The value is specified in milliseconds since the UNIX epoch (January 1, 1970 00:00:00 UTC). It is a readonly field"
        },
        "deliveryPeriod": {
          "type": "integer",
          "format": "int64",
          "example": 5,
          "description": "Indicates the expected period when the delivery can be made. The value is specified in long. It is a readonly field"
        },
        "isTaxIncluded": {
          "type": "boolean",
          "example": false,
          "description": "Specifies whether the tax is already included in the delivery charge or not. It is a readonly field<ul><li>The value true indicates the tax is included.</li><li>The value false indicates the tax is not included.</li></ul>"
        },
        "taxationId": {
          "type": "string",
          "example": "SHIPPING",
          "description": "Indicates the taxation identifier to be used for the delivery charge tax calculation. This is obtained from the Shipping service. This field helps the third-party services to calculate the tax.It is a readonly field",
          "minLength": 0,
          "maxLength": 255
        },
        "isSelected": {
          "type": "boolean",
          "example": false,
          "description": "Indicates if this method is opted by the consumer or if it is the only delivery method option available. <ul><li>The value true indicates the given delivery method is the only delivery method option available.</li><li>The value false indicates this is opted by the consumer.</li></ul>"
        }
      },
      "description": "This model provides the delivery method details. It is based on the delivery type opted by the customer. The customer has the option to choose a delivery method."
    }
  }
}